{"version":3,"sources":["webpack://[name]/webpack/bootstrap","webpack://[name]/./exports/Task/ConfigTask.ts","webpack://[name]/./node_modules/ansi-styles/index.js","webpack://[name]/./node_modules/balanced-match/index.js","webpack://[name]/./node_modules/brace-expansion/index.js","webpack://[name]/./node_modules/chalk/index.js","webpack://[name]/./node_modules/chalk/templates.js","webpack://[name]/./node_modules/color-convert/conversions.js","webpack://[name]/./node_modules/color-convert/index.js","webpack://[name]/./node_modules/color-convert/route.js","webpack://[name]/./node_modules/color-name/index.js","webpack://[name]/./node_modules/concat-map/index.js","webpack://[name]/./node_modules/escape-string-regexp/index.js","webpack://[name]/./node_modules/fs.realpath/index.js","webpack://[name]/./node_modules/fs.realpath/old.js","webpack://[name]/./node_modules/glob/common.js","webpack://[name]/./node_modules/glob/glob.js","webpack://[name]/./node_modules/glob/sync.js","webpack://[name]/./node_modules/has-flag/index.js","webpack://[name]/./node_modules/inflight/inflight.js","webpack://[name]/./node_modules/inherits/inherits.js","webpack://[name]/./node_modules/inherits/inherits_browser.js","webpack://[name]/./node_modules/minimatch/minimatch.js","webpack://[name]/./node_modules/once/once.js","webpack://[name]/./node_modules/path-is-absolute/index.js","webpack://[name]/./node_modules/shelljs/commands.js","webpack://[name]/./node_modules/shelljs/shell.js","webpack://[name]/./node_modules/shelljs/src sync ^\\.\\/.*$","webpack://[name]/./node_modules/shelljs/src/cat.js","webpack://[name]/./node_modules/shelljs/src/cd.js","webpack://[name]/./node_modules/shelljs/src/chmod.js","webpack://[name]/./node_modules/shelljs/src/common.js","webpack://[name]/./node_modules/shelljs/src/cp.js","webpack://[name]/./node_modules/shelljs/src/dirs.js","webpack://[name]/./node_modules/shelljs/src/echo.js","webpack://[name]/./node_modules/shelljs/src/error.js","webpack://[name]/./node_modules/shelljs/src/exec-child.js","webpack://[name]/./node_modules/shelljs/src/exec.js","webpack://[name]/./node_modules/shelljs/src/find.js","webpack://[name]/./node_modules/shelljs/src/grep.js","webpack://[name]/./node_modules/shelljs/src/head.js","webpack://[name]/./node_modules/shelljs/src/ln.js","webpack://[name]/./node_modules/shelljs/src/ls.js","webpack://[name]/./node_modules/shelljs/src/mkdir.js","webpack://[name]/./node_modules/shelljs/src/mv.js","webpack://[name]/./node_modules/shelljs/src/popd.js","webpack://[name]/./node_modules/shelljs/src/pushd.js","webpack://[name]/./node_modules/shelljs/src/pwd.js","webpack://[name]/./node_modules/shelljs/src/rm.js","webpack://[name]/./node_modules/shelljs/src/sed.js","webpack://[name]/./node_modules/shelljs/src/set.js","webpack://[name]/./node_modules/shelljs/src/sort.js","webpack://[name]/./node_modules/shelljs/src/tail.js","webpack://[name]/./node_modules/shelljs/src/tempdir.js","webpack://[name]/./node_modules/shelljs/src/test.js","webpack://[name]/./node_modules/shelljs/src/to.js","webpack://[name]/./node_modules/shelljs/src/toEnd.js","webpack://[name]/./node_modules/shelljs/src/touch.js","webpack://[name]/./node_modules/shelljs/src/uniq.js","webpack://[name]/./node_modules/shelljs/src/which.js","webpack://[name]/./node_modules/supports-color/index.js","webpack://[name]/(webpack)/buildin/module.js","webpack://[name]/./node_modules/wrappy/wrappy.js","webpack://[name]/./node_modules/yamljs/lib/Dumper.js","webpack://[name]/./node_modules/yamljs/lib/Escaper.js","webpack://[name]/./node_modules/yamljs/lib/Exception/DumpException.js","webpack://[name]/./node_modules/yamljs/lib/Exception/ParseException.js","webpack://[name]/./node_modules/yamljs/lib/Exception/ParseMore.js","webpack://[name]/./node_modules/yamljs/lib/Inline.js","webpack://[name]/./node_modules/yamljs/lib/Parser.js","webpack://[name]/./node_modules/yamljs/lib/Pattern.js","webpack://[name]/./node_modules/yamljs/lib/Unescaper.js","webpack://[name]/./node_modules/yamljs/lib/Utils.js","webpack://[name]/./node_modules/yamljs/lib/Yaml.js","webpack://[name]/./src/Cli/Config/Config.ts","webpack://[name]/./src/Cli/FileSystem/FileSystem.ts","webpack://[name]/./src/Cli/Log/Log.ts","webpack://[name]/./src/Core/Arrays/Arrays.ts","webpack://[name]/./src/Core/Config/Config.ts","webpack://[name]/./src/Core/Numbers/Numbers.ts","webpack://[name]/./src/Core/Objects/Objects.ts","webpack://[name]/./src/Core/Strings/Strings.ts","webpack://[name]/./src/Task/AbstractTask.ts","webpack://[name]/./src/Task/ConfigTask.ts","webpack://[name]/external \"assert\"","webpack://[name]/external \"child_process\"","webpack://[name]/external \"events\"","webpack://[name]/external \"fs\"","webpack://[name]/external \"os\"","webpack://[name]/external \"path\"","webpack://[name]/external \"util\""],"names":[],"mappings":";;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;;ACjFA,oGAAqD;AAErD,MAAM,CAAC,OAAO,GAAG,uBAAU,CAAC;;;;;;;;;;;;;ACH5B,8CAAa;AACb,qBAAqB,mBAAO,CAAC,4DAAe;;AAE5C;AACA;AACA,kBAAkB,cAAc;AAChC;;AAEA;AACA;AACA,kBAAkB,aAAa,EAAE,EAAE,KAAK;AACxC;;AAEA;AACA;AACA,kBAAkB,aAAa,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO;AAC9D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,SAAS;AAC7B,qBAAqB,SAAS;AAC9B;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;ACpKY;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;AC7DA,gBAAgB,mBAAO,CAAC,sDAAY;AACpC,eAAe,mBAAO,CAAC,8DAAgB;;AAEvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB,uBAAuB;AACvB;AACA;AACA;;AAEA;AACA;AACA,mCAAmC;AACnC,oCAAoC;AACpC;AACA;AACA;;;AAGA;AACA;AACA,wCAAwC,GAAG,IAAI;AAC/C;AACA;AACA;;AAEA;AACA,qBAAqB,KAAK;;AAE1B;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B,uCAAuC,GAAG;AAC1C,YAAY,GAAG,yBAAyB;AACxC;AACA;AACA,8BAA8B;AAC9B,cAAc,GAAG;AACjB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,KAAK;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ,EAAE;AACV,2BAA2B;AAC3B,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,YAAY,KAAK,QAAQ,EAAE,IAAI,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,mCAAmC,2BAA2B;AAC9D;;AAEA,iBAAiB,cAAc;AAC/B,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;ACvMa;AACb,2BAA2B,mBAAO,CAAC,0EAAsB;AACzD,mBAAmB,mBAAO,CAAC,wDAAa;AACxC,oBAAoB,mBAAO,CAAC,8DAAgB;;AAE5C,iBAAiB,mBAAO,CAAC,yDAAgB;;AAEzC;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8CAA8C;;AAE9C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA,2BAA2B;;AAE3B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,aAAa;AAC9B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAiC,WAAW,IAAI,UAAU;AAC1D;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gBAAgB,oBAAoB;AACpC,6CAA6C;AAC7C;AACA;;AAEA;AACA;;AAEA;;AAEA,yBAAyB;AACzB;AACA,wCAAwC;;;;;;;;;;;;;ACnO3B;AACb,uCAAuC,EAAE,UAAU,EAAE,UAAU,uEAAuE;AACtI;AACA;AACA,kCAAkC,EAAE,UAAU,EAAE;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH,6DAA6D,MAAM,cAAc,KAAK;AACtF;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4CAA4C,UAAU;AACtD;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,gBAAgB,mCAAmC;AACnD,GAAG;AACH;AACA,uCAAuC;AACvC;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;;AAEF;;AAEA;AACA,sDAAsD,cAAc,kBAAkB,+BAA+B,KAAK;AAC1H;AACA;;AAEA;AACA;;;;;;;;;;;;AC/HA;AACA,kBAAkB,mBAAO,CAAC,sDAAY;;AAEtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO,2BAA2B;AAClC,OAAO,2BAA2B;AAClC,OAAO,2BAA2B;AAClC,OAAO,2BAA2B;AAClC,QAAQ,4BAA4B;AACpC,OAAO,2BAA2B;AAClC,OAAO,2BAA2B;AAClC,OAAO,2BAA2B;AAClC,OAAO,6BAA6B;AACpC,WAAW,iCAAiC;AAC5C,UAAU,gCAAgC;AAC1C,WAAW,iCAAiC;AAC5C,OAAO,qCAAqC;AAC5C,SAAS,2CAA2C;AACpD,QAAQ;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB;AACrE,mDAAmD,cAAc;AACjE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;;AAEA;;AAEA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO,QAAQ;AAC/B,gBAAgB,OAAO,QAAQ;AAC/B,iBAAiB,OAAO,OAAO;AAC/B,iBAAiB,OAAO,OAAO;AAC/B,gBAAgB,QAAQ,OAAO;AAC/B,gBAAgB,QAAQ,OAAO;AAC/B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,sEAAsE;;AAEtE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+CAA+C,EAAE,UAAU,EAAE;AAC7D;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,aAAa,aAAa;AACzC;AACA,eAAe,aAAa,aAAa;AACzC;AACA,eAAe,aAAa,aAAa;AACzC;AACA,eAAe,aAAa,aAAa;AACzC;AACA,eAAe,aAAa,aAAa;AACzC;AACA,eAAe,aAAa;AAC5B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACn2BA,kBAAkB,mBAAO,CAAC,kEAAe;AACzC,YAAY,mBAAO,CAAC,sDAAS;;AAE7B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,kCAAkC;AAClC;AACA;AACA,uCAAuC,SAAS;AAChD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,wDAAwD,uCAAuC;AAC/F,sDAAsD,qCAAqC;;AAE3F;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAE;AACF,CAAC;;AAED;;;;;;;;;;;;AC7EA,kBAAkB,mBAAO,CAAC,kEAAe;;AAEzC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;;AAEzB;;AAEA;AACA;AACA;;AAEA,yCAAyC,SAAS;AAClD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qCAAqC,SAAS;AAC9C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;AC/FY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACvJA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACZa;;AAEb,8BAA8B;;AAE9B;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,mBAAO,CAAC,cAAI;AACrB;AACA;;AAEA;AACA;AACA,UAAU,mBAAO,CAAC,mDAAU;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,kBAAM;AAC/B;AACA,SAAS,mBAAO,CAAC,cAAI;;AAErB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA,0CAA0C,EAAE;AAC5C,CAAC;AACD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC9SA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAAS,mBAAO,CAAC,cAAI;AACrB,WAAW,mBAAO,CAAC,kBAAM;AACzB,gBAAgB,mBAAO,CAAC,wDAAW;AACnC,iBAAiB,mBAAO,CAAC,kEAAkB;AAC3C;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wCAAwC,YAAY;AACpD;;AAEA;AACA,qCAAqC,YAAY;AACjD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,WAAW,gCAAgC;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0CAA0C,OAAO;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;AC3OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAAS,mBAAO,CAAC,wDAAa;AAC9B,gBAAgB,mBAAO,CAAC,wDAAW;AACnC;AACA,eAAe,mBAAO,CAAC,qDAAU;AACjC,SAAS,mBAAO,CAAC,sBAAQ;AACzB,WAAW,mBAAO,CAAC,kBAAM;AACzB,aAAa,mBAAO,CAAC,sBAAQ;AAC7B,iBAAiB,mBAAO,CAAC,kEAAkB;AAC3C,eAAe,mBAAO,CAAC,8CAAW;AAClC,aAAa,mBAAO,CAAC,kDAAa;AAClC;AACA;AACA,eAAe,mBAAO,CAAC,qDAAU;AACjC,WAAW,mBAAO,CAAC,kBAAM;AACzB;AACA;;AAEA,WAAW,mBAAO,CAAC,yCAAM;;AAEzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iBAAiB,mBAAmB;AACpC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,gCAAgC,qBAAqB;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,yBAAyB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;AClxBA;AACA;;AAEA,SAAS,mBAAO,CAAC,wDAAa;AAC9B,gBAAgB,mBAAO,CAAC,wDAAW;AACnC;AACA,WAAW,mBAAO,CAAC,8CAAW;AAC9B,WAAW,mBAAO,CAAC,kBAAM;AACzB,WAAW,mBAAO,CAAC,kBAAM;AACzB,aAAa,mBAAO,CAAC,sBAAQ;AAC7B,iBAAiB,mBAAO,CAAC,kEAAkB;AAC3C,aAAa,mBAAO,CAAC,kDAAa;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AClea;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA,aAAa,mBAAO,CAAC,+CAAQ;AAC7B;AACA,WAAW,mBAAO,CAAC,yCAAM;;AAEzB;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;AACA;;;;;;;;;;;;ACrDA;AACA,aAAa,mBAAO,CAAC,kBAAM;AAC3B;AACA;AACA;AACA,CAAC;AACD;AACA,mBAAmB,mBAAO,CAAC,0EAAuB;AAClD;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC1BA;AACA;;AAEA,YAAY;AACZ;AACA,SAAS,mBAAO,CAAC,kBAAM;AACvB,CAAC;;AAED;AACA,aAAa,mBAAO,CAAC,gEAAiB;;AAEtC;AACA,QAAQ,uCAAuC;AAC/C,QAAQ,2BAA2B;AACnC,QAAQ,2BAA2B;AACnC,QAAQ,2BAA2B;AACnC,QAAQ;AACR;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC,IAAI;;AAE7C;AACA;AACA;;AAEA;AACA,gCAAgC;;AAEhC,aAAa;AACb;AACA;AACA;AACA;AACA,GAAG,IAAI;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK,IAAI;AACT,KAAK,GAAG;AACR,KAAK,KAAK;AACV,KAAK,IAAI,IAAI,EAAE;AACf,KAAK,IAAI,EAAE,IAAI;AACf;AACA;AACA,KAAK,IAAI,OAAO,IAAI;AACpB,KAAK,EAAE,OAAO,EAAE;AAChB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sBAAsB,IAAI;AAC1B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,IAAI;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,IAAI;AACvC;AACA;AACA;AACA,gCAAgC,EAAE,EAAE,KAAK;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wCAAwC,QAAQ;AAChD;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,sBAAsB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,6CAA6C;AAC7C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;;AAEA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK,6CAA6C;;AAElD;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;;;;;;;;;;;;AC15BA,aAAa,mBAAO,CAAC,+CAAQ;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzCa;;AAEb;AACA;AACA;;AAEA;AACA;AACA,yCAAyC,EAAE;AAC3C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,0DAAc;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAO,CAAC,sDAAY;AACpB,EAAE,4EAAQ,IAAQ,UAAU,CAAC;AAC7B,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,mBAAO,CAAC,wDAAa;;AAErC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2E;;;;;;;;;;;ACrFA,aAAa,mBAAO,CAAC,sDAAU;AAC/B,SAAS,mBAAO,CAAC,cAAI;;AAErB;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3EA,SAAS,mBAAO,CAAC,cAAI;AACrB,aAAa,mBAAO,CAAC,sDAAU;;AAE/B,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,kCAAkC;AAClC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtCA,aAAa,mBAAO,CAAC,sDAAU;AAC/B,SAAS,mBAAO,CAAC,cAAI;AACrB,WAAW,mBAAO,CAAC,kBAAM;;AAEzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;;AAED;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iCAAiC;AACjC;AACA;AACA,WAAW;AACX;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;;ACvNA;AACA;AACa;;AAEb,SAAS,mBAAO,CAAC,cAAI;AACrB,SAAS,mBAAO,CAAC,cAAI;AACrB,WAAW,mBAAO,CAAC,yCAAM;AACzB,YAAY,mBAAO,CAAC,2CAAI;;AAExB;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B;;AAE1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG,4BAA4B;AAC/B;AACA,GAAG,sCAAsC;AACzC,eAAe;AACf,GAAG,sCAAsC;AACzC;AACA;AACA,4BAA4B;;AAE5B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA,YAAY,4BAA4B;AACxC,yBAAyB,uBAAuB;AAChD,YAAY,0CAA0C;AACtD,mBAAmB,qBAAqB,GAAG,2BAA2B;AACtE;AACA,wBAAwB,YAAY,EAAE;AACtC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,iCAAiC;;AAEjC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP,+DAA+D;AAC/D;AACA,KAAK;AACL,GAAG,OAAO;AACV;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,OAAO;AACP,+DAA+D;AAC/D;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mCAAmC;AACnC;AACA,OAAO,OAAO;AACd;AACA,kDAAkD,WAAW;AAC7D,SAAS;AACT,2BAA2B;AAC3B;;AAEA;AACA,+CAA+C;AAC/C;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX,oBAAoB;AACpB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,gCAAgC;;AAEhC;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACndA,SAAS,mBAAO,CAAC,cAAI;AACrB,WAAW,mBAAO,CAAC,kBAAM;AACzB,aAAa,mBAAO,CAAC,sDAAU;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,kCAAkC;AAClC,KAAK;AACL;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,0DAA0D;AAC1D;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oCAAoC;AACpC,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC;AACjC,yDAAyD,iBAAiB;AAC1E,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,0DAA0D,iBAAiB;AAC3E,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C,mEAAmE;AAClH,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iGAAiG,iBAAiB;AAClH;AACA;AACA;;AAEA;AACA,eAAe;AACf;;AAEA;AACA;AACA,gFAAgF,iBAAiB;AACjG;AACA;;AAEA;AACA;AACA,GAAG,EAAE;;AAEL;AACA;AACA;;;;;;;;;;;;AC/SA,aAAa,mBAAO,CAAC,sDAAU;AAC/B,UAAU,mBAAO,CAAC,8CAAM;AACxB,WAAW,mBAAO,CAAC,kBAAM;;AAEzB;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA,gBAAgB;AAChB,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,kBAAkB;AAClB,wBAAwB;AACxB,WAAW;AACX,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACnNA,aAAa,mBAAO,CAAC,kBAAM;;AAE3B,aAAa,mBAAO,CAAC,sDAAU;;AAE/B;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;;;;;;;;;;;AC9DA,aAAa,mBAAO,CAAC,sDAAU;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACdA,kDAAI,4CAAY;AAChB;AACA;;AAEA,mBAAmB,mBAAO,CAAC,oCAAe;AAC1C,SAAS,mBAAO,CAAC,cAAI;;AAErB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACtCA,8DAAa,mBAAO,CAAC,sDAAU;AAC/B,eAAe,mBAAO,CAAC,wDAAW;AAClC,WAAW,mBAAO,CAAC,gDAAO;AAC1B,WAAW,mBAAO,CAAC,kBAAM;AACzB,SAAS,mBAAO,CAAC,cAAI;AACrB,YAAY,mBAAO,CAAC,oCAAe;;AAEnC;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA,OAAO,+BAA+B,EAAE;AACxC,OAAO,+BAA+B,EAAE;AACxC,OAAO,+BAA+B,EAAE;;AAExC;AACA;AACA;AACA;AACA,gCAAgC,+BAA+B;AAC/D;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,YAAY;AACtD;AACA,mDAAmD,WAAW;AAC9D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,kBAAkB,oCAAoC;AACtD;AACA;AACA;AACA;AACA,+CAA+C,sBAAsB;AACrE;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;;;;;;AC/MA,WAAW,mBAAO,CAAC,kBAAM;AACzB,aAAa,mBAAO,CAAC,sDAAU;AAC/B,UAAU,mBAAO,CAAC,8CAAM;;AAExB,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qCAAqC,4BAA4B,EAAE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA,WAAW,6BAA6B;AACxC;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;;;;;;;;;;;;AC5DA,aAAa,mBAAO,CAAC,sDAAU;AAC/B,SAAS,mBAAO,CAAC,cAAI;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,iBAAiB;AAC9E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA;AACA;;;;;;;;;;;;ACxEA,aAAa,mBAAO,CAAC,sDAAU;AAC/B,SAAS,mBAAO,CAAC,cAAI;;AAErB;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,eAAe,cAAc;AAC7B,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4DAA4D,iBAAiB;AAC7E;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;;;;;;;;;;;AC1GA,SAAS,mBAAO,CAAC,cAAI;AACrB,WAAW,mBAAO,CAAC,kBAAM;AACzB,aAAa,mBAAO,CAAC,sDAAU;;AAE/B;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C,iBAAiB;AAChE;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kDAAkD,iBAAiB;AACnE,KAAK;AACL;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA,kDAAkD,iBAAiB;AACnE;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxEA,WAAW,mBAAO,CAAC,kBAAM;AACzB,SAAS,mBAAO,CAAC,cAAI;AACrB,aAAa,mBAAO,CAAC,sDAAU;AAC/B,WAAW,mBAAO,CAAC,yCAAM;;AAEzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,yBAAyB,KAAK;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,aAAa;AACtB;AACA,KAAK;AACL,0DAA0D,iBAAiB;AAC3E;AACA;;AAEA;AACA;AACA;AACA;AACA,6CAA6C,yCAAyC;AACtF;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC5IA,aAAa,mBAAO,CAAC,sDAAU;AAC/B,SAAS,mBAAO,CAAC,cAAI;AACrB,WAAW,mBAAO,CAAC,kBAAM;;AAEzB;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qDAAqD,iBAAiB;AACtE,OAAO;AACP,0EAA0E,iBAAiB;AAC3F;AACA,aAAa;AACb,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,6DAA6D,iBAAiB;AAC9E,aAAa;AACb;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,sEAAsE,iBAAiB;AACvF;AACA,GAAG;AACH;AACA,CAAC;AACD;;;;;;;;;;;;ACnGA,SAAS,mBAAO,CAAC,cAAI;AACrB,WAAW,mBAAO,CAAC,kBAAM;AACzB,aAAa,mBAAO,CAAC,sDAAU;AAC/B,SAAS,mBAAO,CAAC,8CAAM;AACvB,SAAS,mBAAO,CAAC,8CAAM;;AAEvB;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,yDAAyD,iBAAiB;AAC1E,aAAa;AACb;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,+FAA+F,iBAAiB;AAChH;AACA;AACA;;AAEA;AACA,6DAA6D,iBAAiB;AAC9E,aAAa;AACb;;AAEA;AACA,mDAAmD,iBAAiB;AACpE,aAAa;AACb;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,EAAE;AACL;AACA,CAAC;AACD;;;;;;;;;;;;ACrHA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA,WAAW,mBAAO,CAAC,kBAAM;AACzB,aAAa,mBAAO,CAAC,sDAAU;;AAE/B;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACfA,aAAa,mBAAO,CAAC,sDAAU;AAC/B,SAAS,mBAAO,CAAC,cAAI;;AAErB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,iBAAiB,kBAAkB;AACnC;AACA;;AAEA,iCAAiC;AACjC;AACA,KAAK,OAAO;AACZ;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX;AACA;AACA,uCAAuC;AACvC;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,GAAG;AACH,8EAA8E,iBAAiB;AAC/F;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH,gDAAgD,iBAAiB;AACjE;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH,yCAAyC,iBAAiB;AAC1D;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,6CAA6C,iBAAiB;AAC9D;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD,KAAK;AACL;AACA;AACA,4DAA4D,iBAAiB;AAC7E;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG,EAAE;AACL;AACA,CAAC;AACD;;;;;;;;;;;;ACxMA,aAAa,mBAAO,CAAC,sDAAU;AAC/B,SAAS,mBAAO,CAAC,cAAI;;AAErB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2CAA2C;AAC3C,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,6DAA6D,iBAAiB;AAC9E;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;;;;;;;;;;;ACtFA,aAAa,mBAAO,CAAC,sDAAU;;AAE/B;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;ACvDA,aAAa,mBAAO,CAAC,sDAAU;AAC/B,SAAS,mBAAO,CAAC,cAAI;;AAErB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,4DAA4D,iBAAiB;AAC7E;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;AChGA,aAAa,mBAAO,CAAC,sDAAU;AAC/B,SAAS,mBAAO,CAAC,cAAI;;AAErB;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA,eAAe,cAAc;AAC7B,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4DAA4D,iBAAiB;AAC7E;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,GAAG;;AAEH;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;;;;;;;;;;;AC/EA,aAAa,mBAAO,CAAC,sDAAU;AAC/B,SAAS,mBAAO,CAAC,cAAI;AACrB,SAAS,mBAAO,CAAC,cAAI;;AAErB;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;;AAEpC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;AC1EA,aAAa,mBAAO,CAAC,sDAAU;AAC/B,SAAS,mBAAO,CAAC,cAAI;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,oCAAoC;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,eAAe;AACf,CAAC;AACD;;;;;;;;;;;;ACpFA,aAAa,mBAAO,CAAC,sDAAU;AAC/B,SAAS,mBAAO,CAAC,cAAI;AACrB,WAAW,mBAAO,CAAC,kBAAM;;AAEzB;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,4EAA4E,iBAAiB;AAC7F;AACA;AACA;;;;;;;;;;;;ACpCA,aAAa,mBAAO,CAAC,sDAAU;AAC/B,SAAS,mBAAO,CAAC,cAAI;AACrB,WAAW,mBAAO,CAAC,kBAAM;;AAEzB;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,6EAA6E,iBAAiB;AAC9F;AACA;AACA;;;;;;;;;;;;ACnCA,aAAa,mBAAO,CAAC,sDAAU;AAC/B,SAAS,mBAAO,CAAC,cAAI;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;AC9GA,aAAa,mBAAO,CAAC,sDAAU;AAC/B,SAAS,mBAAO,CAAC,cAAI;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC,KAAK;AACL,eAAe,iCAAiC;AAChD,KAAK;AACL,eAAe,kBAAkB;AACjC;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;;;;;;;;;;;AC3FA,aAAa,mBAAO,CAAC,sDAAU;AAC/B,SAAS,mBAAO,CAAC,cAAI;AACrB,WAAW,mBAAO,CAAC,kBAAM;;AAEzB;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA,+BAA+B,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK;;AAEtE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,sBAAsB;AACzC;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,OAAO;AACd;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,2BAA2B;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrHa;AACb,WAAW,mBAAO,CAAC,cAAI;AACvB,gBAAgB,mBAAO,CAAC,kDAAU;;AAElC;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iCAAiC,GAAG;AACpC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;;;;;;;;;;;AChCA;AACA;;AAEA,QAAQ,mBAAO,CAAC,mDAAS;;AAEzB,SAAS,mBAAO,CAAC,qDAAU;;AAE3B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,CAAC;;AAED;;;;;;;;;;;;ACpDA;AACA;;AAEA,UAAU,mBAAO,CAAC,uDAAW;;AAE7B;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,uDAAuD,8BAA8B;AACrF;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;;AAEA,0DAA0D;;AAE1D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,CAAC;;AAED;;;;;;;;;;;;ACvDA;AACA;AACA,oCAAoC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC5R,cAAc;;AAEd;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA,CAAC;;AAED;;;;;;;;;;;;AC1BA;AACA;AACA,oCAAoC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC5R,cAAc;;AAEd;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA,CAAC;;AAED;;;;;;;;;;;;AC1BA;AACA;AACA,oCAAoC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC5R,cAAc;;AAEd;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA,CAAC;;AAED;;;;;;;;;;;;AC1BA;AACA;AACA,0CAA0C,iCAAiC,OAAO,OAAO,6CAA6C,EAAE,WAAW;;AAEnJ,UAAU,mBAAO,CAAC,uDAAW;;AAE7B,YAAY,mBAAO,CAAC,2DAAa;;AAEjC,UAAU,mBAAO,CAAC,uDAAW;;AAE7B,QAAQ,mBAAO,CAAC,mDAAS;;AAEzB,iBAAiB,mBAAO,CAAC,yFAA4B;;AAErD,YAAY,mBAAO,CAAC,+EAAuB;;AAE3C,gBAAgB,mBAAO,CAAC,uFAA2B;;AAEnD;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,UAAU;AAChD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,eAAe,0BAA0B;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,cAAc;AACxD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,CAAC;;AAED;;;;;;;;;;;;ACpeA;AACA;;AAEA,SAAS,mBAAO,CAAC,qDAAU;;AAE3B,UAAU,mBAAO,CAAC,uDAAW;;AAE7B,QAAQ,mBAAO,CAAC,mDAAS;;AAEzB,iBAAiB,mBAAO,CAAC,yFAA4B;;AAErD,YAAY,mBAAO,CAAC,+EAAuB;;AAE3C;AACA;;AAEA;;AAEA;;AAEA;;AAEA,+GAA+G;;AAE/G,8GAA8G;;AAE9G;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,SAAS;AAC7D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,UAAU;AACzD;AACA;AACA;AACA;AACA;AACA,2DAA2D,UAAU;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,UAAU;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,sEAAsE;AAC/E;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,oBAAoB;AACtD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,UAAU;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,CAAC;;AAED;;;;;;;;;;;;AC1lBA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,CAAC;;AAED;;;;;;;;;;;;ACtHA;AACA;;AAEA,QAAQ,mBAAO,CAAC,mDAAS;;AAEzB,UAAU,mBAAO,CAAC,uDAAW;;AAE7B;AACA;;AAEA,kGAAkG,EAAE,cAAc,EAAE,cAAc,EAAE;;AAEpI;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,CAAC;;AAED;;;;;;;;;;;;AClFA;AACA;AACA,cAAc;;AAEd,UAAU,mBAAO,CAAC,uDAAW;;AAE7B;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,8BAA8B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,sCAAsC,UAAU;AAChD;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,WAAW,mBAAG,CAAC,cAAI;AACnB;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,CAAC;;AAED;;;;;;;;;;;;ACxSA;AACA;;AAEA,SAAS,mBAAO,CAAC,qDAAU;;AAE3B,SAAS,mBAAO,CAAC,qDAAU;;AAE3B,QAAQ,mBAAO,CAAC,mDAAS;;AAEzB;AACA;;AAEA;AACA;AACA;AACA;AACA;A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","file":"ConfigTask.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./exports/Task/ConfigTask.ts\");\n","\nimport {ConfigTask} from \"../../src/Task/ConfigTask\";\n\nmodule.exports = ConfigTask;","'use strict';\nconst colorConvert = require('color-convert');\n\nconst wrapAnsi16 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => function () {\n\tconst rgb = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\t\t\tgray: [90, 39],\n\n\t\t\t// Bright color\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Fix humans\n\tstyles.color.grey = styles.color.gray;\n\n\tfor (const groupName of Object.keys(styles)) {\n\t\tconst group = styles[groupName];\n\n\t\tfor (const styleName of Object.keys(group)) {\n\t\t\tconst style = group[styleName];\n\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\n\t\tObject.defineProperty(styles, 'codes', {\n\t\t\tvalue: codes,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tconst ansi2ansi = n => n;\n\tconst rgb2rgb = (r, g, b) => [r, g, b];\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 0)\n\t};\n\n\tstyles.bgColor.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 10)\n\t};\n\n\tfor (let key of Object.keys(colorConvert)) {\n\t\tif (typeof colorConvert[key] !== 'object') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst suite = colorConvert[key];\n\n\t\tif (key === 'ansi16') {\n\t\t\tkey = 'ansi';\n\t\t}\n\n\t\tif ('ansi16' in suite) {\n\t\t\tstyles.color.ansi[key] = wrapAnsi16(suite.ansi16, 0);\n\t\t\tstyles.bgColor.ansi[key] = wrapAnsi16(suite.ansi16, 10);\n\t\t}\n\n\t\tif ('ansi256' in suite) {\n\t\t\tstyles.color.ansi256[key] = wrapAnsi256(suite.ansi256, 0);\n\t\t\tstyles.bgColor.ansi256[key] = wrapAnsi256(suite.ansi256, 10);\n\t\t}\n\n\t\tif ('rgb' in suite) {\n\t\t\tstyles.color.ansi16m[key] = wrapAnsi16m(suite.rgb, 0);\n\t\t\tstyles.bgColor.ansi16m[key] = wrapAnsi16m(suite.rgb, 10);\n\t\t}\n\t}\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n","'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    if(a===b) {\n      return [ai, bi];\n    }\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n","var concatMap = require('concat-map');\nvar balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction identity(e) {\n  return e;\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m || /\\$$/.test(m.pre)) return [str];\n\n  var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isSequence = isNumericSequence || isAlphaSequence;\n  var isOptions = m.body.indexOf(',') >= 0;\n  if (!isSequence && !isOptions) {\n    // {a},b}\n    if (m.post.match(/,.*\\}/)) {\n      str = m.pre + '{' + m.body + escClose + m.post;\n      return expand(str);\n    }\n    return [str];\n  }\n\n  var n;\n  if (isSequence) {\n    n = m.body.split(/\\.\\./);\n  } else {\n    n = parseCommaParts(m.body);\n    if (n.length === 1) {\n      // x{{a,b}}y ==> x{a}y x{b}y\n      n = expand(n[0], false).map(embrace);\n      if (n.length === 1) {\n        var post = m.post.length\n          ? expand(m.post, false)\n          : [''];\n        return post.map(function(p) {\n          return m.pre + n[0] + p;\n        });\n      }\n    }\n  }\n\n  // at this point, n is the parts, and we know it's not a comma set\n  // with a single entry.\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  var N;\n\n  if (isSequence) {\n    var x = numeric(n[0]);\n    var y = numeric(n[1]);\n    var width = Math.max(n[0].length, n[1].length)\n    var incr = n.length == 3\n      ? Math.abs(numeric(n[2]))\n      : 1;\n    var test = lte;\n    var reverse = y < x;\n    if (reverse) {\n      incr *= -1;\n      test = gte;\n    }\n    var pad = n.some(isPadded);\n\n    N = [];\n\n    for (var i = x; test(i, y); i += incr) {\n      var c;\n      if (isAlphaSequence) {\n        c = String.fromCharCode(i);\n        if (c === '\\\\')\n          c = '';\n      } else {\n        c = String(i);\n        if (pad) {\n          var need = width - c.length;\n          if (need > 0) {\n            var z = new Array(need + 1).join('0');\n            if (i < 0)\n              c = '-' + z + c.slice(1);\n            else\n              c = z + c;\n          }\n        }\n      }\n      N.push(c);\n    }\n  } else {\n    N = concatMap(n, function(el) { return expand(el, false) });\n  }\n\n  for (var j = 0; j < N.length; j++) {\n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre + N[j] + post[k];\n      if (!isTop || isSequence || expansion)\n        expansions.push(expansion);\n    }\n  }\n\n  return expansions;\n}\n\n","'use strict';\nconst escapeStringRegexp = require('escape-string-regexp');\nconst ansiStyles = require('ansi-styles');\nconst stdoutColor = require('supports-color').stdout;\n\nconst template = require('./templates.js');\n\nconst isSimpleWindowsTerm = process.platform === 'win32' && !(process.env.TERM || '').toLowerCase().startsWith('xterm');\n\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16m'];\n\n// `color-convert` models to exclude from the Chalk API due to conflicts and such\nconst skipModels = new Set(['gray']);\n\nconst styles = Object.create(null);\n\nfunction applyOptions(obj, options) {\n\toptions = options || {};\n\n\t// Detect level if not set manually\n\tconst scLevel = stdoutColor ? stdoutColor.level : 0;\n\tobj.level = options.level === undefined ? scLevel : options.level;\n\tobj.enabled = 'enabled' in options ? options.enabled : obj.level > 0;\n}\n\nfunction Chalk(options) {\n\t// We check for this.template here since calling `chalk.constructor()`\n\t// by itself will have a `this` of a previously constructed chalk object\n\tif (!this || !(this instanceof Chalk) || this.template) {\n\t\tconst chalk = {};\n\t\tapplyOptions(chalk, options);\n\n\t\tchalk.template = function () {\n\t\t\tconst args = [].slice.call(arguments);\n\t\t\treturn chalkTag.apply(null, [chalk.template].concat(args));\n\t\t};\n\n\t\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\t\tObject.setPrototypeOf(chalk.template, chalk);\n\n\t\tchalk.template.constructor = Chalk;\n\n\t\treturn chalk.template;\n\t}\n\n\tapplyOptions(this, options);\n}\n\n// Use bright blue on Windows as the normal blue color is illegible\nif (isSimpleWindowsTerm) {\n\tansiStyles.blue.open = '\\u001B[94m';\n}\n\nfor (const key of Object.keys(ansiStyles)) {\n\tansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n\n\tstyles[key] = {\n\t\tget() {\n\t\t\tconst codes = ansiStyles[key];\n\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key);\n\t\t}\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\treturn build.call(this, this._styles || [], true, 'visible');\n\t}\n};\n\nansiStyles.color.closeRe = new RegExp(escapeStringRegexp(ansiStyles.color.close), 'g');\nfor (const model of Object.keys(ansiStyles.color.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.color[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.color.close,\n\t\t\t\t\tcloseRe: ansiStyles.color.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nansiStyles.bgColor.closeRe = new RegExp(escapeStringRegexp(ansiStyles.bgColor.close), 'g');\nfor (const model of Object.keys(ansiStyles.bgColor.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.bgColor[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.bgColor.close,\n\t\t\t\t\tcloseRe: ansiStyles.bgColor.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, styles);\n\nfunction build(_styles, _empty, key) {\n\tconst builder = function () {\n\t\treturn applyStyle.apply(builder, arguments);\n\t};\n\n\tbuilder._styles = _styles;\n\tbuilder._empty = _empty;\n\n\tconst self = this;\n\n\tObject.defineProperty(builder, 'level', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.level;\n\t\t},\n\t\tset(level) {\n\t\t\tself.level = level;\n\t\t}\n\t});\n\n\tObject.defineProperty(builder, 'enabled', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.enabled;\n\t\t},\n\t\tset(enabled) {\n\t\t\tself.enabled = enabled;\n\t\t}\n\t});\n\n\t// See below for fix regarding invisible grey/dim combination on Windows\n\tbuilder.hasGrey = this.hasGrey || key === 'gray' || key === 'grey';\n\n\t// `__proto__` is used because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tbuilder.__proto__ = proto; // eslint-disable-line no-proto\n\n\treturn builder;\n}\n\nfunction applyStyle() {\n\t// Support varags, but simply cast to string in case there's only one arg\n\tconst args = arguments;\n\tconst argsLen = args.length;\n\tlet str = String(arguments[0]);\n\n\tif (argsLen === 0) {\n\t\treturn '';\n\t}\n\n\tif (argsLen > 1) {\n\t\t// Don't slice `arguments`, it prevents V8 optimizations\n\t\tfor (let a = 1; a < argsLen; a++) {\n\t\t\tstr += ' ' + args[a];\n\t\t}\n\t}\n\n\tif (!this.enabled || this.level <= 0 || !str) {\n\t\treturn this._empty ? '' : str;\n\t}\n\n\t// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n\t// see https://github.com/chalk/chalk/issues/58\n\t// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.\n\tconst originalDim = ansiStyles.dim.open;\n\tif (isSimpleWindowsTerm && this.hasGrey) {\n\t\tansiStyles.dim.open = '';\n\t}\n\n\tfor (const code of this._styles.slice().reverse()) {\n\t\t// Replace any instances already present with a re-opening code\n\t\t// otherwise only the part of the string until said closing code\n\t\t// will be colored, and the rest will simply be 'plain'.\n\t\tstr = code.open + str.replace(code.closeRe, code.open) + code.close;\n\n\t\t// Close the styling before a linebreak and reopen\n\t\t// after next line to fix a bleed issue on macOS\n\t\t// https://github.com/chalk/chalk/pull/92\n\t\tstr = str.replace(/\\r?\\n/g, `${code.close}$&${code.open}`);\n\t}\n\n\t// Reset the original `dim` if we changed it to work around the Windows dimmed gray issue\n\tansiStyles.dim.open = originalDim;\n\n\treturn str;\n}\n\nfunction chalkTag(chalk, strings) {\n\tif (!Array.isArray(strings)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn [].slice.call(arguments, 1).join(' ');\n\t}\n\n\tconst args = [].slice.call(arguments, 2);\n\tconst parts = [strings.raw[0]];\n\n\tfor (let i = 1; i < strings.length; i++) {\n\t\tparts.push(String(args[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'));\n\t\tparts.push(String(strings.raw[i]));\n\t}\n\n\treturn template(chalk, parts.join(''));\n}\n\nObject.defineProperties(Chalk.prototype, styles);\n\nmodule.exports = Chalk(); // eslint-disable-line new-cap\nmodule.exports.supportsColor = stdoutColor;\nmodule.exports.default = module.exports; // For TypeScript\n","'use strict';\nconst TEMPLATE_REGEX = /(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi;\n\nconst ESCAPES = new Map([\n\t['n', '\\n'],\n\t['r', '\\r'],\n\t['t', '\\t'],\n\t['b', '\\b'],\n\t['f', '\\f'],\n\t['v', '\\v'],\n\t['0', '\\0'],\n\t['\\\\', '\\\\'],\n\t['e', '\\u001B'],\n\t['a', '\\u0007']\n]);\n\nfunction unescape(c) {\n\tif ((c[0] === 'u' && c.length === 5) || (c[0] === 'x' && c.length === 3)) {\n\t\treturn String.fromCharCode(parseInt(c.slice(1), 16));\n\t}\n\n\treturn ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, args) {\n\tconst results = [];\n\tconst chunks = args.trim().split(/\\s*,\\s*/g);\n\tlet matches;\n\n\tfor (const chunk of chunks) {\n\t\tif (!isNaN(chunk)) {\n\t\t\tresults.push(Number(chunk));\n\t\t} else if ((matches = chunk.match(STRING_REGEX))) {\n\t\t\tresults.push(matches[2].replace(ESCAPE_REGEX, (m, escape, chr) => escape ? unescape(escape) : chr));\n\t\t} else {\n\t\t\tthrow new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction parseStyle(style) {\n\tSTYLE_REGEX.lastIndex = 0;\n\n\tconst results = [];\n\tlet matches;\n\n\twhile ((matches = STYLE_REGEX.exec(style)) !== null) {\n\t\tconst name = matches[1];\n\n\t\tif (matches[2]) {\n\t\t\tconst args = parseArguments(name, matches[2]);\n\t\t\tresults.push([name].concat(args));\n\t\t} else {\n\t\t\tresults.push([name]);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction buildStyle(chalk, styles) {\n\tconst enabled = {};\n\n\tfor (const layer of styles) {\n\t\tfor (const style of layer.styles) {\n\t\t\tenabled[style[0]] = layer.inverse ? null : style.slice(1);\n\t\t}\n\t}\n\n\tlet current = chalk;\n\tfor (const styleName of Object.keys(enabled)) {\n\t\tif (Array.isArray(enabled[styleName])) {\n\t\t\tif (!(styleName in current)) {\n\t\t\t\tthrow new Error(`Unknown Chalk style: ${styleName}`);\n\t\t\t}\n\n\t\t\tif (enabled[styleName].length > 0) {\n\t\t\t\tcurrent = current[styleName].apply(current, enabled[styleName]);\n\t\t\t} else {\n\t\t\t\tcurrent = current[styleName];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn current;\n}\n\nmodule.exports = (chalk, tmp) => {\n\tconst styles = [];\n\tconst chunks = [];\n\tlet chunk = [];\n\n\t// eslint-disable-next-line max-params\n\ttmp.replace(TEMPLATE_REGEX, (m, escapeChar, inverse, style, close, chr) => {\n\t\tif (escapeChar) {\n\t\t\tchunk.push(unescape(escapeChar));\n\t\t} else if (style) {\n\t\t\tconst str = chunk.join('');\n\t\t\tchunk = [];\n\t\t\tchunks.push(styles.length === 0 ? str : buildStyle(chalk, styles)(str));\n\t\t\tstyles.push({inverse, styles: parseStyle(style)});\n\t\t} else if (close) {\n\t\t\tif (styles.length === 0) {\n\t\t\t\tthrow new Error('Found extraneous } in Chalk template literal');\n\t\t\t}\n\n\t\t\tchunks.push(buildStyle(chalk, styles)(chunk.join('')));\n\t\t\tchunk = [];\n\t\t\tstyles.pop();\n\t\t} else {\n\t\t\tchunk.push(chr);\n\t\t}\n\t});\n\n\tchunks.push(chunk.join(''));\n\n\tif (styles.length > 0) {\n\t\tconst errMsg = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\n\t\tthrow new Error(errMsg);\n\t}\n\n\treturn chunks.join('');\n};\n","/* MIT license */\nvar cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar rdif;\n\tvar gdif;\n\tvar bdif;\n\tvar h;\n\tvar s;\n\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar v = Math.max(r, g, b);\n\tvar diff = v - Math.min(r, g, b);\n\tvar diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","var conversions = require('./conversions');\nvar route = require('./route');\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","var conversions = require('./conversions');\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","module.exports = function (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        var x = fn(xs[i], i);\n        if (isArray(x)) res.push.apply(res, x);\n        else res.push(x);\n    }\n    return res;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","'use strict';\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nmodule.exports = function (str) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn str.replace(matchOperatorsRe, '\\\\$&');\n};\n","module.exports = realpath\nrealpath.realpath = realpath\nrealpath.sync = realpathSync\nrealpath.realpathSync = realpathSync\nrealpath.monkeypatch = monkeypatch\nrealpath.unmonkeypatch = unmonkeypatch\n\nvar fs = require('fs')\nvar origRealpath = fs.realpath\nvar origRealpathSync = fs.realpathSync\n\nvar version = process.version\nvar ok = /^v[0-5]\\./.test(version)\nvar old = require('./old.js')\n\nfunction newError (er) {\n  return er && er.syscall === 'realpath' && (\n    er.code === 'ELOOP' ||\n    er.code === 'ENOMEM' ||\n    er.code === 'ENAMETOOLONG'\n  )\n}\n\nfunction realpath (p, cache, cb) {\n  if (ok) {\n    return origRealpath(p, cache, cb)\n  }\n\n  if (typeof cache === 'function') {\n    cb = cache\n    cache = null\n  }\n  origRealpath(p, cache, function (er, result) {\n    if (newError(er)) {\n      old.realpath(p, cache, cb)\n    } else {\n      cb(er, result)\n    }\n  })\n}\n\nfunction realpathSync (p, cache) {\n  if (ok) {\n    return origRealpathSync(p, cache)\n  }\n\n  try {\n    return origRealpathSync(p, cache)\n  } catch (er) {\n    if (newError(er)) {\n      return old.realpathSync(p, cache)\n    } else {\n      throw er\n    }\n  }\n}\n\nfunction monkeypatch () {\n  fs.realpath = realpath\n  fs.realpathSync = realpathSync\n}\n\nfunction unmonkeypatch () {\n  fs.realpath = origRealpath\n  fs.realpathSync = origRealpathSync\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar pathModule = require('path');\nvar isWindows = process.platform === 'win32';\nvar fs = require('fs');\n\n// JavaScript implementation of realpath, ported from node pre-v6\n\nvar DEBUG = process.env.NODE_DEBUG && /fs/.test(process.env.NODE_DEBUG);\n\nfunction rethrow() {\n  // Only enable in debug mode. A backtrace uses ~1000 bytes of heap space and\n  // is fairly slow to generate.\n  var callback;\n  if (DEBUG) {\n    var backtrace = new Error;\n    callback = debugCallback;\n  } else\n    callback = missingCallback;\n\n  return callback;\n\n  function debugCallback(err) {\n    if (err) {\n      backtrace.message = err.message;\n      err = backtrace;\n      missingCallback(err);\n    }\n  }\n\n  function missingCallback(err) {\n    if (err) {\n      if (process.throwDeprecation)\n        throw err;  // Forgot a callback but don't know where? Use NODE_DEBUG=fs\n      else if (!process.noDeprecation) {\n        var msg = 'fs: missing callback ' + (err.stack || err.message);\n        if (process.traceDeprecation)\n          console.trace(msg);\n        else\n          console.error(msg);\n      }\n    }\n  }\n}\n\nfunction maybeCallback(cb) {\n  return typeof cb === 'function' ? cb : rethrow();\n}\n\nvar normalize = pathModule.normalize;\n\n// Regexp that finds the next partion of a (partial) path\n// result is [base_with_slash, base], e.g. ['somedir/', 'somedir']\nif (isWindows) {\n  var nextPartRe = /(.*?)(?:[\\/\\\\]+|$)/g;\n} else {\n  var nextPartRe = /(.*?)(?:[\\/]+|$)/g;\n}\n\n// Regex to find the device root, including trailing slash. E.g. 'c:\\\\'.\nif (isWindows) {\n  var splitRootRe = /^(?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/][^\\\\\\/]+)?[\\\\\\/]*/;\n} else {\n  var splitRootRe = /^[\\/]*/;\n}\n\nexports.realpathSync = function realpathSync(p, cache) {\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return cache[p];\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstatSync(base);\n      knownHard[base] = true;\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  // NB: p.length changes.\n  while (pos < p.length) {\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || (cache && cache[base] === base)) {\n      continue;\n    }\n\n    var resolvedLink;\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // some known symbolic link.  no need to stat again.\n      resolvedLink = cache[base];\n    } else {\n      var stat = fs.lstatSync(base);\n      if (!stat.isSymbolicLink()) {\n        knownHard[base] = true;\n        if (cache) cache[base] = base;\n        continue;\n      }\n\n      // read the link if it wasn't read before\n      // dev/ino always return 0 on windows, so skip the check.\n      var linkTarget = null;\n      if (!isWindows) {\n        var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n        if (seenLinks.hasOwnProperty(id)) {\n          linkTarget = seenLinks[id];\n        }\n      }\n      if (linkTarget === null) {\n        fs.statSync(base);\n        linkTarget = fs.readlinkSync(base);\n      }\n      resolvedLink = pathModule.resolve(previous, linkTarget);\n      // track this, if given a cache.\n      if (cache) cache[base] = resolvedLink;\n      if (!isWindows) seenLinks[id] = linkTarget;\n    }\n\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n\n  if (cache) cache[original] = p;\n\n  return p;\n};\n\n\nexports.realpath = function realpath(p, cache, cb) {\n  if (typeof cb !== 'function') {\n    cb = maybeCallback(cache);\n    cache = null;\n  }\n\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return process.nextTick(cb.bind(null, null, cache[p]));\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstat(base, function(err) {\n        if (err) return cb(err);\n        knownHard[base] = true;\n        LOOP();\n      });\n    } else {\n      process.nextTick(LOOP);\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  function LOOP() {\n    // stop if scanned past end of path\n    if (pos >= p.length) {\n      if (cache) cache[original] = p;\n      return cb(null, p);\n    }\n\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || (cache && cache[base] === base)) {\n      return process.nextTick(LOOP);\n    }\n\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // known symbolic link.  no need to stat again.\n      return gotResolvedLink(cache[base]);\n    }\n\n    return fs.lstat(base, gotStat);\n  }\n\n  function gotStat(err, stat) {\n    if (err) return cb(err);\n\n    // if not a symlink, skip to the next path part\n    if (!stat.isSymbolicLink()) {\n      knownHard[base] = true;\n      if (cache) cache[base] = base;\n      return process.nextTick(LOOP);\n    }\n\n    // stat & read the link if not read before\n    // call gotTarget as soon as the link target is known\n    // dev/ino always return 0 on windows, so skip the check.\n    if (!isWindows) {\n      var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n      if (seenLinks.hasOwnProperty(id)) {\n        return gotTarget(null, seenLinks[id], base);\n      }\n    }\n    fs.stat(base, function(err) {\n      if (err) return cb(err);\n\n      fs.readlink(base, function(err, target) {\n        if (!isWindows) seenLinks[id] = target;\n        gotTarget(err, target);\n      });\n    });\n  }\n\n  function gotTarget(err, target, base) {\n    if (err) return cb(err);\n\n    var resolvedLink = pathModule.resolve(previous, target);\n    if (cache) cache[base] = resolvedLink;\n    gotResolvedLink(resolvedLink);\n  }\n\n  function gotResolvedLink(resolvedLink) {\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n};\n","exports.setopts = setopts\nexports.ownProp = ownProp\nexports.makeAbs = makeAbs\nexports.finish = finish\nexports.mark = mark\nexports.isIgnored = isIgnored\nexports.childrenIgnored = childrenIgnored\n\nfunction ownProp (obj, field) {\n  return Object.prototype.hasOwnProperty.call(obj, field)\n}\n\nvar fs = require(\"fs\")\nvar path = require(\"path\")\nvar minimatch = require(\"minimatch\")\nvar isAbsolute = require(\"path-is-absolute\")\nvar Minimatch = minimatch.Minimatch\n\nfunction alphasort (a, b) {\n  return a.localeCompare(b, 'en')\n}\n\nfunction setupIgnores (self, options) {\n  self.ignore = options.ignore || []\n\n  if (!Array.isArray(self.ignore))\n    self.ignore = [self.ignore]\n\n  if (self.ignore.length) {\n    self.ignore = self.ignore.map(ignoreMap)\n  }\n}\n\n// ignore patterns are always in dot:true mode.\nfunction ignoreMap (pattern) {\n  var gmatcher = null\n  if (pattern.slice(-3) === '/**') {\n    var gpattern = pattern.replace(/(\\/\\*\\*)+$/, '')\n    gmatcher = new Minimatch(gpattern, { dot: true })\n  }\n\n  return {\n    matcher: new Minimatch(pattern, { dot: true }),\n    gmatcher: gmatcher\n  }\n}\n\nfunction setopts (self, pattern, options) {\n  if (!options)\n    options = {}\n\n  // base-matching: just use globstar for that.\n  if (options.matchBase && -1 === pattern.indexOf(\"/\")) {\n    if (options.noglobstar) {\n      throw new Error(\"base matching requires globstar\")\n    }\n    pattern = \"**/\" + pattern\n  }\n\n  self.silent = !!options.silent\n  self.pattern = pattern\n  self.strict = options.strict !== false\n  self.realpath = !!options.realpath\n  self.realpathCache = options.realpathCache || Object.create(null)\n  self.follow = !!options.follow\n  self.dot = !!options.dot\n  self.mark = !!options.mark\n  self.nodir = !!options.nodir\n  if (self.nodir)\n    self.mark = true\n  self.sync = !!options.sync\n  self.nounique = !!options.nounique\n  self.nonull = !!options.nonull\n  self.nosort = !!options.nosort\n  self.nocase = !!options.nocase\n  self.stat = !!options.stat\n  self.noprocess = !!options.noprocess\n  self.absolute = !!options.absolute\n  self.fs = options.fs || fs\n\n  self.maxLength = options.maxLength || Infinity\n  self.cache = options.cache || Object.create(null)\n  self.statCache = options.statCache || Object.create(null)\n  self.symlinks = options.symlinks || Object.create(null)\n\n  setupIgnores(self, options)\n\n  self.changedCwd = false\n  var cwd = process.cwd()\n  if (!ownProp(options, \"cwd\"))\n    self.cwd = cwd\n  else {\n    self.cwd = path.resolve(options.cwd)\n    self.changedCwd = self.cwd !== cwd\n  }\n\n  self.root = options.root || path.resolve(self.cwd, \"/\")\n  self.root = path.resolve(self.root)\n  if (process.platform === \"win32\")\n    self.root = self.root.replace(/\\\\/g, \"/\")\n\n  // TODO: is an absolute `cwd` supposed to be resolved against `root`?\n  // e.g. { cwd: '/test', root: __dirname } === path.join(__dirname, '/test')\n  self.cwdAbs = isAbsolute(self.cwd) ? self.cwd : makeAbs(self, self.cwd)\n  if (process.platform === \"win32\")\n    self.cwdAbs = self.cwdAbs.replace(/\\\\/g, \"/\")\n  self.nomount = !!options.nomount\n\n  // disable comments and negation in Minimatch.\n  // Note that they are not supported in Glob itself anyway.\n  options.nonegate = true\n  options.nocomment = true\n\n  self.minimatch = new Minimatch(pattern, options)\n  self.options = self.minimatch.options\n}\n\nfunction finish (self) {\n  var nou = self.nounique\n  var all = nou ? [] : Object.create(null)\n\n  for (var i = 0, l = self.matches.length; i < l; i ++) {\n    var matches = self.matches[i]\n    if (!matches || Object.keys(matches).length === 0) {\n      if (self.nonull) {\n        // do like the shell, and spit out the literal glob\n        var literal = self.minimatch.globSet[i]\n        if (nou)\n          all.push(literal)\n        else\n          all[literal] = true\n      }\n    } else {\n      // had matches\n      var m = Object.keys(matches)\n      if (nou)\n        all.push.apply(all, m)\n      else\n        m.forEach(function (m) {\n          all[m] = true\n        })\n    }\n  }\n\n  if (!nou)\n    all = Object.keys(all)\n\n  if (!self.nosort)\n    all = all.sort(alphasort)\n\n  // at *some* point we statted all of these\n  if (self.mark) {\n    for (var i = 0; i < all.length; i++) {\n      all[i] = self._mark(all[i])\n    }\n    if (self.nodir) {\n      all = all.filter(function (e) {\n        var notDir = !(/\\/$/.test(e))\n        var c = self.cache[e] || self.cache[makeAbs(self, e)]\n        if (notDir && c)\n          notDir = c !== 'DIR' && !Array.isArray(c)\n        return notDir\n      })\n    }\n  }\n\n  if (self.ignore.length)\n    all = all.filter(function(m) {\n      return !isIgnored(self, m)\n    })\n\n  self.found = all\n}\n\nfunction mark (self, p) {\n  var abs = makeAbs(self, p)\n  var c = self.cache[abs]\n  var m = p\n  if (c) {\n    var isDir = c === 'DIR' || Array.isArray(c)\n    var slash = p.slice(-1) === '/'\n\n    if (isDir && !slash)\n      m += '/'\n    else if (!isDir && slash)\n      m = m.slice(0, -1)\n\n    if (m !== p) {\n      var mabs = makeAbs(self, m)\n      self.statCache[mabs] = self.statCache[abs]\n      self.cache[mabs] = self.cache[abs]\n    }\n  }\n\n  return m\n}\n\n// lotta situps...\nfunction makeAbs (self, f) {\n  var abs = f\n  if (f.charAt(0) === '/') {\n    abs = path.join(self.root, f)\n  } else if (isAbsolute(f) || f === '') {\n    abs = f\n  } else if (self.changedCwd) {\n    abs = path.resolve(self.cwd, f)\n  } else {\n    abs = path.resolve(f)\n  }\n\n  if (process.platform === 'win32')\n    abs = abs.replace(/\\\\/g, '/')\n\n  return abs\n}\n\n\n// Return true, if pattern ends with globstar '**', for the accompanying parent directory.\n// Ex:- If node_modules/** is the pattern, add 'node_modules' to ignore list along with it's contents\nfunction isIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return item.matcher.match(path) || !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n\nfunction childrenIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n","// Approach:\n//\n// 1. Get the minimatch set\n// 2. For each pattern in the set, PROCESS(pattern, false)\n// 3. Store matches per-set, then uniq them\n//\n// PROCESS(pattern, inGlobStar)\n// Get the first [n] items from pattern that are all strings\n// Join these together.  This is PREFIX.\n//   If there is no more remaining, then stat(PREFIX) and\n//   add to matches if it succeeds.  END.\n//\n// If inGlobStar and PREFIX is symlink and points to dir\n//   set ENTRIES = []\n// else readdir(PREFIX) as ENTRIES\n//   If fail, END\n//\n// with ENTRIES\n//   If pattern[n] is GLOBSTAR\n//     // handle the case where the globstar match is empty\n//     // by pruning it out, and testing the resulting pattern\n//     PROCESS(pattern[0..n] + pattern[n+1 .. $], false)\n//     // handle other cases.\n//     for ENTRY in ENTRIES (not dotfiles)\n//       // attach globstar + tail onto the entry\n//       // Mark that this entry is a globstar match\n//       PROCESS(pattern[0..n] + ENTRY + pattern[n .. $], true)\n//\n//   else // not globstar\n//     for ENTRY in ENTRIES (not dotfiles, unless pattern[n] is dot)\n//       Test ENTRY against pattern[n]\n//       If fails, continue\n//       If passes, PROCESS(pattern[0..n] + item + pattern[n+1 .. $])\n//\n// Caveat:\n//   Cache all stats and readdirs results to minimize syscall.  Since all\n//   we ever care about is existence and directory-ness, we can just keep\n//   `true` for files, and [children,...] for directories, or `false` for\n//   things that don't exist.\n\nmodule.exports = glob\n\nvar rp = require('fs.realpath')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar inherits = require('inherits')\nvar EE = require('events').EventEmitter\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar globSync = require('./sync.js')\nvar common = require('./common.js')\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar inflight = require('inflight')\nvar util = require('util')\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nvar once = require('once')\n\nfunction glob (pattern, options, cb) {\n  if (typeof options === 'function') cb = options, options = {}\n  if (!options) options = {}\n\n  if (options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return globSync(pattern, options)\n  }\n\n  return new Glob(pattern, options, cb)\n}\n\nglob.sync = globSync\nvar GlobSync = glob.GlobSync = globSync.GlobSync\n\n// old api surface\nglob.glob = glob\n\nfunction extend (origin, add) {\n  if (add === null || typeof add !== 'object') {\n    return origin\n  }\n\n  var keys = Object.keys(add)\n  var i = keys.length\n  while (i--) {\n    origin[keys[i]] = add[keys[i]]\n  }\n  return origin\n}\n\nglob.hasMagic = function (pattern, options_) {\n  var options = extend({}, options_)\n  options.noprocess = true\n\n  var g = new Glob(pattern, options)\n  var set = g.minimatch.set\n\n  if (!pattern)\n    return false\n\n  if (set.length > 1)\n    return true\n\n  for (var j = 0; j < set[0].length; j++) {\n    if (typeof set[0][j] !== 'string')\n      return true\n  }\n\n  return false\n}\n\nglob.Glob = Glob\ninherits(Glob, EE)\nfunction Glob (pattern, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = null\n  }\n\n  if (options && options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return new GlobSync(pattern, options)\n  }\n\n  if (!(this instanceof Glob))\n    return new Glob(pattern, options, cb)\n\n  setopts(this, pattern, options)\n  this._didRealPath = false\n\n  // process each pattern in the minimatch set\n  var n = this.minimatch.set.length\n\n  // The matches are stored as {<filename>: true,...} so that\n  // duplicates are automagically pruned.\n  // Later, we do an Object.keys() on these.\n  // Keep them as a list so we can fill in when nonull is set.\n  this.matches = new Array(n)\n\n  if (typeof cb === 'function') {\n    cb = once(cb)\n    this.on('error', cb)\n    this.on('end', function (matches) {\n      cb(null, matches)\n    })\n  }\n\n  var self = this\n  this._processing = 0\n\n  this._emitQueue = []\n  this._processQueue = []\n  this.paused = false\n\n  if (this.noprocess)\n    return this\n\n  if (n === 0)\n    return done()\n\n  var sync = true\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false, done)\n  }\n  sync = false\n\n  function done () {\n    --self._processing\n    if (self._processing <= 0) {\n      if (sync) {\n        process.nextTick(function () {\n          self._finish()\n        })\n      } else {\n        self._finish()\n      }\n    }\n  }\n}\n\nGlob.prototype._finish = function () {\n  assert(this instanceof Glob)\n  if (this.aborted)\n    return\n\n  if (this.realpath && !this._didRealpath)\n    return this._realpath()\n\n  common.finish(this)\n  this.emit('end', this.found)\n}\n\nGlob.prototype._realpath = function () {\n  if (this._didRealpath)\n    return\n\n  this._didRealpath = true\n\n  var n = this.matches.length\n  if (n === 0)\n    return this._finish()\n\n  var self = this\n  for (var i = 0; i < this.matches.length; i++)\n    this._realpathSet(i, next)\n\n  function next () {\n    if (--n === 0)\n      self._finish()\n  }\n}\n\nGlob.prototype._realpathSet = function (index, cb) {\n  var matchset = this.matches[index]\n  if (!matchset)\n    return cb()\n\n  var found = Object.keys(matchset)\n  var self = this\n  var n = found.length\n\n  if (n === 0)\n    return cb()\n\n  var set = this.matches[index] = Object.create(null)\n  found.forEach(function (p, i) {\n    // If there's a problem with the stat, then it means that\n    // one or more of the links in the realpath couldn't be\n    // resolved.  just return the abs value in that case.\n    p = self._makeAbs(p)\n    rp.realpath(p, self.realpathCache, function (er, real) {\n      if (!er)\n        set[real] = true\n      else if (er.syscall === 'stat')\n        set[p] = true\n      else\n        self.emit('error', er) // srsly wtf right here\n\n      if (--n === 0) {\n        self.matches[index] = set\n        cb()\n      }\n    })\n  })\n}\n\nGlob.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlob.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n\nGlob.prototype.abort = function () {\n  this.aborted = true\n  this.emit('abort')\n}\n\nGlob.prototype.pause = function () {\n  if (!this.paused) {\n    this.paused = true\n    this.emit('pause')\n  }\n}\n\nGlob.prototype.resume = function () {\n  if (this.paused) {\n    this.emit('resume')\n    this.paused = false\n    if (this._emitQueue.length) {\n      var eq = this._emitQueue.slice(0)\n      this._emitQueue.length = 0\n      for (var i = 0; i < eq.length; i ++) {\n        var e = eq[i]\n        this._emitMatch(e[0], e[1])\n      }\n    }\n    if (this._processQueue.length) {\n      var pq = this._processQueue.slice(0)\n      this._processQueue.length = 0\n      for (var i = 0; i < pq.length; i ++) {\n        var p = pq[i]\n        this._processing--\n        this._process(p[0], p[1], p[2], p[3])\n      }\n    }\n  }\n}\n\nGlob.prototype._process = function (pattern, index, inGlobStar, cb) {\n  assert(this instanceof Glob)\n  assert(typeof cb === 'function')\n\n  if (this.aborted)\n    return\n\n  this._processing++\n  if (this.paused) {\n    this._processQueue.push([pattern, index, inGlobStar, cb])\n    return\n  }\n\n  //console.error('PROCESS %d', this._processing, pattern)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // see if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index, cb)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip _processing\n  if (childrenIgnored(this, read))\n    return cb()\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar, cb)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar, cb)\n}\n\nGlob.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    return self._processReaddir2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\nGlob.prototype._processReaddir2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return cb()\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  //console.error('prd2', prefix, entries, remain[0]._glob, matchedEntries)\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return cb()\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return cb()\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix) {\n      if (prefix !== '/')\n        e = prefix + '/' + e\n      else\n        e = prefix + e\n    }\n    this._process([e].concat(remain), index, inGlobStar, cb)\n  }\n  cb()\n}\n\nGlob.prototype._emitMatch = function (index, e) {\n  if (this.aborted)\n    return\n\n  if (isIgnored(this, e))\n    return\n\n  if (this.paused) {\n    this._emitQueue.push([index, e])\n    return\n  }\n\n  var abs = isAbsolute(e) ? e : this._makeAbs(e)\n\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.absolute)\n    e = abs\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n\n  var st = this.statCache[abs]\n  if (st)\n    this.emit('stat', e, st)\n\n  this.emit('match', e)\n}\n\nGlob.prototype._readdirInGlobStar = function (abs, cb) {\n  if (this.aborted)\n    return\n\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false, cb)\n\n  var lstatkey = 'lstat\\0' + abs\n  var self = this\n  var lstatcb = inflight(lstatkey, lstatcb_)\n\n  if (lstatcb)\n    self.fs.lstat(abs, lstatcb)\n\n  function lstatcb_ (er, lstat) {\n    if (er && er.code === 'ENOENT')\n      return cb()\n\n    var isSym = lstat && lstat.isSymbolicLink()\n    self.symlinks[abs] = isSym\n\n    // If it's not a symlink or a dir, then it's definitely a regular file.\n    // don't bother doing a readdir in that case.\n    if (!isSym && lstat && !lstat.isDirectory()) {\n      self.cache[abs] = 'FILE'\n      cb()\n    } else\n      self._readdir(abs, false, cb)\n  }\n}\n\nGlob.prototype._readdir = function (abs, inGlobStar, cb) {\n  if (this.aborted)\n    return\n\n  cb = inflight('readdir\\0'+abs+'\\0'+inGlobStar, cb)\n  if (!cb)\n    return\n\n  //console.error('RD %j %j', +inGlobStar, abs)\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs, cb)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return cb()\n\n    if (Array.isArray(c))\n      return cb(null, c)\n  }\n\n  var self = this\n  self.fs.readdir(abs, readdirCb(this, abs, cb))\n}\n\nfunction readdirCb (self, abs, cb) {\n  return function (er, entries) {\n    if (er)\n      self._readdirError(abs, er, cb)\n    else\n      self._readdirEntries(abs, entries, cb)\n  }\n}\n\nGlob.prototype._readdirEntries = function (abs, entries, cb) {\n  if (this.aborted)\n    return\n\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n  return cb(null, entries)\n}\n\nGlob.prototype._readdirError = function (f, er, cb) {\n  if (this.aborted)\n    return\n\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f)\n      this.cache[abs] = 'FILE'\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\n        error.path = this.cwd\n        error.code = er.code\n        this.emit('error', error)\n        this.abort()\n      }\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict) {\n        this.emit('error', er)\n        // If the error is handled, then we abort\n        // if not, we threw out of here\n        this.abort()\n      }\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n\n  return cb()\n}\n\nGlob.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    self._processGlobStar2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\n\nGlob.prototype._processGlobStar2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n  //console.error('pgs2', prefix, remain[0], entries)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return cb()\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false, cb)\n\n  var isSym = this.symlinks[abs]\n  var len = entries.length\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return cb()\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true, cb)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true, cb)\n  }\n\n  cb()\n}\n\nGlob.prototype._processSimple = function (prefix, index, cb) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var self = this\n  this._stat(prefix, function (er, exists) {\n    self._processSimple2(prefix, index, er, exists, cb)\n  })\n}\nGlob.prototype._processSimple2 = function (prefix, index, er, exists, cb) {\n\n  //console.error('ps2', prefix, exists)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return cb()\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n  cb()\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlob.prototype._stat = function (f, cb) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return cb()\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return cb(null, c)\n\n    if (needDir && c === 'FILE')\n      return cb()\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (stat !== undefined) {\n    if (stat === false)\n      return cb(null, stat)\n    else {\n      var type = stat.isDirectory() ? 'DIR' : 'FILE'\n      if (needDir && type === 'FILE')\n        return cb()\n      else\n        return cb(null, type, stat)\n    }\n  }\n\n  var self = this\n  var statcb = inflight('stat\\0' + abs, lstatcb_)\n  if (statcb)\n    self.fs.lstat(abs, statcb)\n\n  function lstatcb_ (er, lstat) {\n    if (lstat && lstat.isSymbolicLink()) {\n      // If it's a symlink, then treat it as the target, unless\n      // the target does not exist, then treat it as a file.\n      return self.fs.stat(abs, function (er, stat) {\n        if (er)\n          self._stat2(f, abs, null, lstat, cb)\n        else\n          self._stat2(f, abs, er, stat, cb)\n      })\n    } else {\n      self._stat2(f, abs, er, lstat, cb)\n    }\n  }\n}\n\nGlob.prototype._stat2 = function (f, abs, er, stat, cb) {\n  if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n    this.statCache[abs] = false\n    return cb()\n  }\n\n  var needDir = f.slice(-1) === '/'\n  this.statCache[abs] = stat\n\n  if (abs.slice(-1) === '/' && stat && !stat.isDirectory())\n    return cb(null, false, stat)\n\n  var c = true\n  if (stat)\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c === 'FILE')\n    return cb()\n\n  return cb(null, c, stat)\n}\n","module.exports = globSync\nglobSync.GlobSync = GlobSync\n\nvar rp = require('fs.realpath')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar Glob = require('./glob.js').Glob\nvar util = require('util')\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar common = require('./common.js')\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nfunction globSync (pattern, options) {\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  return new GlobSync(pattern, options).found\n}\n\nfunction GlobSync (pattern, options) {\n  if (!pattern)\n    throw new Error('must provide pattern')\n\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  if (!(this instanceof GlobSync))\n    return new GlobSync(pattern, options)\n\n  setopts(this, pattern, options)\n\n  if (this.noprocess)\n    return this\n\n  var n = this.minimatch.set.length\n  this.matches = new Array(n)\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false)\n  }\n  this._finish()\n}\n\nGlobSync.prototype._finish = function () {\n  assert(this instanceof GlobSync)\n  if (this.realpath) {\n    var self = this\n    this.matches.forEach(function (matchset, index) {\n      var set = self.matches[index] = Object.create(null)\n      for (var p in matchset) {\n        try {\n          p = self._makeAbs(p)\n          var real = rp.realpathSync(p, self.realpathCache)\n          set[real] = true\n        } catch (er) {\n          if (er.syscall === 'stat')\n            set[self._makeAbs(p)] = true\n          else\n            throw er\n        }\n      }\n    })\n  }\n  common.finish(this)\n}\n\n\nGlobSync.prototype._process = function (pattern, index, inGlobStar) {\n  assert(this instanceof GlobSync)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // See if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip processing\n  if (childrenIgnored(this, read))\n    return\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar)\n}\n\n\nGlobSync.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar) {\n  var entries = this._readdir(abs, inGlobStar)\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix.slice(-1) !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix)\n      newPattern = [prefix, e]\n    else\n      newPattern = [e]\n    this._process(newPattern.concat(remain), index, inGlobStar)\n  }\n}\n\n\nGlobSync.prototype._emitMatch = function (index, e) {\n  if (isIgnored(this, e))\n    return\n\n  var abs = this._makeAbs(e)\n\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.absolute) {\n    e = abs\n  }\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n\n  if (this.stat)\n    this._stat(e)\n}\n\n\nGlobSync.prototype._readdirInGlobStar = function (abs) {\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false)\n\n  var entries\n  var lstat\n  var stat\n  try {\n    lstat = this.fs.lstatSync(abs)\n  } catch (er) {\n    if (er.code === 'ENOENT') {\n      // lstat failed, doesn't exist\n      return null\n    }\n  }\n\n  var isSym = lstat && lstat.isSymbolicLink()\n  this.symlinks[abs] = isSym\n\n  // If it's not a symlink or a dir, then it's definitely a regular file.\n  // don't bother doing a readdir in that case.\n  if (!isSym && lstat && !lstat.isDirectory())\n    this.cache[abs] = 'FILE'\n  else\n    entries = this._readdir(abs, false)\n\n  return entries\n}\n\nGlobSync.prototype._readdir = function (abs, inGlobStar) {\n  var entries\n\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return null\n\n    if (Array.isArray(c))\n      return c\n  }\n\n  try {\n    return this._readdirEntries(abs, this.fs.readdirSync(abs))\n  } catch (er) {\n    this._readdirError(abs, er)\n    return null\n  }\n}\n\nGlobSync.prototype._readdirEntries = function (abs, entries) {\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n\n  // mark and cache dir-ness\n  return entries\n}\n\nGlobSync.prototype._readdirError = function (f, er) {\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f)\n      this.cache[abs] = 'FILE'\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\n        error.path = this.cwd\n        error.code = er.code\n        throw error\n      }\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict)\n        throw er\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n}\n\nGlobSync.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar) {\n\n  var entries = this._readdir(abs, inGlobStar)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false)\n\n  var len = entries.length\n  var isSym = this.symlinks[abs]\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true)\n  }\n}\n\nGlobSync.prototype._processSimple = function (prefix, index) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var exists = this._stat(prefix)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlobSync.prototype._stat = function (f) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return false\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return c\n\n    if (needDir && c === 'FILE')\n      return false\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (!stat) {\n    var lstat\n    try {\n      lstat = this.fs.lstatSync(abs)\n    } catch (er) {\n      if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n        this.statCache[abs] = false\n        return false\n      }\n    }\n\n    if (lstat && lstat.isSymbolicLink()) {\n      try {\n        stat = this.fs.statSync(abs)\n      } catch (er) {\n        stat = lstat\n      }\n    } else {\n      stat = lstat\n    }\n  }\n\n  this.statCache[abs] = stat\n\n  var c = true\n  if (stat)\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\n\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c === 'FILE')\n    return false\n\n  return c\n}\n\nGlobSync.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlobSync.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n","'use strict';\nmodule.exports = (flag, argv) => {\n\targv = argv || process.argv;\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst pos = argv.indexOf(prefix + flag);\n\tconst terminatorPos = argv.indexOf('--');\n\treturn pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);\n};\n","var wrappy = require('wrappy')\nvar reqs = Object.create(null)\nvar once = require('once')\n\nmodule.exports = wrappy(inflight)\n\nfunction inflight (key, cb) {\n  if (reqs[key]) {\n    reqs[key].push(cb)\n    return null\n  } else {\n    reqs[key] = [cb]\n    return makeres(key)\n  }\n}\n\nfunction makeres (key) {\n  return once(function RES () {\n    var cbs = reqs[key]\n    var len = cbs.length\n    var args = slice(arguments)\n\n    // XXX It's somewhat ambiguous whether a new callback added in this\n    // pass should be queued for later execution if something in the\n    // list of callbacks throws, or if it should just be discarded.\n    // However, it's such an edge case that it hardly matters, and either\n    // choice is likely as surprising as the other.\n    // As it happens, we do go ahead and schedule it for later execution.\n    try {\n      for (var i = 0; i < len; i++) {\n        cbs[i].apply(null, args)\n      }\n    } finally {\n      if (cbs.length > len) {\n        // added more in the interim.\n        // de-zalgo, just in case, but don't call again.\n        cbs.splice(0, len)\n        process.nextTick(function () {\n          RES.apply(null, args)\n        })\n      } else {\n        delete reqs[key]\n      }\n    }\n  })\n}\n\nfunction slice (args) {\n  var length = args.length\n  var array = []\n\n  for (var i = 0; i < length; i++) array[i] = args[i]\n  return array\n}\n","try {\n  var util = require('util');\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = require('./inherits_browser.js');\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","module.exports = minimatch\nminimatch.Minimatch = Minimatch\n\nvar path = { sep: '/' }\ntry {\n  path = require('path')\n} catch (er) {}\n\nvar GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\nvar expand = require('brace-expansion')\n\nvar plTypes = {\n  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},\n  '?': { open: '(?:', close: ')?' },\n  '+': { open: '(?:', close: ')+' },\n  '*': { open: '(?:', close: ')*' },\n  '@': { open: '(?:', close: ')' }\n}\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nvar qmark = '[^/]'\n\n// * => any number of characters\nvar star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nvar twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nvar twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\n\n// characters that need to be escaped in RegExp.\nvar reSpecials = charSet('().*{}+?[]^$\\\\!')\n\n// \"abc\" -> { a:true, b:true, c:true }\nfunction charSet (s) {\n  return s.split('').reduce(function (set, c) {\n    set[c] = true\n    return set\n  }, {})\n}\n\n// normalizes slashes.\nvar slashSplit = /\\/+/\n\nminimatch.filter = filter\nfunction filter (pattern, options) {\n  options = options || {}\n  return function (p, i, list) {\n    return minimatch(p, pattern, options)\n  }\n}\n\nfunction ext (a, b) {\n  a = a || {}\n  b = b || {}\n  var t = {}\n  Object.keys(b).forEach(function (k) {\n    t[k] = b[k]\n  })\n  Object.keys(a).forEach(function (k) {\n    t[k] = a[k]\n  })\n  return t\n}\n\nminimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return minimatch\n\n  var orig = minimatch\n\n  var m = function minimatch (p, pattern, options) {\n    return orig.minimatch(p, pattern, ext(def, options))\n  }\n\n  m.Minimatch = function Minimatch (pattern, options) {\n    return new orig.Minimatch(pattern, ext(def, options))\n  }\n\n  return m\n}\n\nMinimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return Minimatch\n  return minimatch.defaults(def).Minimatch\n}\n\nfunction minimatch (p, pattern, options) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  // \"\" only matches \"\"\n  if (pattern.trim() === '') return p === ''\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nfunction Minimatch (pattern, options) {\n  if (!(this instanceof Minimatch)) {\n    return new Minimatch(pattern, options)\n  }\n\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n  pattern = pattern.trim()\n\n  // windows support: need to use /, not \\\n  if (path.sep !== '/') {\n    pattern = pattern.split(path.sep).join('/')\n  }\n\n  this.options = options\n  this.set = []\n  this.pattern = pattern\n  this.regexp = null\n  this.negate = false\n  this.comment = false\n  this.empty = false\n\n  // make the set of regexps etc.\n  this.make()\n}\n\nMinimatch.prototype.debug = function () {}\n\nMinimatch.prototype.make = make\nfunction make () {\n  // don't do it more than once.\n  if (this._made) return\n\n  var pattern = this.pattern\n  var options = this.options\n\n  // empty patterns and comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    this.comment = true\n    return\n  }\n  if (!pattern) {\n    this.empty = true\n    return\n  }\n\n  // step 1: figure out negation, etc.\n  this.parseNegate()\n\n  // step 2: expand braces\n  var set = this.globSet = this.braceExpand()\n\n  if (options.debug) this.debug = console.error\n\n  this.debug(this.pattern, set)\n\n  // step 3: now we have a set, so turn each one into a series of path-portion\n  // matching patterns.\n  // These will be regexps, except in the case of \"**\", which is\n  // set to the GLOBSTAR object for globstar behavior,\n  // and will not contain any / characters\n  set = this.globParts = set.map(function (s) {\n    return s.split(slashSplit)\n  })\n\n  this.debug(this.pattern, set)\n\n  // glob --> regexps\n  set = set.map(function (s, si, set) {\n    return s.map(this.parse, this)\n  }, this)\n\n  this.debug(this.pattern, set)\n\n  // filter out everything that didn't compile properly.\n  set = set.filter(function (s) {\n    return s.indexOf(false) === -1\n  })\n\n  this.debug(this.pattern, set)\n\n  this.set = set\n}\n\nMinimatch.prototype.parseNegate = parseNegate\nfunction parseNegate () {\n  var pattern = this.pattern\n  var negate = false\n  var options = this.options\n  var negateOffset = 0\n\n  if (options.nonegate) return\n\n  for (var i = 0, l = pattern.length\n    ; i < l && pattern.charAt(i) === '!'\n    ; i++) {\n    negate = !negate\n    negateOffset++\n  }\n\n  if (negateOffset) this.pattern = pattern.substr(negateOffset)\n  this.negate = negate\n}\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = function (pattern, options) {\n  return braceExpand(pattern, options)\n}\n\nMinimatch.prototype.braceExpand = braceExpand\n\nfunction braceExpand (pattern, options) {\n  if (!options) {\n    if (this instanceof Minimatch) {\n      options = this.options\n    } else {\n      options = {}\n    }\n  }\n\n  pattern = typeof pattern === 'undefined'\n    ? this.pattern : pattern\n\n  if (typeof pattern === 'undefined') {\n    throw new TypeError('undefined pattern')\n  }\n\n  if (options.nobrace ||\n    !pattern.match(/\\{.*\\}/)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nMinimatch.prototype.parse = parse\nvar SUBPARSE = {}\nfunction parse (pattern, isSub) {\n  if (pattern.length > 1024 * 64) {\n    throw new TypeError('pattern is too long')\n  }\n\n  var options = this.options\n\n  // shortcuts\n  if (!options.noglobstar && pattern === '**') return GLOBSTAR\n  if (pattern === '') return ''\n\n  var re = ''\n  var hasMagic = !!options.nocase\n  var escaping = false\n  // ? => one single character\n  var patternListStack = []\n  var negativeLists = []\n  var stateChar\n  var inClass = false\n  var reClassStart = -1\n  var classStart = -1\n  // . and .. never match anything that doesn't start with .,\n  // even when options.dot is set.\n  var patternStart = pattern.charAt(0) === '.' ? '' // anything\n  // not (start or / followed by . or .. followed by / or end)\n  : options.dot ? '(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))'\n  : '(?!\\\\.)'\n  var self = this\n\n  function clearStateChar () {\n    if (stateChar) {\n      // we had some state-tracking character\n      // that wasn't consumed by this pass.\n      switch (stateChar) {\n        case '*':\n          re += star\n          hasMagic = true\n        break\n        case '?':\n          re += qmark\n          hasMagic = true\n        break\n        default:\n          re += '\\\\' + stateChar\n        break\n      }\n      self.debug('clearStateChar %j %j', stateChar, re)\n      stateChar = false\n    }\n  }\n\n  for (var i = 0, len = pattern.length, c\n    ; (i < len) && (c = pattern.charAt(i))\n    ; i++) {\n    this.debug('%s\\t%s %s %j', pattern, i, re, c)\n\n    // skip over any that are escaped.\n    if (escaping && reSpecials[c]) {\n      re += '\\\\' + c\n      escaping = false\n      continue\n    }\n\n    switch (c) {\n      case '/':\n        // completely not allowed, even escaped.\n        // Should already be path-split by now.\n        return false\n\n      case '\\\\':\n        clearStateChar()\n        escaping = true\n      continue\n\n      // the various stateChar values\n      // for the \"extglob\" stuff.\n      case '?':\n      case '*':\n      case '+':\n      case '@':\n      case '!':\n        this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\n\n        // all of those are literals inside a class, except that\n        // the glob [!a] means [^a] in regexp\n        if (inClass) {\n          this.debug('  in class')\n          if (c === '!' && i === classStart + 1) c = '^'\n          re += c\n          continue\n        }\n\n        // if we already have a stateChar, then it means\n        // that there was something like ** or +? in there.\n        // Handle the stateChar, then proceed with this one.\n        self.debug('call clearStateChar %j', stateChar)\n        clearStateChar()\n        stateChar = c\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\n        // just clear the statechar *now*, rather than even diving into\n        // the patternList stuff.\n        if (options.noext) clearStateChar()\n      continue\n\n      case '(':\n        if (inClass) {\n          re += '('\n          continue\n        }\n\n        if (!stateChar) {\n          re += '\\\\('\n          continue\n        }\n\n        patternListStack.push({\n          type: stateChar,\n          start: i - 1,\n          reStart: re.length,\n          open: plTypes[stateChar].open,\n          close: plTypes[stateChar].close\n        })\n        // negation is (?:(?!js)[^/]*)\n        re += stateChar === '!' ? '(?:(?!(?:' : '(?:'\n        this.debug('plType %j %j', stateChar, re)\n        stateChar = false\n      continue\n\n      case ')':\n        if (inClass || !patternListStack.length) {\n          re += '\\\\)'\n          continue\n        }\n\n        clearStateChar()\n        hasMagic = true\n        var pl = patternListStack.pop()\n        // negation is (?:(?!js)[^/]*)\n        // The others are (?:<pattern>)<type>\n        re += pl.close\n        if (pl.type === '!') {\n          negativeLists.push(pl)\n        }\n        pl.reEnd = re.length\n      continue\n\n      case '|':\n        if (inClass || !patternListStack.length || escaping) {\n          re += '\\\\|'\n          escaping = false\n          continue\n        }\n\n        clearStateChar()\n        re += '|'\n      continue\n\n      // these are mostly the same in regexp and glob\n      case '[':\n        // swallow any state-tracking char before the [\n        clearStateChar()\n\n        if (inClass) {\n          re += '\\\\' + c\n          continue\n        }\n\n        inClass = true\n        classStart = i\n        reClassStart = re.length\n        re += c\n      continue\n\n      case ']':\n        //  a right bracket shall lose its special\n        //  meaning and represent itself in\n        //  a bracket expression if it occurs\n        //  first in the list.  -- POSIX.2 2.8.3.2\n        if (i === classStart + 1 || !inClass) {\n          re += '\\\\' + c\n          escaping = false\n          continue\n        }\n\n        // handle the case where we left a class open.\n        // \"[z-a]\" is valid, equivalent to \"\\[z-a\\]\"\n        if (inClass) {\n          // split where the last [ was, make sure we don't have\n          // an invalid re. if so, re-walk the contents of the\n          // would-be class to re-translate any characters that\n          // were passed through as-is\n          // TODO: It would probably be faster to determine this\n          // without a try/catch and a new RegExp, but it's tricky\n          // to do safely.  For now, this is safe and works.\n          var cs = pattern.substring(classStart + 1, i)\n          try {\n            RegExp('[' + cs + ']')\n          } catch (er) {\n            // not a valid class!\n            var sp = this.parse(cs, SUBPARSE)\n            re = re.substr(0, reClassStart) + '\\\\[' + sp[0] + '\\\\]'\n            hasMagic = hasMagic || sp[1]\n            inClass = false\n            continue\n          }\n        }\n\n        // finish up the class.\n        hasMagic = true\n        inClass = false\n        re += c\n      continue\n\n      default:\n        // swallow any state char that wasn't consumed\n        clearStateChar()\n\n        if (escaping) {\n          // no need\n          escaping = false\n        } else if (reSpecials[c]\n          && !(c === '^' && inClass)) {\n          re += '\\\\'\n        }\n\n        re += c\n\n    } // switch\n  } // for\n\n  // handle the case where we left a class open.\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\n  if (inClass) {\n    // split where the last [ was, and escape it\n    // this is a huge pita.  We now have to re-walk\n    // the contents of the would-be class to re-translate\n    // any characters that were passed through as-is\n    cs = pattern.substr(classStart + 1)\n    sp = this.parse(cs, SUBPARSE)\n    re = re.substr(0, reClassStart) + '\\\\[' + sp[0]\n    hasMagic = hasMagic || sp[1]\n  }\n\n  // handle the case where we had a +( thing at the *end*\n  // of the pattern.\n  // each pattern list stack adds 3 chars, and we need to go through\n  // and escape any | chars that were passed through as-is for the regexp.\n  // Go through and escape them, taking care not to double-escape any\n  // | chars that were already escaped.\n  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\n    var tail = re.slice(pl.reStart + pl.open.length)\n    this.debug('setting tail', re, pl)\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\n    tail = tail.replace(/((?:\\\\{2}){0,64})(\\\\?)\\|/g, function (_, $1, $2) {\n      if (!$2) {\n        // the | isn't already escaped, so escape it.\n        $2 = '\\\\'\n      }\n\n      // need to escape all those slashes *again*, without escaping the\n      // one that we need for escaping the | character.  As it works out,\n      // escaping an even number of slashes can be done by simply repeating\n      // it exactly after itself.  That's why this trick works.\n      //\n      // I am sorry that you have to see this.\n      return $1 + $1 + $2 + '|'\n    })\n\n    this.debug('tail=%j\\n   %s', tail, tail, pl, re)\n    var t = pl.type === '*' ? star\n      : pl.type === '?' ? qmark\n      : '\\\\' + pl.type\n\n    hasMagic = true\n    re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\n  }\n\n  // handle trailing things that only matter at the very end.\n  clearStateChar()\n  if (escaping) {\n    // trailing \\\\\n    re += '\\\\\\\\'\n  }\n\n  // only need to apply the nodot start if the re starts with\n  // something that could conceivably capture a dot\n  var addPatternStart = false\n  switch (re.charAt(0)) {\n    case '.':\n    case '[':\n    case '(': addPatternStart = true\n  }\n\n  // Hack to work around lack of negative lookbehind in JS\n  // A pattern like: *.!(x).!(y|z) needs to ensure that a name\n  // like 'a.xyz.yz' doesn't match.  So, the first negative\n  // lookahead, has to look ALL the way ahead, to the end of\n  // the pattern.\n  for (var n = negativeLists.length - 1; n > -1; n--) {\n    var nl = negativeLists[n]\n\n    var nlBefore = re.slice(0, nl.reStart)\n    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8)\n    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd)\n    var nlAfter = re.slice(nl.reEnd)\n\n    nlLast += nlAfter\n\n    // Handle nested stuff like *(*.js|!(*.json)), where open parens\n    // mean that we should *not* include the ) in the bit that is considered\n    // \"after\" the negated section.\n    var openParensBefore = nlBefore.split('(').length - 1\n    var cleanAfter = nlAfter\n    for (i = 0; i < openParensBefore; i++) {\n      cleanAfter = cleanAfter.replace(/\\)[+*?]?/, '')\n    }\n    nlAfter = cleanAfter\n\n    var dollar = ''\n    if (nlAfter === '' && isSub !== SUBPARSE) {\n      dollar = '$'\n    }\n    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast\n    re = newRe\n  }\n\n  // if the re is not \"\" at this point, then we need to make sure\n  // it doesn't match against an empty path part.\n  // Otherwise a/* will match a/, which it should not.\n  if (re !== '' && hasMagic) {\n    re = '(?=.)' + re\n  }\n\n  if (addPatternStart) {\n    re = patternStart + re\n  }\n\n  // parsing just a piece of a larger pattern.\n  if (isSub === SUBPARSE) {\n    return [re, hasMagic]\n  }\n\n  // skip the regexp for non-magical patterns\n  // unescape anything in it, though, so that it'll be\n  // an exact match against a file etc.\n  if (!hasMagic) {\n    return globUnescape(pattern)\n  }\n\n  var flags = options.nocase ? 'i' : ''\n  try {\n    var regExp = new RegExp('^' + re + '$', flags)\n  } catch (er) {\n    // If it was an invalid regular expression, then it can't match\n    // anything.  This trick looks for a character after the end of\n    // the string, which is of course impossible, except in multi-line\n    // mode, but it's not a /m regex.\n    return new RegExp('$.')\n  }\n\n  regExp._glob = pattern\n  regExp._src = re\n\n  return regExp\n}\n\nminimatch.makeRe = function (pattern, options) {\n  return new Minimatch(pattern, options || {}).makeRe()\n}\n\nMinimatch.prototype.makeRe = makeRe\nfunction makeRe () {\n  if (this.regexp || this.regexp === false) return this.regexp\n\n  // at this point, this.set is a 2d array of partial\n  // pattern strings, or \"**\".\n  //\n  // It's better to use .match().  This function shouldn't\n  // be used, really, but it's pretty convenient sometimes,\n  // when you just want to work with a regex.\n  var set = this.set\n\n  if (!set.length) {\n    this.regexp = false\n    return this.regexp\n  }\n  var options = this.options\n\n  var twoStar = options.noglobstar ? star\n    : options.dot ? twoStarDot\n    : twoStarNoDot\n  var flags = options.nocase ? 'i' : ''\n\n  var re = set.map(function (pattern) {\n    return pattern.map(function (p) {\n      return (p === GLOBSTAR) ? twoStar\n      : (typeof p === 'string') ? regExpEscape(p)\n      : p._src\n    }).join('\\\\\\/')\n  }).join('|')\n\n  // must match entire pattern\n  // ending in a * or ** will make it less strict.\n  re = '^(?:' + re + ')$'\n\n  // can match anything, as long as it's not this.\n  if (this.negate) re = '^(?!' + re + ').*$'\n\n  try {\n    this.regexp = new RegExp(re, flags)\n  } catch (ex) {\n    this.regexp = false\n  }\n  return this.regexp\n}\n\nminimatch.match = function (list, pattern, options) {\n  options = options || {}\n  var mm = new Minimatch(pattern, options)\n  list = list.filter(function (f) {\n    return mm.match(f)\n  })\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\nMinimatch.prototype.match = match\nfunction match (f, partial) {\n  this.debug('match', f, this.pattern)\n  // short-circuit in the case of busted things.\n  // comments, etc.\n  if (this.comment) return false\n  if (this.empty) return f === ''\n\n  if (f === '/' && partial) return true\n\n  var options = this.options\n\n  // windows: need to use /, not \\\n  if (path.sep !== '/') {\n    f = f.split(path.sep).join('/')\n  }\n\n  // treat the test path as a set of pathparts.\n  f = f.split(slashSplit)\n  this.debug(this.pattern, 'split', f)\n\n  // just ONE of the pattern sets in this.set needs to match\n  // in order for it to be valid.  If negating, then just one\n  // match means that we have failed.\n  // Either way, return on the first hit.\n\n  var set = this.set\n  this.debug(this.pattern, 'set', set)\n\n  // Find the basename of the path by looking for the last non-empty segment\n  var filename\n  var i\n  for (i = f.length - 1; i >= 0; i--) {\n    filename = f[i]\n    if (filename) break\n  }\n\n  for (i = 0; i < set.length; i++) {\n    var pattern = set[i]\n    var file = f\n    if (options.matchBase && pattern.length === 1) {\n      file = [filename]\n    }\n    var hit = this.matchOne(file, pattern, partial)\n    if (hit) {\n      if (options.flipNegate) return true\n      return !this.negate\n    }\n  }\n\n  // didn't get any hits.  this is success if it's a negative\n  // pattern, failure otherwise.\n  if (options.flipNegate) return false\n  return this.negate\n}\n\n// set partial to true to test if, for example,\n// \"/a/b\" matches the start of \"/*/b/*/d\"\n// Partial means, if you run out of file before you run\n// out of pattern, then that's fine, as long as all\n// the parts match.\nMinimatch.prototype.matchOne = function (file, pattern, partial) {\n  var options = this.options\n\n  this.debug('matchOne',\n    { 'this': this, file: file, pattern: pattern })\n\n  this.debug('matchOne', file.length, pattern.length)\n\n  for (var fi = 0,\n      pi = 0,\n      fl = file.length,\n      pl = pattern.length\n      ; (fi < fl) && (pi < pl)\n      ; fi++, pi++) {\n    this.debug('matchOne loop')\n    var p = pattern[pi]\n    var f = file[fi]\n\n    this.debug(pattern, p, f)\n\n    // should be impossible.\n    // some invalid regexp stuff in the set.\n    if (p === false) return false\n\n    if (p === GLOBSTAR) {\n      this.debug('GLOBSTAR', [pattern, p, f])\n\n      // \"**\"\n      // a/**/b/**/c would match the following:\n      // a/b/x/y/z/c\n      // a/x/y/z/b/c\n      // a/b/x/b/x/c\n      // a/b/c\n      // To do this, take the rest of the pattern after\n      // the **, and see if it would match the file remainder.\n      // If so, return success.\n      // If not, the ** \"swallows\" a segment, and try again.\n      // This is recursively awful.\n      //\n      // a/**/b/**/c matching a/b/x/y/z/c\n      // - a matches a\n      // - doublestar\n      //   - matchOne(b/x/y/z/c, b/**/c)\n      //     - b matches b\n      //     - doublestar\n      //       - matchOne(x/y/z/c, c) -> no\n      //       - matchOne(y/z/c, c) -> no\n      //       - matchOne(z/c, c) -> no\n      //       - matchOne(c, c) yes, hit\n      var fr = fi\n      var pr = pi + 1\n      if (pr === pl) {\n        this.debug('** at the end')\n        // a ** at the end will just swallow the rest.\n        // We have found a match.\n        // however, it will not swallow /.x, unless\n        // options.dot is set.\n        // . and .. are *never* matched by **, for explosively\n        // exponential reasons.\n        for (; fi < fl; fi++) {\n          if (file[fi] === '.' || file[fi] === '..' ||\n            (!options.dot && file[fi].charAt(0) === '.')) return false\n        }\n        return true\n      }\n\n      // ok, let's see if we can swallow whatever we can.\n      while (fr < fl) {\n        var swallowee = file[fr]\n\n        this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n        // XXX remove this slice.  Just pass the start index.\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n          this.debug('globstar found match!', fr, fl, swallowee)\n          // found a match.\n          return true\n        } else {\n          // can't swallow \".\" or \"..\" ever.\n          // can only swallow \".foo\" when explicitly asked.\n          if (swallowee === '.' || swallowee === '..' ||\n            (!options.dot && swallowee.charAt(0) === '.')) {\n            this.debug('dot detected!', file, fr, pattern, pr)\n            break\n          }\n\n          // ** swallows a segment, and continue.\n          this.debug('globstar swallow a segment, and continue')\n          fr++\n        }\n      }\n\n      // no match was found.\n      // However, in partial mode, we can't say this is necessarily over.\n      // If there's more *pattern* left, then\n      if (partial) {\n        // ran out of file\n        this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n        if (fr === fl) return true\n      }\n      return false\n    }\n\n    // something other than **\n    // non-magic patterns just have to match exactly\n    // patterns with magic have been turned into regexps.\n    var hit\n    if (typeof p === 'string') {\n      if (options.nocase) {\n        hit = f.toLowerCase() === p.toLowerCase()\n      } else {\n        hit = f === p\n      }\n      this.debug('string match', p, f, hit)\n    } else {\n      hit = f.match(p)\n      this.debug('pattern match', p, f, hit)\n    }\n\n    if (!hit) return false\n  }\n\n  // Note: ending in / means that we'll get a final \"\"\n  // at the end of the pattern.  This can only match a\n  // corresponding \"\" at the end of the file.\n  // If the file ends in /, then it can only match a\n  // a pattern that ends in /, unless the pattern just\n  // doesn't have any more for it. But, a/b/ should *not*\n  // match \"a/b/*\", even though \"\" matches against the\n  // [^/]*? pattern, except in partial mode, where it might\n  // simply not be reached yet.\n  // However, a/b/ should still satisfy a/*\n\n  // now either we fell off the end of the pattern, or we're done.\n  if (fi === fl && pi === pl) {\n    // ran out of pattern and filename at the same time.\n    // an exact hit!\n    return true\n  } else if (fi === fl) {\n    // ran out of file, but still had pattern left.\n    // this is ok if we're doing the match as part of\n    // a glob fs traversal.\n    return partial\n  } else if (pi === pl) {\n    // ran out of pattern, still have file left.\n    // this is only acceptable if we're on the very last\n    // empty segment of a file with a trailing slash.\n    // a/* should match a/b/\n    var emptyFileEnd = (fi === fl - 1) && (file[fi] === '')\n    return emptyFileEnd\n  }\n\n  // should be unreachable.\n  throw new Error('wtf?')\n}\n\n// replace stuff like \\* with *\nfunction globUnescape (s) {\n  return s.replace(/\\\\(.)/g, '$1')\n}\n\nfunction regExpEscape (s) {\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n}\n","var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n","'use strict';\n\nfunction posix(path) {\n\treturn path.charAt(0) === '/';\n}\n\nfunction win32(path) {\n\t// https://github.com/nodejs/node/blob/b3fcc245fb25539909ef1d5eaa01dbf92e168633/lib/path.js#L56\n\tvar splitDeviceRe = /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/;\n\tvar result = splitDeviceRe.exec(path);\n\tvar device = result[1] || '';\n\tvar isUnc = Boolean(device && device.charAt(1) !== ':');\n\n\t// UNC paths are always absolute\n\treturn Boolean(result[2] || isUnc);\n}\n\nmodule.exports = process.platform === 'win32' ? win32 : posix;\nmodule.exports.posix = posix;\nmodule.exports.win32 = win32;\n","module.exports = [\n  'cat',\n  'cd',\n  'chmod',\n  'cp',\n  'dirs',\n  'echo',\n  'exec',\n  'find',\n  'grep',\n  'head',\n  'ln',\n  'ls',\n  'mkdir',\n  'mv',\n  'pwd',\n  'rm',\n  'sed',\n  'set',\n  'sort',\n  'tail',\n  'tempdir',\n  'test',\n  'to',\n  'toEnd',\n  'touch',\n  'uniq',\n  'which',\n];\n","//\n// ShellJS\n// Unix shell commands on top of Node's API\n//\n// Copyright (c) 2012 Artur Adib\n// http://github.com/shelljs/shelljs\n//\n\nvar common = require('./src/common');\n\n//@\n//@ All commands run synchronously, unless otherwise stated.\n//@ All commands accept standard bash globbing characters (`*`, `?`, etc.),\n//@ compatible with the [node `glob` module](https://github.com/isaacs/node-glob).\n//@\n//@ For less-commonly used commands and features, please check out our [wiki\n//@ page](https://github.com/shelljs/shelljs/wiki).\n//@\n\n// Include the docs for all the default commands\n//@commands\n\n// Load all default commands\nrequire('./commands').forEach(function (command) {\n  require('./src/' + command);\n});\n\n//@\n//@ ### exit(code)\n//@\n//@ Exits the current process with the given exit `code`.\nexports.exit = process.exit;\n\n//@include ./src/error\nexports.error = require('./src/error');\n\n//@include ./src/common\nexports.ShellString = common.ShellString;\n\n//@\n//@ ### env['VAR_NAME']\n//@\n//@ Object containing environment variables (both getter and setter). Shortcut\n//@ to `process.env`.\nexports.env = process.env;\n\n//@\n//@ ### Pipes\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ grep('foo', 'file1.txt', 'file2.txt').sed(/o/g, 'a').to('output.txt');\n//@ echo('files with o\\'s in the name:\\n' + ls().grep('o'));\n//@ cat('test.js').exec('node'); // pipe to exec() call\n//@ ```\n//@\n//@ Commands can send their output to another command in a pipe-like fashion.\n//@ `sed`, `grep`, `cat`, `exec`, `to`, and `toEnd` can appear on the right-hand\n//@ side of a pipe. Pipes can be chained.\n\n//@\n//@ ## Configuration\n//@\n\nexports.config = common.config;\n\n//@\n//@ ### config.silent\n//@\n//@ Example:\n//@\n//@ ```javascript\n//@ var sh = require('shelljs');\n//@ var silentState = sh.config.silent; // save old silent state\n//@ sh.config.silent = true;\n//@ /* ... */\n//@ sh.config.silent = silentState; // restore old silent state\n//@ ```\n//@\n//@ Suppresses all command output if `true`, except for `echo()` calls.\n//@ Default is `false`.\n\n//@\n//@ ### config.fatal\n//@\n//@ Example:\n//@\n//@ ```javascript\n//@ require('shelljs/global');\n//@ config.fatal = true; // or set('-e');\n//@ cp('this_file_does_not_exist', '/dev/null'); // throws Error here\n//@ /* more commands... */\n//@ ```\n//@\n//@ If `true`, the script will throw a Javascript error when any shell.js\n//@ command encounters an error. Default is `false`. This is analogous to\n//@ Bash's `set -e`.\n\n//@\n//@ ### config.verbose\n//@\n//@ Example:\n//@\n//@ ```javascript\n//@ config.verbose = true; // or set('-v');\n//@ cd('dir/');\n//@ rm('-rf', 'foo.txt', 'bar.txt');\n//@ exec('echo hello');\n//@ ```\n//@\n//@ Will print each command as follows:\n//@\n//@ ```\n//@ cd dir/\n//@ rm -rf foo.txt bar.txt\n//@ exec echo hello\n//@ ```\n\n//@\n//@ ### config.globOptions\n//@\n//@ Example:\n//@\n//@ ```javascript\n//@ config.globOptions = {nodir: true};\n//@ ```\n//@\n//@ Use this value for calls to `glob.sync()` instead of the default options.\n\n//@\n//@ ### config.reset()\n//@\n//@ Example:\n//@\n//@ ```javascript\n//@ var shell = require('shelljs');\n//@ // Make changes to shell.config, and do stuff...\n//@ /* ... */\n//@ shell.config.reset(); // reset to original state\n//@ // Do more stuff, but with original settings\n//@ /* ... */\n//@ ```\n//@\n//@ Reset `shell.config` to the defaults:\n//@\n//@ ```javascript\n//@ {\n//@   fatal: false,\n//@   globOptions: {},\n//@   maxdepth: 255,\n//@   noglob: false,\n//@   silent: false,\n//@   verbose: false,\n//@ }\n//@ ```\n","var map = {\n\t\"./cat\": \"./node_modules/shelljs/src/cat.js\",\n\t\"./cat.js\": \"./node_modules/shelljs/src/cat.js\",\n\t\"./cd\": \"./node_modules/shelljs/src/cd.js\",\n\t\"./cd.js\": \"./node_modules/shelljs/src/cd.js\",\n\t\"./chmod\": \"./node_modules/shelljs/src/chmod.js\",\n\t\"./chmod.js\": \"./node_modules/shelljs/src/chmod.js\",\n\t\"./common\": \"./node_modules/shelljs/src/common.js\",\n\t\"./common.js\": \"./node_modules/shelljs/src/common.js\",\n\t\"./cp\": \"./node_modules/shelljs/src/cp.js\",\n\t\"./cp.js\": \"./node_modules/shelljs/src/cp.js\",\n\t\"./dirs\": \"./node_modules/shelljs/src/dirs.js\",\n\t\"./dirs.js\": \"./node_modules/shelljs/src/dirs.js\",\n\t\"./echo\": \"./node_modules/shelljs/src/echo.js\",\n\t\"./echo.js\": \"./node_modules/shelljs/src/echo.js\",\n\t\"./error\": \"./node_modules/shelljs/src/error.js\",\n\t\"./error.js\": \"./node_modules/shelljs/src/error.js\",\n\t\"./exec\": \"./node_modules/shelljs/src/exec.js\",\n\t\"./exec-child\": \"./node_modules/shelljs/src/exec-child.js\",\n\t\"./exec-child.js\": \"./node_modules/shelljs/src/exec-child.js\",\n\t\"./exec.js\": \"./node_modules/shelljs/src/exec.js\",\n\t\"./find\": \"./node_modules/shelljs/src/find.js\",\n\t\"./find.js\": \"./node_modules/shelljs/src/find.js\",\n\t\"./grep\": \"./node_modules/shelljs/src/grep.js\",\n\t\"./grep.js\": \"./node_modules/shelljs/src/grep.js\",\n\t\"./head\": \"./node_modules/shelljs/src/head.js\",\n\t\"./head.js\": \"./node_modules/shelljs/src/head.js\",\n\t\"./ln\": \"./node_modules/shelljs/src/ln.js\",\n\t\"./ln.js\": \"./node_modules/shelljs/src/ln.js\",\n\t\"./ls\": \"./node_modules/shelljs/src/ls.js\",\n\t\"./ls.js\": \"./node_modules/shelljs/src/ls.js\",\n\t\"./mkdir\": \"./node_modules/shelljs/src/mkdir.js\",\n\t\"./mkdir.js\": \"./node_modules/shelljs/src/mkdir.js\",\n\t\"./mv\": \"./node_modules/shelljs/src/mv.js\",\n\t\"./mv.js\": \"./node_modules/shelljs/src/mv.js\",\n\t\"./popd\": \"./node_modules/shelljs/src/popd.js\",\n\t\"./popd.js\": \"./node_modules/shelljs/src/popd.js\",\n\t\"./pushd\": \"./node_modules/shelljs/src/pushd.js\",\n\t\"./pushd.js\": \"./node_modules/shelljs/src/pushd.js\",\n\t\"./pwd\": \"./node_modules/shelljs/src/pwd.js\",\n\t\"./pwd.js\": \"./node_modules/shelljs/src/pwd.js\",\n\t\"./rm\": \"./node_modules/shelljs/src/rm.js\",\n\t\"./rm.js\": \"./node_modules/shelljs/src/rm.js\",\n\t\"./sed\": \"./node_modules/shelljs/src/sed.js\",\n\t\"./sed.js\": \"./node_modules/shelljs/src/sed.js\",\n\t\"./set\": \"./node_modules/shelljs/src/set.js\",\n\t\"./set.js\": \"./node_modules/shelljs/src/set.js\",\n\t\"./sort\": \"./node_modules/shelljs/src/sort.js\",\n\t\"./sort.js\": \"./node_modules/shelljs/src/sort.js\",\n\t\"./tail\": \"./node_modules/shelljs/src/tail.js\",\n\t\"./tail.js\": \"./node_modules/shelljs/src/tail.js\",\n\t\"./tempdir\": \"./node_modules/shelljs/src/tempdir.js\",\n\t\"./tempdir.js\": \"./node_modules/shelljs/src/tempdir.js\",\n\t\"./test\": \"./node_modules/shelljs/src/test.js\",\n\t\"./test.js\": \"./node_modules/shelljs/src/test.js\",\n\t\"./to\": \"./node_modules/shelljs/src/to.js\",\n\t\"./to.js\": \"./node_modules/shelljs/src/to.js\",\n\t\"./toEnd\": \"./node_modules/shelljs/src/toEnd.js\",\n\t\"./toEnd.js\": \"./node_modules/shelljs/src/toEnd.js\",\n\t\"./touch\": \"./node_modules/shelljs/src/touch.js\",\n\t\"./touch.js\": \"./node_modules/shelljs/src/touch.js\",\n\t\"./uniq\": \"./node_modules/shelljs/src/uniq.js\",\n\t\"./uniq.js\": \"./node_modules/shelljs/src/uniq.js\",\n\t\"./which\": \"./node_modules/shelljs/src/which.js\",\n\t\"./which.js\": \"./node_modules/shelljs/src/which.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/shelljs/src sync recursive ^\\\\.\\\\/.*$\";","var common = require('./common');\nvar fs = require('fs');\n\ncommon.register('cat', _cat, {\n  canReceivePipe: true,\n  cmdOptions: {\n    'n': 'number',\n  },\n});\n\n//@\n//@ ### cat([options,] file [, file ...])\n//@ ### cat([options,] file_array)\n//@\n//@ Available options:\n//@\n//@ + `-n`: number all output lines\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ var str = cat('file*.txt');\n//@ var str = cat('file1', 'file2');\n//@ var str = cat(['file1', 'file2']); // same as above\n//@ ```\n//@\n//@ Returns a string containing the given file, or a concatenated string\n//@ containing the files if more than one file is given (a new line character is\n//@ introduced between each file).\nfunction _cat(options, files) {\n  var cat = common.readFromPipe();\n\n  if (!files && !cat) common.error('no paths given');\n\n  files = [].slice.call(arguments, 1);\n\n  files.forEach(function (file) {\n    if (!fs.existsSync(file)) {\n      common.error('no such file or directory: ' + file);\n    } else if (common.statFollowLinks(file).isDirectory()) {\n      common.error(file + ': Is a directory');\n    }\n\n    cat += fs.readFileSync(file, 'utf8');\n  });\n\n  if (options.number) {\n    cat = addNumbers(cat);\n  }\n\n  return cat;\n}\nmodule.exports = _cat;\n\nfunction addNumbers(cat) {\n  var lines = cat.split('\\n');\n  var lastLine = lines.pop();\n\n  lines = lines.map(function (line, i) {\n    return numberedLine(i + 1, line);\n  });\n\n  if (lastLine.length) {\n    lastLine = numberedLine(lines.length + 1, lastLine);\n  }\n  lines.push(lastLine);\n\n  return lines.join('\\n');\n}\n\nfunction numberedLine(n, line) {\n  // GNU cat use six pad start number + tab. See http://lingrok.org/xref/coreutils/src/cat.c#57\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\n  var number = ('     ' + n).slice(-6) + '\\t';\n  return number + line;\n}\n","var os = require('os');\nvar common = require('./common');\n\ncommon.register('cd', _cd, {});\n\n//@\n//@ ### cd([dir])\n//@\n//@ Changes to directory `dir` for the duration of the script. Changes to home\n//@ directory if no argument is supplied.\nfunction _cd(options, dir) {\n  if (!dir) dir = os.homedir();\n\n  if (dir === '-') {\n    if (!process.env.OLDPWD) {\n      common.error('could not find previous directory');\n    } else {\n      dir = process.env.OLDPWD;\n    }\n  }\n\n  try {\n    var curDir = process.cwd();\n    process.chdir(dir);\n    process.env.OLDPWD = curDir;\n  } catch (e) {\n    // something went wrong, let's figure out the error\n    var err;\n    try {\n      common.statFollowLinks(dir); // if this succeeds, it must be some sort of file\n      err = 'not a directory: ' + dir;\n    } catch (e2) {\n      err = 'no such file or directory: ' + dir;\n    }\n    if (err) common.error(err);\n  }\n  return '';\n}\nmodule.exports = _cd;\n","var common = require('./common');\nvar fs = require('fs');\nvar path = require('path');\n\nvar PERMS = (function (base) {\n  return {\n    OTHER_EXEC: base.EXEC,\n    OTHER_WRITE: base.WRITE,\n    OTHER_READ: base.READ,\n\n    GROUP_EXEC: base.EXEC << 3,\n    GROUP_WRITE: base.WRITE << 3,\n    GROUP_READ: base.READ << 3,\n\n    OWNER_EXEC: base.EXEC << 6,\n    OWNER_WRITE: base.WRITE << 6,\n    OWNER_READ: base.READ << 6,\n\n    // Literal octal numbers are apparently not allowed in \"strict\" javascript.\n    STICKY: parseInt('01000', 8),\n    SETGID: parseInt('02000', 8),\n    SETUID: parseInt('04000', 8),\n\n    TYPE_MASK: parseInt('0770000', 8),\n  };\n}({\n  EXEC: 1,\n  WRITE: 2,\n  READ: 4,\n}));\n\ncommon.register('chmod', _chmod, {\n});\n\n//@\n//@ ### chmod([options,] octal_mode || octal_string, file)\n//@ ### chmod([options,] symbolic_mode, file)\n//@\n//@ Available options:\n//@\n//@ + `-v`: output a diagnostic for every file processed//@\n//@ + `-c`: like verbose, but report only when a change is made//@\n//@ + `-R`: change files and directories recursively//@\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ chmod(755, '/Users/brandon');\n//@ chmod('755', '/Users/brandon'); // same as above\n//@ chmod('u+x', '/Users/brandon');\n//@ chmod('-R', 'a-w', '/Users/brandon');\n//@ ```\n//@\n//@ Alters the permissions of a file or directory by either specifying the\n//@ absolute permissions in octal form or expressing the changes in symbols.\n//@ This command tries to mimic the POSIX behavior as much as possible.\n//@ Notable exceptions:\n//@\n//@ + In symbolic modes, `a-r` and `-r` are identical.  No consideration is\n//@   given to the `umask`.\n//@ + There is no \"quiet\" option, since default behavior is to run silent.\nfunction _chmod(options, mode, filePattern) {\n  if (!filePattern) {\n    if (options.length > 0 && options.charAt(0) === '-') {\n      // Special case where the specified file permissions started with - to subtract perms, which\n      // get picked up by the option parser as command flags.\n      // If we are down by one argument and options starts with -, shift everything over.\n      [].unshift.call(arguments, '');\n    } else {\n      common.error('You must specify a file.');\n    }\n  }\n\n  options = common.parseOptions(options, {\n    'R': 'recursive',\n    'c': 'changes',\n    'v': 'verbose',\n  });\n\n  filePattern = [].slice.call(arguments, 2);\n\n  var files;\n\n  // TODO: replace this with a call to common.expand()\n  if (options.recursive) {\n    files = [];\n    filePattern.forEach(function addFile(expandedFile) {\n      var stat = common.statNoFollowLinks(expandedFile);\n\n      if (!stat.isSymbolicLink()) {\n        files.push(expandedFile);\n\n        if (stat.isDirectory()) {  // intentionally does not follow symlinks.\n          fs.readdirSync(expandedFile).forEach(function (child) {\n            addFile(expandedFile + '/' + child);\n          });\n        }\n      }\n    });\n  } else {\n    files = filePattern;\n  }\n\n  files.forEach(function innerChmod(file) {\n    file = path.resolve(file);\n    if (!fs.existsSync(file)) {\n      common.error('File not found: ' + file);\n    }\n\n    // When recursing, don't follow symlinks.\n    if (options.recursive && common.statNoFollowLinks(file).isSymbolicLink()) {\n      return;\n    }\n\n    var stat = common.statFollowLinks(file);\n    var isDir = stat.isDirectory();\n    var perms = stat.mode;\n    var type = perms & PERMS.TYPE_MASK;\n\n    var newPerms = perms;\n\n    if (isNaN(parseInt(mode, 8))) {\n      // parse options\n      mode.split(',').forEach(function (symbolicMode) {\n        var pattern = /([ugoa]*)([=\\+-])([rwxXst]*)/i;\n        var matches = pattern.exec(symbolicMode);\n\n        if (matches) {\n          var applyTo = matches[1];\n          var operator = matches[2];\n          var change = matches[3];\n\n          var changeOwner = applyTo.indexOf('u') !== -1 || applyTo === 'a' || applyTo === '';\n          var changeGroup = applyTo.indexOf('g') !== -1 || applyTo === 'a' || applyTo === '';\n          var changeOther = applyTo.indexOf('o') !== -1 || applyTo === 'a' || applyTo === '';\n\n          var changeRead = change.indexOf('r') !== -1;\n          var changeWrite = change.indexOf('w') !== -1;\n          var changeExec = change.indexOf('x') !== -1;\n          var changeExecDir = change.indexOf('X') !== -1;\n          var changeSticky = change.indexOf('t') !== -1;\n          var changeSetuid = change.indexOf('s') !== -1;\n\n          if (changeExecDir && isDir) {\n            changeExec = true;\n          }\n\n          var mask = 0;\n          if (changeOwner) {\n            mask |= (changeRead ? PERMS.OWNER_READ : 0) + (changeWrite ? PERMS.OWNER_WRITE : 0) + (changeExec ? PERMS.OWNER_EXEC : 0) + (changeSetuid ? PERMS.SETUID : 0);\n          }\n          if (changeGroup) {\n            mask |= (changeRead ? PERMS.GROUP_READ : 0) + (changeWrite ? PERMS.GROUP_WRITE : 0) + (changeExec ? PERMS.GROUP_EXEC : 0) + (changeSetuid ? PERMS.SETGID : 0);\n          }\n          if (changeOther) {\n            mask |= (changeRead ? PERMS.OTHER_READ : 0) + (changeWrite ? PERMS.OTHER_WRITE : 0) + (changeExec ? PERMS.OTHER_EXEC : 0);\n          }\n\n          // Sticky bit is special - it's not tied to user, group or other.\n          if (changeSticky) {\n            mask |= PERMS.STICKY;\n          }\n\n          switch (operator) {\n            case '+':\n              newPerms |= mask;\n              break;\n\n            case '-':\n              newPerms &= ~mask;\n              break;\n\n            case '=':\n              newPerms = type + mask;\n\n              // According to POSIX, when using = to explicitly set the\n              // permissions, setuid and setgid can never be cleared.\n              if (common.statFollowLinks(file).isDirectory()) {\n                newPerms |= (PERMS.SETUID + PERMS.SETGID) & perms;\n              }\n              break;\n            default:\n              common.error('Could not recognize operator: `' + operator + '`');\n          }\n\n          if (options.verbose) {\n            console.log(file + ' -> ' + newPerms.toString(8));\n          }\n\n          if (perms !== newPerms) {\n            if (!options.verbose && options.changes) {\n              console.log(file + ' -> ' + newPerms.toString(8));\n            }\n            fs.chmodSync(file, newPerms);\n            perms = newPerms; // for the next round of changes!\n          }\n        } else {\n          common.error('Invalid symbolic mode change: ' + symbolicMode);\n        }\n      });\n    } else {\n      // they gave us a full number\n      newPerms = type + parseInt(mode, 8);\n\n      // POSIX rules are that setuid and setgid can only be added using numeric\n      // form, but not cleared.\n      if (common.statFollowLinks(file).isDirectory()) {\n        newPerms |= (PERMS.SETUID + PERMS.SETGID) & perms;\n      }\n\n      fs.chmodSync(file, newPerms);\n    }\n  });\n  return '';\n}\nmodule.exports = _chmod;\n","// Ignore warning about 'new String()'\n/* eslint no-new-wrappers: 0 */\n'use strict';\n\nvar os = require('os');\nvar fs = require('fs');\nvar glob = require('glob');\nvar shell = require('..');\n\nvar shellMethods = Object.create(shell);\n\nexports.extend = Object.assign;\n\n// Check if we're running under electron\nvar isElectron = Boolean(process.versions.electron);\n\n// Module globals (assume no execPath by default)\nvar DEFAULT_CONFIG = {\n  fatal: false,\n  globOptions: {},\n  maxdepth: 255,\n  noglob: false,\n  silent: false,\n  verbose: false,\n  execPath: null,\n  bufLength: 64 * 1024, // 64KB\n};\n\nvar config = {\n  reset: function () {\n    Object.assign(this, DEFAULT_CONFIG);\n    if (!isElectron) {\n      this.execPath = process.execPath;\n    }\n  },\n  resetForTesting: function () {\n    this.reset();\n    this.silent = true;\n  },\n};\n\nconfig.reset();\nexports.config = config;\n\n// Note: commands should generally consider these as read-only values.\nvar state = {\n  error: null,\n  errorCode: 0,\n  currentCmd: 'shell.js',\n};\nexports.state = state;\n\ndelete process.env.OLDPWD; // initially, there's no previous directory\n\n// Reliably test if something is any sort of javascript object\nfunction isObject(a) {\n  return typeof a === 'object' && a !== null;\n}\nexports.isObject = isObject;\n\nfunction log() {\n  /* istanbul ignore next */\n  if (!config.silent) {\n    console.error.apply(console, arguments);\n  }\n}\nexports.log = log;\n\n// Converts strings to be equivalent across all platforms. Primarily responsible\n// for making sure we use '/' instead of '\\' as path separators, but this may be\n// expanded in the future if necessary\nfunction convertErrorOutput(msg) {\n  if (typeof msg !== 'string') {\n    throw new TypeError('input must be a string');\n  }\n  return msg.replace(/\\\\/g, '/');\n}\nexports.convertErrorOutput = convertErrorOutput;\n\n// Shows error message. Throws if config.fatal is true\nfunction error(msg, _code, options) {\n  // Validate input\n  if (typeof msg !== 'string') throw new Error('msg must be a string');\n\n  var DEFAULT_OPTIONS = {\n    continue: false,\n    code: 1,\n    prefix: state.currentCmd + ': ',\n    silent: false,\n  };\n\n  if (typeof _code === 'number' && isObject(options)) {\n    options.code = _code;\n  } else if (isObject(_code)) { // no 'code'\n    options = _code;\n  } else if (typeof _code === 'number') { // no 'options'\n    options = { code: _code };\n  } else if (typeof _code !== 'number') { // only 'msg'\n    options = {};\n  }\n  options = Object.assign({}, DEFAULT_OPTIONS, options);\n\n  if (!state.errorCode) state.errorCode = options.code;\n\n  var logEntry = convertErrorOutput(options.prefix + msg);\n  state.error = state.error ? state.error + '\\n' : '';\n  state.error += logEntry;\n\n  // Throw an error, or log the entry\n  if (config.fatal) throw new Error(logEntry);\n  if (msg.length > 0 && !options.silent) log(logEntry);\n\n  if (!options.continue) {\n    throw {\n      msg: 'earlyExit',\n      retValue: (new ShellString('', state.error, state.errorCode)),\n    };\n  }\n}\nexports.error = error;\n\n//@\n//@ ### ShellString(str)\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ var foo = ShellString('hello world');\n//@ ```\n//@\n//@ Turns a regular string into a string-like object similar to what each\n//@ command returns. This has special methods, like `.to()` and `.toEnd()`.\nfunction ShellString(stdout, stderr, code) {\n  var that;\n  if (stdout instanceof Array) {\n    that = stdout;\n    that.stdout = stdout.join('\\n');\n    if (stdout.length > 0) that.stdout += '\\n';\n  } else {\n    that = new String(stdout);\n    that.stdout = stdout;\n  }\n  that.stderr = stderr;\n  that.code = code;\n  // A list of all commands that can appear on the right-hand side of a pipe\n  // (populated by calls to common.wrap())\n  pipeMethods.forEach(function (cmd) {\n    that[cmd] = shellMethods[cmd].bind(that);\n  });\n  return that;\n}\n\nexports.ShellString = ShellString;\n\n// Returns {'alice': true, 'bob': false} when passed a string and dictionary as follows:\n//   parseOptions('-a', {'a':'alice', 'b':'bob'});\n// Returns {'reference': 'string-value', 'bob': false} when passed two dictionaries of the form:\n//   parseOptions({'-r': 'string-value'}, {'r':'reference', 'b':'bob'});\n// Throws an error when passed a string that does not start with '-':\n//   parseOptions('a', {'a':'alice'}); // throws\nfunction parseOptions(opt, map, errorOptions) {\n  // Validate input\n  if (typeof opt !== 'string' && !isObject(opt)) {\n    throw new Error('options must be strings or key-value pairs');\n  } else if (!isObject(map)) {\n    throw new Error('parseOptions() internal error: map must be an object');\n  } else if (errorOptions && !isObject(errorOptions)) {\n    throw new Error('parseOptions() internal error: errorOptions must be object');\n  }\n\n  if (opt === '--') {\n    // This means there are no options.\n    return {};\n  }\n\n  // All options are false by default\n  var options = {};\n  Object.keys(map).forEach(function (letter) {\n    var optName = map[letter];\n    if (optName[0] !== '!') {\n      options[optName] = false;\n    }\n  });\n\n  if (opt === '') return options; // defaults\n\n  if (typeof opt === 'string') {\n    if (opt[0] !== '-') {\n      throw new Error(\"Options string must start with a '-'\");\n    }\n\n    // e.g. chars = ['R', 'f']\n    var chars = opt.slice(1).split('');\n\n    chars.forEach(function (c) {\n      if (c in map) {\n        var optionName = map[c];\n        if (optionName[0] === '!') {\n          options[optionName.slice(1)] = false;\n        } else {\n          options[optionName] = true;\n        }\n      } else {\n        error('option not recognized: ' + c, errorOptions || {});\n      }\n    });\n  } else { // opt is an Object\n    Object.keys(opt).forEach(function (key) {\n      // key is a string of the form '-r', '-d', etc.\n      var c = key[1];\n      if (c in map) {\n        var optionName = map[c];\n        options[optionName] = opt[key]; // assign the given value\n      } else {\n        error('option not recognized: ' + c, errorOptions || {});\n      }\n    });\n  }\n  return options;\n}\nexports.parseOptions = parseOptions;\n\n// Expands wildcards with matching (ie. existing) file names.\n// For example:\n//   expand(['file*.js']) = ['file1.js', 'file2.js', ...]\n//   (if the files 'file1.js', 'file2.js', etc, exist in the current dir)\nfunction expand(list) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('must be an array');\n  }\n  var expanded = [];\n  list.forEach(function (listEl) {\n    // Don't expand non-strings\n    if (typeof listEl !== 'string') {\n      expanded.push(listEl);\n    } else {\n      var ret;\n      try {\n        ret = glob.sync(listEl, config.globOptions);\n        // if nothing matched, interpret the string literally\n        ret = ret.length > 0 ? ret : [listEl];\n      } catch (e) {\n        // if glob fails, interpret the string literally\n        ret = [listEl];\n      }\n      expanded = expanded.concat(ret);\n    }\n  });\n  return expanded;\n}\nexports.expand = expand;\n\n// Normalizes Buffer creation, using Buffer.alloc if possible.\n// Also provides a good default buffer length for most use cases.\nvar buffer = typeof Buffer.alloc === 'function' ?\n  function (len) {\n    return Buffer.alloc(len || config.bufLength);\n  } :\n  function (len) {\n    return new Buffer(len || config.bufLength);\n  };\nexports.buffer = buffer;\n\n// Normalizes _unlinkSync() across platforms to match Unix behavior, i.e.\n// file can be unlinked even if it's read-only, see https://github.com/joyent/node/issues/3006\nfunction unlinkSync(file) {\n  try {\n    fs.unlinkSync(file);\n  } catch (e) {\n    // Try to override file permission\n    /* istanbul ignore next */\n    if (e.code === 'EPERM') {\n      fs.chmodSync(file, '0666');\n      fs.unlinkSync(file);\n    } else {\n      throw e;\n    }\n  }\n}\nexports.unlinkSync = unlinkSync;\n\n// wrappers around common.statFollowLinks and common.statNoFollowLinks that clarify intent\n// and improve readability\nfunction statFollowLinks() {\n  return fs.statSync.apply(fs, arguments);\n}\nexports.statFollowLinks = statFollowLinks;\n\nfunction statNoFollowLinks() {\n  return fs.lstatSync.apply(fs, arguments);\n}\nexports.statNoFollowLinks = statNoFollowLinks;\n\n// e.g. 'shelljs_a5f185d0443ca...'\nfunction randomFileName() {\n  function randomHash(count) {\n    if (count === 1) {\n      return parseInt(16 * Math.random(), 10).toString(16);\n    }\n    var hash = '';\n    for (var i = 0; i < count; i++) {\n      hash += randomHash(1);\n    }\n    return hash;\n  }\n\n  return 'shelljs_' + randomHash(20);\n}\nexports.randomFileName = randomFileName;\n\n// Common wrapper for all Unix-like commands that performs glob expansion,\n// command-logging, and other nice things\nfunction wrap(cmd, fn, options) {\n  options = options || {};\n  return function () {\n    var retValue = null;\n\n    state.currentCmd = cmd;\n    state.error = null;\n    state.errorCode = 0;\n\n    try {\n      var args = [].slice.call(arguments, 0);\n\n      // Log the command to stderr, if appropriate\n      if (config.verbose) {\n        console.error.apply(console, [cmd].concat(args));\n      }\n\n      // If this is coming from a pipe, let's set the pipedValue (otherwise, set\n      // it to the empty string)\n      state.pipedValue = (this && typeof this.stdout === 'string') ? this.stdout : '';\n\n      if (options.unix === false) { // this branch is for exec()\n        retValue = fn.apply(this, args);\n      } else { // and this branch is for everything else\n        if (isObject(args[0]) && args[0].constructor.name === 'Object') {\n          // a no-op, allowing the syntax `touch({'-r': file}, ...)`\n        } else if (args.length === 0 || typeof args[0] !== 'string' || args[0].length <= 1 || args[0][0] !== '-') {\n          args.unshift(''); // only add dummy option if '-option' not already present\n        }\n\n        // flatten out arrays that are arguments, to make the syntax:\n        //    `cp([file1, file2, file3], dest);`\n        // equivalent to:\n        //    `cp(file1, file2, file3, dest);`\n        args = args.reduce(function (accum, cur) {\n          if (Array.isArray(cur)) {\n            return accum.concat(cur);\n          }\n          accum.push(cur);\n          return accum;\n        }, []);\n\n        // Convert ShellStrings (basically just String objects) to regular strings\n        args = args.map(function (arg) {\n          if (isObject(arg) && arg.constructor.name === 'String') {\n            return arg.toString();\n          }\n          return arg;\n        });\n\n        // Expand the '~' if appropriate\n        var homeDir = os.homedir();\n        args = args.map(function (arg) {\n          if (typeof arg === 'string' && arg.slice(0, 2) === '~/' || arg === '~') {\n            return arg.replace(/^~/, homeDir);\n          }\n          return arg;\n        });\n\n        // Perform glob-expansion on all arguments after globStart, but preserve\n        // the arguments before it (like regexes for sed and grep)\n        if (!config.noglob && options.allowGlobbing === true) {\n          args = args.slice(0, options.globStart).concat(expand(args.slice(options.globStart)));\n        }\n\n        try {\n          // parse options if options are provided\n          if (isObject(options.cmdOptions)) {\n            args[0] = parseOptions(args[0], options.cmdOptions);\n          }\n\n          retValue = fn.apply(this, args);\n        } catch (e) {\n          /* istanbul ignore else */\n          if (e.msg === 'earlyExit') {\n            retValue = e.retValue;\n          } else {\n            throw e; // this is probably a bug that should be thrown up the call stack\n          }\n        }\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      if (!state.error) {\n        // If state.error hasn't been set it's an error thrown by Node, not us - probably a bug...\n        e.name = 'ShellJSInternalError';\n        throw e;\n      }\n      if (config.fatal) throw e;\n    }\n\n    if (options.wrapOutput &&\n        (typeof retValue === 'string' || Array.isArray(retValue))) {\n      retValue = new ShellString(retValue, state.error, state.errorCode);\n    }\n\n    state.currentCmd = 'shell.js';\n    return retValue;\n  };\n} // wrap\nexports.wrap = wrap;\n\n// This returns all the input that is piped into the current command (or the\n// empty string, if this isn't on the right-hand side of a pipe\nfunction _readFromPipe() {\n  return state.pipedValue;\n}\nexports.readFromPipe = _readFromPipe;\n\nvar DEFAULT_WRAP_OPTIONS = {\n  allowGlobbing: true,\n  canReceivePipe: false,\n  cmdOptions: null,\n  globStart: 1,\n  pipeOnly: false,\n  wrapOutput: true,\n  unix: true,\n};\n\n// This is populated during plugin registration\nvar pipeMethods = [];\n\n// Register a new ShellJS command\nfunction _register(name, implementation, wrapOptions) {\n  wrapOptions = wrapOptions || {};\n\n  // Validate options\n  Object.keys(wrapOptions).forEach(function (option) {\n    if (!DEFAULT_WRAP_OPTIONS.hasOwnProperty(option)) {\n      throw new Error(\"Unknown option '\" + option + \"'\");\n    }\n    if (typeof wrapOptions[option] !== typeof DEFAULT_WRAP_OPTIONS[option]) {\n      throw new TypeError(\"Unsupported type '\" + typeof wrapOptions[option] +\n        \"' for option '\" + option + \"'\");\n    }\n  });\n\n  // If an option isn't specified, use the default\n  wrapOptions = Object.assign({}, DEFAULT_WRAP_OPTIONS, wrapOptions);\n\n  if (shell.hasOwnProperty(name)) {\n    throw new Error('Command `' + name + '` already exists');\n  }\n\n  if (wrapOptions.pipeOnly) {\n    wrapOptions.canReceivePipe = true;\n    shellMethods[name] = wrap(name, implementation, wrapOptions);\n  } else {\n    shell[name] = wrap(name, implementation, wrapOptions);\n  }\n\n  if (wrapOptions.canReceivePipe) {\n    pipeMethods.push(name);\n  }\n}\nexports.register = _register;\n","var fs = require('fs');\nvar path = require('path');\nvar common = require('./common');\n\ncommon.register('cp', _cp, {\n  cmdOptions: {\n    'f': '!no_force',\n    'n': 'no_force',\n    'u': 'update',\n    'R': 'recursive',\n    'r': 'recursive',\n    'L': 'followsymlink',\n    'P': 'noFollowsymlink',\n  },\n  wrapOutput: false,\n});\n\n// Buffered file copy, synchronous\n// (Using readFileSync() + writeFileSync() could easily cause a memory overflow\n//  with large files)\nfunction copyFileSync(srcFile, destFile, options) {\n  if (!fs.existsSync(srcFile)) {\n    common.error('copyFileSync: no such file or directory: ' + srcFile);\n  }\n\n  var isWindows = process.platform === 'win32';\n\n  // Check the mtimes of the files if the '-u' flag is provided\n  try {\n    if (options.update && common.statFollowLinks(srcFile).mtime < fs.statSync(destFile).mtime) {\n      return;\n    }\n  } catch (e) {\n    // If we're here, destFile probably doesn't exist, so just do a normal copy\n  }\n\n  if (common.statNoFollowLinks(srcFile).isSymbolicLink() && !options.followsymlink) {\n    try {\n      common.statNoFollowLinks(destFile);\n      common.unlinkSync(destFile); // re-link it\n    } catch (e) {\n      // it doesn't exist, so no work needs to be done\n    }\n\n    var symlinkFull = fs.readlinkSync(srcFile);\n    fs.symlinkSync(symlinkFull, destFile, isWindows ? 'junction' : null);\n  } else {\n    var buf = common.buffer();\n    var bufLength = buf.length;\n    var bytesRead = bufLength;\n    var pos = 0;\n    var fdr = null;\n    var fdw = null;\n\n    try {\n      fdr = fs.openSync(srcFile, 'r');\n    } catch (e) {\n      /* istanbul ignore next */\n      common.error('copyFileSync: could not read src file (' + srcFile + ')');\n    }\n\n    try {\n      fdw = fs.openSync(destFile, 'w');\n    } catch (e) {\n      /* istanbul ignore next */\n      common.error('copyFileSync: could not write to dest file (code=' + e.code + '):' + destFile);\n    }\n\n    while (bytesRead === bufLength) {\n      bytesRead = fs.readSync(fdr, buf, 0, bufLength, pos);\n      fs.writeSync(fdw, buf, 0, bytesRead);\n      pos += bytesRead;\n    }\n\n    fs.closeSync(fdr);\n    fs.closeSync(fdw);\n\n    fs.chmodSync(destFile, common.statFollowLinks(srcFile).mode);\n  }\n}\n\n// Recursively copies 'sourceDir' into 'destDir'\n// Adapted from https://github.com/ryanmcgrath/wrench-js\n//\n// Copyright (c) 2010 Ryan McGrath\n// Copyright (c) 2012 Artur Adib\n//\n// Licensed under the MIT License\n// http://www.opensource.org/licenses/mit-license.php\nfunction cpdirSyncRecursive(sourceDir, destDir, currentDepth, opts) {\n  if (!opts) opts = {};\n\n  // Ensure there is not a run away recursive copy\n  if (currentDepth >= common.config.maxdepth) return;\n  currentDepth++;\n\n  var isWindows = process.platform === 'win32';\n\n  // Create the directory where all our junk is moving to; read the mode of the\n  // source directory and mirror it\n  try {\n    fs.mkdirSync(destDir);\n  } catch (e) {\n    // if the directory already exists, that's okay\n    if (e.code !== 'EEXIST') throw e;\n  }\n\n  var files = fs.readdirSync(sourceDir);\n\n  for (var i = 0; i < files.length; i++) {\n    var srcFile = sourceDir + '/' + files[i];\n    var destFile = destDir + '/' + files[i];\n    var srcFileStat = common.statNoFollowLinks(srcFile);\n\n    var symlinkFull;\n    if (opts.followsymlink) {\n      if (cpcheckcycle(sourceDir, srcFile)) {\n        // Cycle link found.\n        console.error('Cycle link found.');\n        symlinkFull = fs.readlinkSync(srcFile);\n        fs.symlinkSync(symlinkFull, destFile, isWindows ? 'junction' : null);\n        continue;\n      }\n    }\n    if (srcFileStat.isDirectory()) {\n      /* recursion this thing right on back. */\n      cpdirSyncRecursive(srcFile, destFile, currentDepth, opts);\n    } else if (srcFileStat.isSymbolicLink() && !opts.followsymlink) {\n      symlinkFull = fs.readlinkSync(srcFile);\n      try {\n        common.statNoFollowLinks(destFile);\n        common.unlinkSync(destFile); // re-link it\n      } catch (e) {\n        // it doesn't exist, so no work needs to be done\n      }\n      fs.symlinkSync(symlinkFull, destFile, isWindows ? 'junction' : null);\n    } else if (srcFileStat.isSymbolicLink() && opts.followsymlink) {\n      srcFileStat = common.statFollowLinks(srcFile);\n      if (srcFileStat.isDirectory()) {\n        cpdirSyncRecursive(srcFile, destFile, currentDepth, opts);\n      } else {\n        copyFileSync(srcFile, destFile, opts);\n      }\n    } else {\n      /* At this point, we've hit a file actually worth copying... so copy it on over. */\n      if (fs.existsSync(destFile) && opts.no_force) {\n        common.log('skipping existing file: ' + files[i]);\n      } else {\n        copyFileSync(srcFile, destFile, opts);\n      }\n    }\n  } // for files\n\n  // finally change the mode for the newly created directory (otherwise, we\n  // couldn't add files to a read-only directory).\n  var checkDir = common.statFollowLinks(sourceDir);\n  fs.chmodSync(destDir, checkDir.mode);\n} // cpdirSyncRecursive\n\n// Checks if cureent file was created recently\nfunction checkRecentCreated(sources, index) {\n  var lookedSource = sources[index];\n  return sources.slice(0, index).some(function (src) {\n    return path.basename(src) === path.basename(lookedSource);\n  });\n}\n\nfunction cpcheckcycle(sourceDir, srcFile) {\n  var srcFileStat = common.statNoFollowLinks(srcFile);\n  if (srcFileStat.isSymbolicLink()) {\n    // Do cycle check. For example:\n    //   $ mkdir -p 1/2/3/4\n    //   $ cd  1/2/3/4\n    //   $ ln -s ../../3 link\n    //   $ cd ../../../..\n    //   $ cp -RL 1 copy\n    var cyclecheck = common.statFollowLinks(srcFile);\n    if (cyclecheck.isDirectory()) {\n      var sourcerealpath = fs.realpathSync(sourceDir);\n      var symlinkrealpath = fs.realpathSync(srcFile);\n      var re = new RegExp(symlinkrealpath);\n      if (re.test(sourcerealpath)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n//@\n//@ ### cp([options,] source [, source ...], dest)\n//@ ### cp([options,] source_array, dest)\n//@\n//@ Available options:\n//@\n//@ + `-f`: force (default behavior)\n//@ + `-n`: no-clobber\n//@ + `-u`: only copy if `source` is newer than `dest`\n//@ + `-r`, `-R`: recursive\n//@ + `-L`: follow symlinks\n//@ + `-P`: don't follow symlinks\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ cp('file1', 'dir1');\n//@ cp('-R', 'path/to/dir/', '~/newCopy/');\n//@ cp('-Rf', '/tmp/*', '/usr/local/*', '/home/tmp');\n//@ cp('-Rf', ['/tmp/*', '/usr/local/*'], '/home/tmp'); // same as above\n//@ ```\n//@\n//@ Copies files.\nfunction _cp(options, sources, dest) {\n  // If we're missing -R, it actually implies -L (unless -P is explicit)\n  if (options.followsymlink) {\n    options.noFollowsymlink = false;\n  }\n  if (!options.recursive && !options.noFollowsymlink) {\n    options.followsymlink = true;\n  }\n\n  // Get sources, dest\n  if (arguments.length < 3) {\n    common.error('missing <source> and/or <dest>');\n  } else {\n    sources = [].slice.call(arguments, 1, arguments.length - 1);\n    dest = arguments[arguments.length - 1];\n  }\n\n  var destExists = fs.existsSync(dest);\n  var destStat = destExists && common.statFollowLinks(dest);\n\n  // Dest is not existing dir, but multiple sources given\n  if ((!destExists || !destStat.isDirectory()) && sources.length > 1) {\n    common.error('dest is not a directory (too many sources)');\n  }\n\n  // Dest is an existing file, but -n is given\n  if (destExists && destStat.isFile() && options.no_force) {\n    return new common.ShellString('', '', 0);\n  }\n\n  sources.forEach(function (src, srcIndex) {\n    if (!fs.existsSync(src)) {\n      if (src === '') src = \"''\"; // if src was empty string, display empty string\n      common.error('no such file or directory: ' + src, { continue: true });\n      return; // skip file\n    }\n    var srcStat = common.statFollowLinks(src);\n    if (!options.noFollowsymlink && srcStat.isDirectory()) {\n      if (!options.recursive) {\n        // Non-Recursive\n        common.error(\"omitting directory '\" + src + \"'\", { continue: true });\n      } else {\n        // Recursive\n        // 'cp /a/source dest' should create 'source' in 'dest'\n        var newDest = (destStat && destStat.isDirectory()) ?\n            path.join(dest, path.basename(src)) :\n            dest;\n\n        try {\n          common.statFollowLinks(path.dirname(dest));\n          cpdirSyncRecursive(src, newDest, 0, { no_force: options.no_force, followsymlink: options.followsymlink });\n        } catch (e) {\n          /* istanbul ignore next */\n          common.error(\"cannot create directory '\" + dest + \"': No such file or directory\");\n        }\n      }\n    } else {\n      // If here, src is a file\n\n      // When copying to '/path/dir':\n      //    thisDest = '/path/dir/file1'\n      var thisDest = dest;\n      if (destStat && destStat.isDirectory()) {\n        thisDest = path.normalize(dest + '/' + path.basename(src));\n      }\n\n      var thisDestExists = fs.existsSync(thisDest);\n      if (thisDestExists && checkRecentCreated(sources, srcIndex)) {\n        // cannot overwrite file created recently in current execution, but we want to continue copying other files\n        if (!options.no_force) {\n          common.error(\"will not overwrite just-created '\" + thisDest + \"' with '\" + src + \"'\", { continue: true });\n        }\n        return;\n      }\n\n      if (thisDestExists && options.no_force) {\n        return; // skip file\n      }\n\n      if (path.relative(src, thisDest) === '') {\n        // a file cannot be copied to itself, but we want to continue copying other files\n        common.error(\"'\" + thisDest + \"' and '\" + src + \"' are the same file\", { continue: true });\n        return;\n      }\n\n      copyFileSync(src, thisDest, options);\n    }\n  }); // forEach(src)\n\n  return new common.ShellString('', common.state.error, common.state.errorCode);\n}\nmodule.exports = _cp;\n","var common = require('./common');\nvar _cd = require('./cd');\nvar path = require('path');\n\ncommon.register('dirs', _dirs, {\n  wrapOutput: false,\n});\ncommon.register('pushd', _pushd, {\n  wrapOutput: false,\n});\ncommon.register('popd', _popd, {\n  wrapOutput: false,\n});\n\n// Pushd/popd/dirs internals\nvar _dirStack = [];\n\nfunction _isStackIndex(index) {\n  return (/^[\\-+]\\d+$/).test(index);\n}\n\nfunction _parseStackIndex(index) {\n  if (_isStackIndex(index)) {\n    if (Math.abs(index) < _dirStack.length + 1) { // +1 for pwd\n      return (/^-/).test(index) ? Number(index) - 1 : Number(index);\n    }\n    common.error(index + ': directory stack index out of range');\n  } else {\n    common.error(index + ': invalid number');\n  }\n}\n\nfunction _actualDirStack() {\n  return [process.cwd()].concat(_dirStack);\n}\n\n//@\n//@ ### pushd([options,] [dir | '-N' | '+N'])\n//@\n//@ Available options:\n//@\n//@ + `-n`: Suppresses the normal change of directory when adding directories to the stack, so that only the stack is manipulated.\n//@ + `-q`: Supresses output to the console.\n//@\n//@ Arguments:\n//@\n//@ + `dir`: Sets the current working directory to the top of the stack, then executes the equivalent of `cd dir`.\n//@ + `+N`: Brings the Nth directory (counting from the left of the list printed by dirs, starting with zero) to the top of the list by rotating the stack.\n//@ + `-N`: Brings the Nth directory (counting from the right of the list printed by dirs, starting with zero) to the top of the list by rotating the stack.\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ // process.cwd() === '/usr'\n//@ pushd('/etc'); // Returns /etc /usr\n//@ pushd('+1');   // Returns /usr /etc\n//@ ```\n//@\n//@ Save the current directory on the top of the directory stack and then `cd` to `dir`. With no arguments, `pushd` exchanges the top two directories. Returns an array of paths in the stack.\nfunction _pushd(options, dir) {\n  if (_isStackIndex(options)) {\n    dir = options;\n    options = '';\n  }\n\n  options = common.parseOptions(options, {\n    'n': 'no-cd',\n    'q': 'quiet',\n  });\n\n  var dirs = _actualDirStack();\n\n  if (dir === '+0') {\n    return dirs; // +0 is a noop\n  } else if (!dir) {\n    if (dirs.length > 1) {\n      dirs = dirs.splice(1, 1).concat(dirs);\n    } else {\n      return common.error('no other directory');\n    }\n  } else if (_isStackIndex(dir)) {\n    var n = _parseStackIndex(dir);\n    dirs = dirs.slice(n).concat(dirs.slice(0, n));\n  } else {\n    if (options['no-cd']) {\n      dirs.splice(1, 0, dir);\n    } else {\n      dirs.unshift(dir);\n    }\n  }\n\n  if (options['no-cd']) {\n    dirs = dirs.slice(1);\n  } else {\n    dir = path.resolve(dirs.shift());\n    _cd('', dir);\n  }\n\n  _dirStack = dirs;\n  return _dirs(options.quiet ? '-q' : '');\n}\nexports.pushd = _pushd;\n\n//@\n//@\n//@ ### popd([options,] ['-N' | '+N'])\n//@\n//@ Available options:\n//@\n//@ + `-n`: Suppress the normal directory change when removing directories from the stack, so that only the stack is manipulated.\n//@ + `-q`: Supresses output to the console.\n//@\n//@ Arguments:\n//@\n//@ + `+N`: Removes the Nth directory (counting from the left of the list printed by dirs), starting with zero.\n//@ + `-N`: Removes the Nth directory (counting from the right of the list printed by dirs), starting with zero.\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ echo(process.cwd()); // '/usr'\n//@ pushd('/etc');       // '/etc /usr'\n//@ echo(process.cwd()); // '/etc'\n//@ popd();              // '/usr'\n//@ echo(process.cwd()); // '/usr'\n//@ ```\n//@\n//@ When no arguments are given, `popd` removes the top directory from the stack and performs a `cd` to the new top directory. The elements are numbered from 0, starting at the first directory listed with dirs (i.e., `popd` is equivalent to `popd +0`). Returns an array of paths in the stack.\nfunction _popd(options, index) {\n  if (_isStackIndex(options)) {\n    index = options;\n    options = '';\n  }\n\n  options = common.parseOptions(options, {\n    'n': 'no-cd',\n    'q': 'quiet',\n  });\n\n  if (!_dirStack.length) {\n    return common.error('directory stack empty');\n  }\n\n  index = _parseStackIndex(index || '+0');\n\n  if (options['no-cd'] || index > 0 || _dirStack.length + index === 0) {\n    index = index > 0 ? index - 1 : index;\n    _dirStack.splice(index, 1);\n  } else {\n    var dir = path.resolve(_dirStack.shift());\n    _cd('', dir);\n  }\n\n  return _dirs(options.quiet ? '-q' : '');\n}\nexports.popd = _popd;\n\n//@\n//@\n//@ ### dirs([options | '+N' | '-N'])\n//@\n//@ Available options:\n//@\n//@ + `-c`: Clears the directory stack by deleting all of the elements.\n//@ + `-q`: Supresses output to the console.\n//@\n//@ Arguments:\n//@\n//@ + `+N`: Displays the Nth directory (counting from the left of the list printed by dirs when invoked without options), starting with zero.\n//@ + `-N`: Displays the Nth directory (counting from the right of the list printed by dirs when invoked without options), starting with zero.\n//@\n//@ Display the list of currently remembered directories. Returns an array of paths in the stack, or a single path if `+N` or `-N` was specified.\n//@\n//@ See also: `pushd`, `popd`\nfunction _dirs(options, index) {\n  if (_isStackIndex(options)) {\n    index = options;\n    options = '';\n  }\n\n  options = common.parseOptions(options, {\n    'c': 'clear',\n    'q': 'quiet',\n  });\n\n  if (options.clear) {\n    _dirStack = [];\n    return _dirStack;\n  }\n\n  var stack = _actualDirStack();\n\n  if (index) {\n    index = _parseStackIndex(index);\n\n    if (index < 0) {\n      index = stack.length + index;\n    }\n\n    if (!options.quiet) {\n      common.log(stack[index]);\n    }\n    return stack[index];\n  }\n\n  if (!options.quiet) {\n    common.log(stack.join(' '));\n  }\n\n  return stack;\n}\nexports.dirs = _dirs;\n","var format = require('util').format;\n\nvar common = require('./common');\n\ncommon.register('echo', _echo, {\n  allowGlobbing: false,\n});\n\n//@\n//@ ### echo([options,] string [, string ...])\n//@\n//@ Available options:\n//@\n//@ + `-e`: interpret backslash escapes (default)\n//@ + `-n`: remove trailing newline from output\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ echo('hello world');\n//@ var str = echo('hello world');\n//@ echo('-n', 'no newline at end');\n//@ ```\n//@\n//@ Prints `string` to stdout, and returns string with additional utility methods\n//@ like `.to()`.\nfunction _echo(opts) {\n  // allow strings starting with '-', see issue #20\n  var messages = [].slice.call(arguments, opts ? 0 : 1);\n  var options = {};\n\n  // If the first argument starts with '-', parse it as options string.\n  // If parseOptions throws, it wasn't an options string.\n  try {\n    options = common.parseOptions(messages[0], {\n      'e': 'escapes',\n      'n': 'no_newline',\n    }, {\n      silent: true,\n    });\n\n    // Allow null to be echoed\n    if (messages[0]) {\n      messages.shift();\n    }\n  } catch (_) {\n    // Clear out error if an error occurred\n    common.state.error = null;\n  }\n\n  var output = format.apply(null, messages);\n\n  // Add newline if -n is not passed.\n  if (!options.no_newline) {\n    output += '\\n';\n  }\n\n  process.stdout.write(output);\n\n  return output;\n}\n\nmodule.exports = _echo;\n","var common = require('./common');\n\n//@\n//@ ### error()\n//@\n//@ Tests if error occurred in the last command. Returns a truthy value if an\n//@ error returned, or a falsy value otherwise.\n//@\n//@ **Note**: do not rely on the\n//@ return value to be an error message. If you need the last error message, use\n//@ the `.stderr` attribute from the last command's return value instead.\nfunction error() {\n  return common.state.error;\n}\nmodule.exports = error;\n","if (require.main !== module) {\n  throw new Error('This file should not be required');\n}\n\nvar childProcess = require('child_process');\nvar fs = require('fs');\n\nvar paramFilePath = process.argv[2];\n\nvar serializedParams = fs.readFileSync(paramFilePath, 'utf8');\nvar params = JSON.parse(serializedParams);\n\nvar cmd = params.command;\nvar execOptions = params.execOptions;\nvar pipe = params.pipe;\nvar stdoutFile = params.stdoutFile;\nvar stderrFile = params.stderrFile;\n\nvar c = childProcess.exec(cmd, execOptions, function (err) {\n  if (!err) {\n    process.exitCode = 0;\n  } else if (err.code === undefined) {\n    process.exitCode = 1;\n  } else {\n    process.exitCode = err.code;\n  }\n});\n\nvar stdoutStream = fs.createWriteStream(stdoutFile);\nvar stderrStream = fs.createWriteStream(stderrFile);\n\nc.stdout.pipe(stdoutStream);\nc.stderr.pipe(stderrStream);\nc.stdout.pipe(process.stdout);\nc.stderr.pipe(process.stderr);\n\nif (pipe) {\n  c.stdin.end(pipe);\n}\n","var common = require('./common');\nvar _tempDir = require('./tempdir').tempDir;\nvar _pwd = require('./pwd');\nvar path = require('path');\nvar fs = require('fs');\nvar child = require('child_process');\n\nvar DEFAULT_MAXBUFFER_SIZE = 20 * 1024 * 1024;\nvar DEFAULT_ERROR_CODE = 1;\n\ncommon.register('exec', _exec, {\n  unix: false,\n  canReceivePipe: true,\n  wrapOutput: false,\n});\n\n// We use this function to run `exec` synchronously while also providing realtime\n// output.\nfunction execSync(cmd, opts, pipe) {\n  if (!common.config.execPath) {\n    common.error('Unable to find a path to the node binary. Please manually set config.execPath');\n  }\n\n  var tempDir = _tempDir();\n  var paramsFile = path.resolve(tempDir + '/' + common.randomFileName());\n  var stderrFile = path.resolve(tempDir + '/' + common.randomFileName());\n  var stdoutFile = path.resolve(tempDir + '/' + common.randomFileName());\n\n  opts = common.extend({\n    silent: common.config.silent,\n    cwd: _pwd().toString(),\n    env: process.env,\n    maxBuffer: DEFAULT_MAXBUFFER_SIZE,\n    encoding: 'utf8',\n  }, opts);\n\n  if (fs.existsSync(paramsFile)) common.unlinkSync(paramsFile);\n  if (fs.existsSync(stderrFile)) common.unlinkSync(stderrFile);\n  if (fs.existsSync(stdoutFile)) common.unlinkSync(stdoutFile);\n\n  opts.cwd = path.resolve(opts.cwd);\n\n  var paramsToSerialize = {\n    command: cmd,\n    execOptions: opts,\n    pipe: pipe,\n    stdoutFile: stdoutFile,\n    stderrFile: stderrFile,\n  };\n\n  fs.writeFileSync(paramsFile, JSON.stringify(paramsToSerialize), 'utf8');\n\n  var execArgs = [\n    path.join(__dirname, 'exec-child.js'),\n    paramsFile,\n  ];\n\n  /* istanbul ignore else */\n  if (opts.silent) {\n    opts.stdio = 'ignore';\n  } else {\n    opts.stdio = [0, 1, 2];\n  }\n\n  var code = 0;\n\n  // Welcome to the future\n  try {\n    // Bad things if we pass in a `shell` option to child_process.execFileSync,\n    // so we need to explicitly remove it here.\n    delete opts.shell;\n\n    child.execFileSync(common.config.execPath, execArgs, opts);\n  } catch (e) {\n    // Commands with non-zero exit code raise an exception.\n    code = e.status || DEFAULT_ERROR_CODE;\n  }\n\n  // fs.readFileSync uses buffer encoding by default, so call\n  // it without the encoding option if the encoding is 'buffer'.\n  // Also, if the exec timeout is too short for node to start up,\n  // the files will not be created, so these calls will throw.\n  var stdout = '';\n  var stderr = '';\n  if (opts.encoding === 'buffer') {\n    stdout = fs.readFileSync(stdoutFile);\n    stderr = fs.readFileSync(stderrFile);\n  } else {\n    stdout = fs.readFileSync(stdoutFile, opts.encoding);\n    stderr = fs.readFileSync(stderrFile, opts.encoding);\n  }\n\n  // No biggie if we can't erase the files now -- they're in a temp dir anyway\n  try { common.unlinkSync(paramsFile); } catch (e) {}\n  try { common.unlinkSync(stderrFile); } catch (e) {}\n  try { common.unlinkSync(stdoutFile); } catch (e) {}\n\n  if (code !== 0) {\n    // Note: `silent` should be unconditionally true to avoid double-printing\n    // the command's stderr, and to avoid printing any stderr when the user has\n    // set `shell.config.silent`.\n    common.error(stderr, code, { continue: true, silent: true });\n  }\n  var obj = common.ShellString(stdout, stderr, code);\n  return obj;\n} // execSync()\n\n// Wrapper around exec() to enable echoing output to console in real time\nfunction execAsync(cmd, opts, pipe, callback) {\n  opts = common.extend({\n    silent: common.config.silent,\n    cwd: _pwd().toString(),\n    env: process.env,\n    maxBuffer: DEFAULT_MAXBUFFER_SIZE,\n    encoding: 'utf8',\n  }, opts);\n\n  var c = child.exec(cmd, opts, function (err, stdout, stderr) {\n    if (callback) {\n      if (!err) {\n        callback(0, stdout, stderr);\n      } else if (err.code === undefined) {\n        // See issue #536\n        /* istanbul ignore next */\n        callback(1, stdout, stderr);\n      } else {\n        callback(err.code, stdout, stderr);\n      }\n    }\n  });\n\n  if (pipe) c.stdin.end(pipe);\n\n  if (!opts.silent) {\n    c.stdout.pipe(process.stdout);\n    c.stderr.pipe(process.stderr);\n  }\n\n  return c;\n}\n\n//@\n//@ ### exec(command [, options] [, callback])\n//@\n//@ Available options:\n//@\n//@ + `async`: Asynchronous execution. If a callback is provided, it will be set to\n//@   `true`, regardless of the passed value (default: `false`).\n//@ + `silent`: Do not echo program output to console (default: `false`).\n//@ + `encoding`: Character encoding to use. Affects the values returned to stdout and stderr, and\n//@   what is written to stdout and stderr when not in silent mode (default: `'utf8'`).\n//@ + and any option available to Node.js's\n//@   [`child_process.exec()`](https://nodejs.org/api/child_process.html#child_process_child_process_exec_command_options_callback)\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ var version = exec('node --version', {silent:true}).stdout;\n//@\n//@ var child = exec('some_long_running_process', {async:true});\n//@ child.stdout.on('data', function(data) {\n//@   /* ... do something with data ... */\n//@ });\n//@\n//@ exec('some_long_running_process', function(code, stdout, stderr) {\n//@   console.log('Exit code:', code);\n//@   console.log('Program output:', stdout);\n//@   console.log('Program stderr:', stderr);\n//@ });\n//@ ```\n//@\n//@ Executes the given `command` _synchronously_, unless otherwise specified.  When in synchronous\n//@ mode, this returns a `ShellString` (compatible with ShellJS v0.6.x, which returns an object\n//@ of the form `{ code:..., stdout:... , stderr:... }`). Otherwise, this returns the child process\n//@ object, and the `callback` receives the arguments `(code, stdout, stderr)`.\n//@\n//@ Not seeing the behavior you want? `exec()` runs everything through `sh`\n//@ by default (or `cmd.exe` on Windows), which differs from `bash`. If you\n//@ need bash-specific behavior, try out the `{shell: 'path/to/bash'}` option.\nfunction _exec(command, options, callback) {\n  options = options || {};\n  if (!command) common.error('must specify command');\n\n  var pipe = common.readFromPipe();\n\n  // Callback is defined instead of options.\n  if (typeof options === 'function') {\n    callback = options;\n    options = { async: true };\n  }\n\n  // Callback is defined with options.\n  if (typeof options === 'object' && typeof callback === 'function') {\n    options.async = true;\n  }\n\n  options = common.extend({\n    silent: common.config.silent,\n    async: false,\n  }, options);\n\n  if (options.async) {\n    return execAsync(command, options, pipe, callback);\n  } else {\n    return execSync(command, options, pipe);\n  }\n}\nmodule.exports = _exec;\n","var path = require('path');\nvar common = require('./common');\nvar _ls = require('./ls');\n\ncommon.register('find', _find, {});\n\n//@\n//@ ### find(path [, path ...])\n//@ ### find(path_array)\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ find('src', 'lib');\n//@ find(['src', 'lib']); // same as above\n//@ find('.').filter(function(file) { return file.match(/\\.js$/); });\n//@ ```\n//@\n//@ Returns array of all files (however deep) in the given paths.\n//@\n//@ The main difference from `ls('-R', path)` is that the resulting file names\n//@ include the base directories (e.g., `lib/resources/file1` instead of just `file1`).\nfunction _find(options, paths) {\n  if (!paths) {\n    common.error('no path specified');\n  } else if (typeof paths === 'string') {\n    paths = [].slice.call(arguments, 1);\n  }\n\n  var list = [];\n\n  function pushFile(file) {\n    if (process.platform === 'win32') {\n      file = file.replace(/\\\\/g, '/');\n    }\n    list.push(file);\n  }\n\n  // why not simply do `ls('-R', paths)`? because the output wouldn't give the base dirs\n  // to get the base dir in the output, we need instead `ls('-R', 'dir/*')` for every directory\n\n  paths.forEach(function (file) {\n    var stat;\n    try {\n      stat = common.statFollowLinks(file);\n    } catch (e) {\n      common.error('no such file or directory: ' + file);\n    }\n\n    pushFile(file);\n\n    if (stat.isDirectory()) {\n      _ls({ recursive: true, all: true }, file).forEach(function (subfile) {\n        pushFile(path.join(file, subfile));\n      });\n    }\n  });\n\n  return list;\n}\nmodule.exports = _find;\n","var common = require('./common');\nvar fs = require('fs');\n\ncommon.register('grep', _grep, {\n  globStart: 2, // don't glob-expand the regex\n  canReceivePipe: true,\n  cmdOptions: {\n    'v': 'inverse',\n    'l': 'nameOnly',\n    'i': 'ignoreCase',\n  },\n});\n\n//@\n//@ ### grep([options,] regex_filter, file [, file ...])\n//@ ### grep([options,] regex_filter, file_array)\n//@\n//@ Available options:\n//@\n//@ + `-v`: Invert `regex_filter` (only print non-matching lines).\n//@ + `-l`: Print only filenames of matching files.\n//@ + `-i`: Ignore case.\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ grep('-v', 'GLOBAL_VARIABLE', '*.js');\n//@ grep('GLOBAL_VARIABLE', '*.js');\n//@ ```\n//@\n//@ Reads input string from given files and returns a string containing all lines of the\n//@ file that match the given `regex_filter`.\nfunction _grep(options, regex, files) {\n  // Check if this is coming from a pipe\n  var pipe = common.readFromPipe();\n\n  if (!files && !pipe) common.error('no paths given', 2);\n\n  files = [].slice.call(arguments, 2);\n\n  if (pipe) {\n    files.unshift('-');\n  }\n\n  var grep = [];\n  if (options.ignoreCase) {\n    regex = new RegExp(regex, 'i');\n  }\n  files.forEach(function (file) {\n    if (!fs.existsSync(file) && file !== '-') {\n      common.error('no such file or directory: ' + file, 2, { continue: true });\n      return;\n    }\n\n    var contents = file === '-' ? pipe : fs.readFileSync(file, 'utf8');\n    if (options.nameOnly) {\n      if (contents.match(regex)) {\n        grep.push(file);\n      }\n    } else {\n      var lines = contents.split('\\n');\n      lines.forEach(function (line) {\n        var matched = line.match(regex);\n        if ((options.inverse && !matched) || (!options.inverse && matched)) {\n          grep.push(line);\n        }\n      });\n    }\n  });\n\n  return grep.join('\\n') + '\\n';\n}\nmodule.exports = _grep;\n","var common = require('./common');\nvar fs = require('fs');\n\ncommon.register('head', _head, {\n  canReceivePipe: true,\n  cmdOptions: {\n    'n': 'numLines',\n  },\n});\n\n// Reads |numLines| lines or the entire file, whichever is less.\nfunction readSomeLines(file, numLines) {\n  var buf = common.buffer();\n  var bufLength = buf.length;\n  var bytesRead = bufLength;\n  var pos = 0;\n\n  var fdr = fs.openSync(file, 'r');\n  var numLinesRead = 0;\n  var ret = '';\n  while (bytesRead === bufLength && numLinesRead < numLines) {\n    bytesRead = fs.readSync(fdr, buf, 0, bufLength, pos);\n    var bufStr = buf.toString('utf8', 0, bytesRead);\n    numLinesRead += bufStr.split('\\n').length - 1;\n    ret += bufStr;\n    pos += bytesRead;\n  }\n\n  fs.closeSync(fdr);\n  return ret;\n}\n\n//@\n//@ ### head([{'-n': \\<num\\>},] file [, file ...])\n//@ ### head([{'-n': \\<num\\>},] file_array)\n//@\n//@ Available options:\n//@\n//@ + `-n <num>`: Show the first `<num>` lines of the files\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ var str = head({'-n': 1}, 'file*.txt');\n//@ var str = head('file1', 'file2');\n//@ var str = head(['file1', 'file2']); // same as above\n//@ ```\n//@\n//@ Read the start of a file.\nfunction _head(options, files) {\n  var head = [];\n  var pipe = common.readFromPipe();\n\n  if (!files && !pipe) common.error('no paths given');\n\n  var idx = 1;\n  if (options.numLines === true) {\n    idx = 2;\n    options.numLines = Number(arguments[1]);\n  } else if (options.numLines === false) {\n    options.numLines = 10;\n  }\n  files = [].slice.call(arguments, idx);\n\n  if (pipe) {\n    files.unshift('-');\n  }\n\n  var shouldAppendNewline = false;\n  files.forEach(function (file) {\n    if (file !== '-') {\n      if (!fs.existsSync(file)) {\n        common.error('no such file or directory: ' + file, { continue: true });\n        return;\n      } else if (common.statFollowLinks(file).isDirectory()) {\n        common.error(\"error reading '\" + file + \"': Is a directory\", {\n          continue: true,\n        });\n        return;\n      }\n    }\n\n    var contents;\n    if (file === '-') {\n      contents = pipe;\n    } else if (options.numLines < 0) {\n      contents = fs.readFileSync(file, 'utf8');\n    } else {\n      contents = readSomeLines(file, options.numLines);\n    }\n\n    var lines = contents.split('\\n');\n    var hasTrailingNewline = (lines[lines.length - 1] === '');\n    if (hasTrailingNewline) {\n      lines.pop();\n    }\n    shouldAppendNewline = (hasTrailingNewline || options.numLines < lines.length);\n\n    head = head.concat(lines.slice(0, options.numLines));\n  });\n\n  if (shouldAppendNewline) {\n    head.push(''); // to add a trailing newline once we join\n  }\n  return head.join('\\n');\n}\nmodule.exports = _head;\n","var fs = require('fs');\nvar path = require('path');\nvar common = require('./common');\n\ncommon.register('ln', _ln, {\n  cmdOptions: {\n    's': 'symlink',\n    'f': 'force',\n  },\n});\n\n//@\n//@ ### ln([options,] source, dest)\n//@\n//@ Available options:\n//@\n//@ + `-s`: symlink\n//@ + `-f`: force\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ ln('file', 'newlink');\n//@ ln('-sf', 'file', 'existing');\n//@ ```\n//@\n//@ Links `source` to `dest`. Use `-f` to force the link, should `dest` already exist.\nfunction _ln(options, source, dest) {\n  if (!source || !dest) {\n    common.error('Missing <source> and/or <dest>');\n  }\n\n  source = String(source);\n  var sourcePath = path.normalize(source).replace(RegExp(path.sep + '$'), '');\n  var isAbsolute = (path.resolve(source) === sourcePath);\n  dest = path.resolve(process.cwd(), String(dest));\n\n  if (fs.existsSync(dest)) {\n    if (!options.force) {\n      common.error('Destination file exists', { continue: true });\n    }\n\n    fs.unlinkSync(dest);\n  }\n\n  if (options.symlink) {\n    var isWindows = process.platform === 'win32';\n    var linkType = isWindows ? 'file' : null;\n    var resolvedSourcePath = isAbsolute ? sourcePath : path.resolve(process.cwd(), path.dirname(dest), source);\n    if (!fs.existsSync(resolvedSourcePath)) {\n      common.error('Source file does not exist', { continue: true });\n    } else if (isWindows && common.statFollowLinks(resolvedSourcePath).isDirectory()) {\n      linkType = 'junction';\n    }\n\n    try {\n      fs.symlinkSync(linkType === 'junction' ? resolvedSourcePath : source, dest, linkType);\n    } catch (err) {\n      common.error(err.message);\n    }\n  } else {\n    if (!fs.existsSync(source)) {\n      common.error('Source file does not exist', { continue: true });\n    }\n    try {\n      fs.linkSync(source, dest);\n    } catch (err) {\n      common.error(err.message);\n    }\n  }\n  return '';\n}\nmodule.exports = _ln;\n","var path = require('path');\nvar fs = require('fs');\nvar common = require('./common');\nvar glob = require('glob');\n\nvar globPatternRecursive = path.sep + '**';\n\ncommon.register('ls', _ls, {\n  cmdOptions: {\n    'R': 'recursive',\n    'A': 'all',\n    'L': 'link',\n    'a': 'all_deprecated',\n    'd': 'directory',\n    'l': 'long',\n  },\n});\n\n//@\n//@ ### ls([options,] [path, ...])\n//@ ### ls([options,] path_array)\n//@\n//@ Available options:\n//@\n//@ + `-R`: recursive\n//@ + `-A`: all files (include files beginning with `.`, except for `.` and `..`)\n//@ + `-L`: follow symlinks\n//@ + `-d`: list directories themselves, not their contents\n//@ + `-l`: list objects representing each file, each with fields containing `ls\n//@         -l` output fields. See\n//@         [`fs.Stats`](https://nodejs.org/api/fs.html#fs_class_fs_stats)\n//@         for more info\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ ls('projs/*.js');\n//@ ls('-R', '/users/me', '/tmp');\n//@ ls('-R', ['/users/me', '/tmp']); // same as above\n//@ ls('-l', 'file.txt'); // { name: 'file.txt', mode: 33188, nlink: 1, ...}\n//@ ```\n//@\n//@ Returns array of files in the given `path`, or files in\n//@ the current directory if no `path` is  provided.\nfunction _ls(options, paths) {\n  if (options.all_deprecated) {\n    // We won't support the -a option as it's hard to image why it's useful\n    // (it includes '.' and '..' in addition to '.*' files)\n    // For backwards compatibility we'll dump a deprecated message and proceed as before\n    common.log('ls: Option -a is deprecated. Use -A instead');\n    options.all = true;\n  }\n\n  if (!paths) {\n    paths = ['.'];\n  } else {\n    paths = [].slice.call(arguments, 1);\n  }\n\n  var list = [];\n\n  function pushFile(abs, relName, stat) {\n    if (process.platform === 'win32') {\n      relName = relName.replace(/\\\\/g, '/');\n    }\n    if (options.long) {\n      stat = stat || (options.link ? common.statFollowLinks(abs) : common.statNoFollowLinks(abs));\n      list.push(addLsAttributes(relName, stat));\n    } else {\n      // list.push(path.relative(rel || '.', file));\n      list.push(relName);\n    }\n  }\n\n  paths.forEach(function (p) {\n    var stat;\n\n    try {\n      stat = options.link ? common.statFollowLinks(p) : common.statNoFollowLinks(p);\n      // follow links to directories by default\n      if (stat.isSymbolicLink()) {\n        /* istanbul ignore next */\n        // workaround for https://github.com/shelljs/shelljs/issues/795\n        // codecov seems to have a bug that miscalculate this block as uncovered.\n        // but according to nyc report this block does get covered.\n        try {\n          var _stat = common.statFollowLinks(p);\n          if (_stat.isDirectory()) {\n            stat = _stat;\n          }\n        } catch (_) {} // bad symlink, treat it like a file\n      }\n    } catch (e) {\n      common.error('no such file or directory: ' + p, 2, { continue: true });\n      return;\n    }\n\n    // If the stat succeeded\n    if (stat.isDirectory() && !options.directory) {\n      if (options.recursive) {\n        // use glob, because it's simple\n        glob.sync(p + globPatternRecursive, { dot: options.all, follow: options.link })\n          .forEach(function (item) {\n            // Glob pattern returns the directory itself and needs to be filtered out.\n            if (path.relative(p, item)) {\n              pushFile(item, path.relative(p, item));\n            }\n          });\n      } else if (options.all) {\n        // use fs.readdirSync, because it's fast\n        fs.readdirSync(p).forEach(function (item) {\n          pushFile(path.join(p, item), item);\n        });\n      } else {\n        // use fs.readdirSync and then filter out secret files\n        fs.readdirSync(p).forEach(function (item) {\n          if (item[0] !== '.') {\n            pushFile(path.join(p, item), item);\n          }\n        });\n      }\n    } else {\n      pushFile(p, p, stat);\n    }\n  });\n\n  // Add methods, to make this more compatible with ShellStrings\n  return list;\n}\n\nfunction addLsAttributes(pathName, stats) {\n  // Note: this object will contain more information than .toString() returns\n  stats.name = pathName;\n  stats.toString = function () {\n    // Return a string resembling unix's `ls -l` format\n    return [this.mode, this.nlink, this.uid, this.gid, this.size, this.mtime, this.name].join(' ');\n  };\n  return stats;\n}\n\nmodule.exports = _ls;\n","var common = require('./common');\nvar fs = require('fs');\nvar path = require('path');\n\ncommon.register('mkdir', _mkdir, {\n  cmdOptions: {\n    'p': 'fullpath',\n  },\n});\n\n// Recursively creates `dir`\nfunction mkdirSyncRecursive(dir) {\n  var baseDir = path.dirname(dir);\n\n  // Prevents some potential problems arising from malformed UNCs or\n  // insufficient permissions.\n  /* istanbul ignore next */\n  if (baseDir === dir) {\n    common.error('dirname() failed: [' + dir + ']');\n  }\n\n  // Base dir exists, no recursion necessary\n  if (fs.existsSync(baseDir)) {\n    fs.mkdirSync(dir, parseInt('0777', 8));\n    return;\n  }\n\n  // Base dir does not exist, go recursive\n  mkdirSyncRecursive(baseDir);\n\n  // Base dir created, can create dir\n  fs.mkdirSync(dir, parseInt('0777', 8));\n}\n\n//@\n//@ ### mkdir([options,] dir [, dir ...])\n//@ ### mkdir([options,] dir_array)\n//@\n//@ Available options:\n//@\n//@ + `-p`: full path (and create intermediate directories, if necessary)\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ mkdir('-p', '/tmp/a/b/c/d', '/tmp/e/f/g');\n//@ mkdir('-p', ['/tmp/a/b/c/d', '/tmp/e/f/g']); // same as above\n//@ ```\n//@\n//@ Creates directories.\nfunction _mkdir(options, dirs) {\n  if (!dirs) common.error('no paths given');\n\n  if (typeof dirs === 'string') {\n    dirs = [].slice.call(arguments, 1);\n  }\n  // if it's array leave it as it is\n\n  dirs.forEach(function (dir) {\n    try {\n      var stat = common.statNoFollowLinks(dir);\n      if (!options.fullpath) {\n        common.error('path already exists: ' + dir, { continue: true });\n      } else if (stat.isFile()) {\n        common.error('cannot create directory ' + dir + ': File exists', { continue: true });\n      }\n      return; // skip dir\n    } catch (e) {\n      // do nothing\n    }\n\n    // Base dir does not exist, and no -p option given\n    var baseDir = path.dirname(dir);\n    if (!fs.existsSync(baseDir) && !options.fullpath) {\n      common.error('no such file or directory: ' + baseDir, { continue: true });\n      return; // skip dir\n    }\n\n    try {\n      if (options.fullpath) {\n        mkdirSyncRecursive(path.resolve(dir));\n      } else {\n        fs.mkdirSync(dir, parseInt('0777', 8));\n      }\n    } catch (e) {\n      var reason;\n      if (e.code === 'EACCES') {\n        reason = 'Permission denied';\n      } else if (e.code === 'ENOTDIR' || e.code === 'ENOENT') {\n        reason = 'Not a directory';\n      } else {\n        /* istanbul ignore next */\n        throw e;\n      }\n      common.error('cannot create directory ' + dir + ': ' + reason, { continue: true });\n    }\n  });\n  return '';\n} // mkdir\nmodule.exports = _mkdir;\n","var fs = require('fs');\nvar path = require('path');\nvar common = require('./common');\nvar cp = require('./cp');\nvar rm = require('./rm');\n\ncommon.register('mv', _mv, {\n  cmdOptions: {\n    'f': '!no_force',\n    'n': 'no_force',\n  },\n});\n\n// Checks if cureent file was created recently\nfunction checkRecentCreated(sources, index) {\n  var lookedSource = sources[index];\n  return sources.slice(0, index).some(function (src) {\n    return path.basename(src) === path.basename(lookedSource);\n  });\n}\n\n//@\n//@ ### mv([options ,] source [, source ...], dest')\n//@ ### mv([options ,] source_array, dest')\n//@\n//@ Available options:\n//@\n//@ + `-f`: force (default behavior)\n//@ + `-n`: no-clobber\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ mv('-n', 'file', 'dir/');\n//@ mv('file1', 'file2', 'dir/');\n//@ mv(['file1', 'file2'], 'dir/'); // same as above\n//@ ```\n//@\n//@ Moves `source` file(s) to `dest`.\nfunction _mv(options, sources, dest) {\n  // Get sources, dest\n  if (arguments.length < 3) {\n    common.error('missing <source> and/or <dest>');\n  } else if (arguments.length > 3) {\n    sources = [].slice.call(arguments, 1, arguments.length - 1);\n    dest = arguments[arguments.length - 1];\n  } else if (typeof sources === 'string') {\n    sources = [sources];\n  } else {\n    // TODO(nate): figure out if we actually need this line\n    common.error('invalid arguments');\n  }\n\n  var exists = fs.existsSync(dest);\n  var stats = exists && common.statFollowLinks(dest);\n\n  // Dest is not existing dir, but multiple sources given\n  if ((!exists || !stats.isDirectory()) && sources.length > 1) {\n    common.error('dest is not a directory (too many sources)');\n  }\n\n  // Dest is an existing file, but no -f given\n  if (exists && stats.isFile() && options.no_force) {\n    common.error('dest file already exists: ' + dest);\n  }\n\n  sources.forEach(function (src, srcIndex) {\n    if (!fs.existsSync(src)) {\n      common.error('no such file or directory: ' + src, { continue: true });\n      return; // skip file\n    }\n\n    // If here, src exists\n\n    // When copying to '/path/dir':\n    //    thisDest = '/path/dir/file1'\n    var thisDest = dest;\n    if (fs.existsSync(dest) && common.statFollowLinks(dest).isDirectory()) {\n      thisDest = path.normalize(dest + '/' + path.basename(src));\n    }\n\n    var thisDestExists = fs.existsSync(thisDest);\n\n    if (thisDestExists && checkRecentCreated(sources, srcIndex)) {\n      // cannot overwrite file created recently in current execution, but we want to continue copying other files\n      if (!options.no_force) {\n        common.error(\"will not overwrite just-created '\" + thisDest + \"' with '\" + src + \"'\", { continue: true });\n      }\n      return;\n    }\n\n    if (fs.existsSync(thisDest) && options.no_force) {\n      common.error('dest file already exists: ' + thisDest, { continue: true });\n      return; // skip file\n    }\n\n    if (path.resolve(src) === path.dirname(path.resolve(thisDest))) {\n      common.error('cannot move to self: ' + src, { continue: true });\n      return; // skip file\n    }\n\n    try {\n      fs.renameSync(src, thisDest);\n    } catch (e) {\n      /* istanbul ignore next */\n      if (e.code === 'EXDEV') {\n        // If we're trying to `mv` to an external partition, we'll actually need\n        // to perform a copy and then clean up the original file. If either the\n        // copy or the rm fails with an exception, we should allow this\n        // exception to pass up to the top level.\n        cp('-r', src, thisDest);\n        rm('-rf', src);\n      }\n    }\n  }); // forEach(src)\n  return '';\n} // mv\nmodule.exports = _mv;\n","// see dirs.js\n","// see dirs.js\n","var path = require('path');\nvar common = require('./common');\n\ncommon.register('pwd', _pwd, {\n  allowGlobbing: false,\n});\n\n//@\n//@ ### pwd()\n//@\n//@ Returns the current directory.\nfunction _pwd() {\n  var pwd = path.resolve(process.cwd());\n  return pwd;\n}\nmodule.exports = _pwd;\n","var common = require('./common');\nvar fs = require('fs');\n\ncommon.register('rm', _rm, {\n  cmdOptions: {\n    'f': 'force',\n    'r': 'recursive',\n    'R': 'recursive',\n  },\n});\n\n// Recursively removes 'dir'\n// Adapted from https://github.com/ryanmcgrath/wrench-js\n//\n// Copyright (c) 2010 Ryan McGrath\n// Copyright (c) 2012 Artur Adib\n//\n// Licensed under the MIT License\n// http://www.opensource.org/licenses/mit-license.php\nfunction rmdirSyncRecursive(dir, force, fromSymlink) {\n  var files;\n\n  files = fs.readdirSync(dir);\n\n  // Loop through and delete everything in the sub-tree after checking it\n  for (var i = 0; i < files.length; i++) {\n    var file = dir + '/' + files[i];\n    var currFile = common.statNoFollowLinks(file);\n\n    if (currFile.isDirectory()) { // Recursive function back to the beginning\n      rmdirSyncRecursive(file, force);\n    } else { // Assume it's a file - perhaps a try/catch belongs here?\n      if (force || isWriteable(file)) {\n        try {\n          common.unlinkSync(file);\n        } catch (e) {\n          /* istanbul ignore next */\n          common.error('could not remove file (code ' + e.code + '): ' + file, {\n            continue: true,\n          });\n        }\n      }\n    }\n  }\n\n  // if was directory was referenced through a symbolic link,\n  // the contents should be removed, but not the directory itself\n  if (fromSymlink) return;\n\n  // Now that we know everything in the sub-tree has been deleted, we can delete the main directory.\n  // Huzzah for the shopkeep.\n\n  var result;\n  try {\n    // Retry on windows, sometimes it takes a little time before all the files in the directory are gone\n    var start = Date.now();\n\n    // TODO: replace this with a finite loop\n    for (;;) {\n      try {\n        result = fs.rmdirSync(dir);\n        if (fs.existsSync(dir)) throw { code: 'EAGAIN' };\n        break;\n      } catch (er) {\n        /* istanbul ignore next */\n        // In addition to error codes, also check if the directory still exists and loop again if true\n        if (process.platform === 'win32' && (er.code === 'ENOTEMPTY' || er.code === 'EBUSY' || er.code === 'EPERM' || er.code === 'EAGAIN')) {\n          if (Date.now() - start > 1000) throw er;\n        } else if (er.code === 'ENOENT') {\n          // Directory did not exist, deletion was successful\n          break;\n        } else {\n          throw er;\n        }\n      }\n    }\n  } catch (e) {\n    common.error('could not remove directory (code ' + e.code + '): ' + dir, { continue: true });\n  }\n\n  return result;\n} // rmdirSyncRecursive\n\n// Hack to determine if file has write permissions for current user\n// Avoids having to check user, group, etc, but it's probably slow\nfunction isWriteable(file) {\n  var writePermission = true;\n  try {\n    var __fd = fs.openSync(file, 'a');\n    fs.closeSync(__fd);\n  } catch (e) {\n    writePermission = false;\n  }\n\n  return writePermission;\n}\n\nfunction handleFile(file, options) {\n  if (options.force || isWriteable(file)) {\n    // -f was passed, or file is writable, so it can be removed\n    common.unlinkSync(file);\n  } else {\n    common.error('permission denied: ' + file, { continue: true });\n  }\n}\n\nfunction handleDirectory(file, options) {\n  if (options.recursive) {\n    // -r was passed, so directory can be removed\n    rmdirSyncRecursive(file, options.force);\n  } else {\n    common.error('path is a directory', { continue: true });\n  }\n}\n\nfunction handleSymbolicLink(file, options) {\n  var stats;\n  try {\n    stats = common.statFollowLinks(file);\n  } catch (e) {\n    // symlink is broken, so remove the symlink itself\n    common.unlinkSync(file);\n    return;\n  }\n\n  if (stats.isFile()) {\n    common.unlinkSync(file);\n  } else if (stats.isDirectory()) {\n    if (file[file.length - 1] === '/') {\n      // trailing separator, so remove the contents, not the link\n      if (options.recursive) {\n        // -r was passed, so directory can be removed\n        var fromSymlink = true;\n        rmdirSyncRecursive(file, options.force, fromSymlink);\n      } else {\n        common.error('path is a directory', { continue: true });\n      }\n    } else {\n      // no trailing separator, so remove the link\n      common.unlinkSync(file);\n    }\n  }\n}\n\nfunction handleFIFO(file) {\n  common.unlinkSync(file);\n}\n\n//@\n//@ ### rm([options,] file [, file ...])\n//@ ### rm([options,] file_array)\n//@\n//@ Available options:\n//@\n//@ + `-f`: force\n//@ + `-r, -R`: recursive\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ rm('-rf', '/tmp/*');\n//@ rm('some_file.txt', 'another_file.txt');\n//@ rm(['some_file.txt', 'another_file.txt']); // same as above\n//@ ```\n//@\n//@ Removes files.\nfunction _rm(options, files) {\n  if (!files) common.error('no paths given');\n\n  // Convert to array\n  files = [].slice.call(arguments, 1);\n\n  files.forEach(function (file) {\n    var lstats;\n    try {\n      var filepath = (file[file.length - 1] === '/')\n        ? file.slice(0, -1) // remove the '/' so lstatSync can detect symlinks\n        : file;\n      lstats = common.statNoFollowLinks(filepath); // test for existence\n    } catch (e) {\n      // Path does not exist, no force flag given\n      if (!options.force) {\n        common.error('no such file or directory: ' + file, { continue: true });\n      }\n      return; // skip file\n    }\n\n    // If here, path exists\n    if (lstats.isFile()) {\n      handleFile(file, options);\n    } else if (lstats.isDirectory()) {\n      handleDirectory(file, options);\n    } else if (lstats.isSymbolicLink()) {\n      handleSymbolicLink(file, options);\n    } else if (lstats.isFIFO()) {\n      handleFIFO(file);\n    }\n  }); // forEach(file)\n  return '';\n} // rm\nmodule.exports = _rm;\n","var common = require('./common');\nvar fs = require('fs');\n\ncommon.register('sed', _sed, {\n  globStart: 3, // don't glob-expand regexes\n  canReceivePipe: true,\n  cmdOptions: {\n    'i': 'inplace',\n  },\n});\n\n//@\n//@ ### sed([options,] search_regex, replacement, file [, file ...])\n//@ ### sed([options,] search_regex, replacement, file_array)\n//@\n//@ Available options:\n//@\n//@ + `-i`: Replace contents of `file` in-place. _Note that no backups will be created!_\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ sed('-i', 'PROGRAM_VERSION', 'v0.1.3', 'source.js');\n//@ sed(/.*DELETE_THIS_LINE.*\\n/, '', 'source.js');\n//@ ```\n//@\n//@ Reads an input string from `file`s, and performs a JavaScript `replace()` on the input\n//@ using the given `search_regex` and `replacement` string or function. Returns the new string after replacement.\n//@\n//@ Note:\n//@\n//@ Like unix `sed`, ShellJS `sed` supports capture groups. Capture groups are specified\n//@ using the `$n` syntax:\n//@\n//@ ```javascript\n//@ sed(/(\\w+)\\s(\\w+)/, '$2, $1', 'file.txt');\n//@ ```\nfunction _sed(options, regex, replacement, files) {\n  // Check if this is coming from a pipe\n  var pipe = common.readFromPipe();\n\n  if (typeof replacement !== 'string' && typeof replacement !== 'function') {\n    if (typeof replacement === 'number') {\n      replacement = replacement.toString(); // fallback\n    } else {\n      common.error('invalid replacement string');\n    }\n  }\n\n  // Convert all search strings to RegExp\n  if (typeof regex === 'string') {\n    regex = RegExp(regex);\n  }\n\n  if (!files && !pipe) {\n    common.error('no files given');\n  }\n\n  files = [].slice.call(arguments, 3);\n\n  if (pipe) {\n    files.unshift('-');\n  }\n\n  var sed = [];\n  files.forEach(function (file) {\n    if (!fs.existsSync(file) && file !== '-') {\n      common.error('no such file or directory: ' + file, 2, { continue: true });\n      return;\n    }\n\n    var contents = file === '-' ? pipe : fs.readFileSync(file, 'utf8');\n    var lines = contents.split('\\n');\n    var result = lines.map(function (line) {\n      return line.replace(regex, replacement);\n    }).join('\\n');\n\n    sed.push(result);\n\n    if (options.inplace) {\n      fs.writeFileSync(file, result, 'utf8');\n    }\n  });\n\n  return sed.join('\\n');\n}\nmodule.exports = _sed;\n","var common = require('./common');\n\ncommon.register('set', _set, {\n  allowGlobbing: false,\n  wrapOutput: false,\n});\n\n//@\n//@ ### set(options)\n//@\n//@ Available options:\n//@\n//@ + `+/-e`: exit upon error (`config.fatal`)\n//@ + `+/-v`: verbose: show all commands (`config.verbose`)\n//@ + `+/-f`: disable filename expansion (globbing)\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ set('-e'); // exit upon first error\n//@ set('+e'); // this undoes a \"set('-e')\"\n//@ ```\n//@\n//@ Sets global configuration variables.\nfunction _set(options) {\n  if (!options) {\n    var args = [].slice.call(arguments, 0);\n    if (args.length < 2) common.error('must provide an argument');\n    options = args[1];\n  }\n  var negate = (options[0] === '+');\n  if (negate) {\n    options = '-' + options.slice(1); // parseOptions needs a '-' prefix\n  }\n  options = common.parseOptions(options, {\n    'e': 'fatal',\n    'v': 'verbose',\n    'f': 'noglob',\n  });\n\n  if (negate) {\n    Object.keys(options).forEach(function (key) {\n      options[key] = !options[key];\n    });\n  }\n\n  Object.keys(options).forEach(function (key) {\n    // Only change the global config if `negate` is false and the option is true\n    // or if `negate` is true and the option is false (aka negate !== option)\n    if (negate !== options[key]) {\n      common.config[key] = options[key];\n    }\n  });\n  return;\n}\nmodule.exports = _set;\n","var common = require('./common');\nvar fs = require('fs');\n\ncommon.register('sort', _sort, {\n  canReceivePipe: true,\n  cmdOptions: {\n    'r': 'reverse',\n    'n': 'numerical',\n  },\n});\n\n// parse out the number prefix of a line\nfunction parseNumber(str) {\n  var match = str.match(/^\\s*(\\d*)\\s*(.*)$/);\n  return { num: Number(match[1]), value: match[2] };\n}\n\n// compare two strings case-insensitively, but examine case for strings that are\n// case-insensitive equivalent\nfunction unixCmp(a, b) {\n  var aLower = a.toLowerCase();\n  var bLower = b.toLowerCase();\n  return (aLower === bLower ?\n      -1 * a.localeCompare(b) : // unix sort treats case opposite how javascript does\n      aLower.localeCompare(bLower));\n}\n\n// compare two strings in the fashion that unix sort's -n option works\nfunction numericalCmp(a, b) {\n  var objA = parseNumber(a);\n  var objB = parseNumber(b);\n  if (objA.hasOwnProperty('num') && objB.hasOwnProperty('num')) {\n    return ((objA.num !== objB.num) ?\n        (objA.num - objB.num) :\n        unixCmp(objA.value, objB.value));\n  } else {\n    return unixCmp(objA.value, objB.value);\n  }\n}\n\n//@\n//@ ### sort([options,] file [, file ...])\n//@ ### sort([options,] file_array)\n//@\n//@ Available options:\n//@\n//@ + `-r`: Reverse the results\n//@ + `-n`: Compare according to numerical value\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ sort('foo.txt', 'bar.txt');\n//@ sort('-r', 'foo.txt');\n//@ ```\n//@\n//@ Return the contents of the `file`s, sorted line-by-line. Sorting multiple\n//@ files mixes their content (just as unix `sort` does).\nfunction _sort(options, files) {\n  // Check if this is coming from a pipe\n  var pipe = common.readFromPipe();\n\n  if (!files && !pipe) common.error('no files given');\n\n  files = [].slice.call(arguments, 1);\n\n  if (pipe) {\n    files.unshift('-');\n  }\n\n  var lines = files.reduce(function (accum, file) {\n    if (file !== '-') {\n      if (!fs.existsSync(file)) {\n        common.error('no such file or directory: ' + file, { continue: true });\n        return accum;\n      } else if (common.statFollowLinks(file).isDirectory()) {\n        common.error('read failed: ' + file + ': Is a directory', {\n          continue: true,\n        });\n        return accum;\n      }\n    }\n\n    var contents = file === '-' ? pipe : fs.readFileSync(file, 'utf8');\n    return accum.concat(contents.trimRight().split('\\n'));\n  }, []);\n\n  var sorted = lines.sort(options.numerical ? numericalCmp : unixCmp);\n\n  if (options.reverse) {\n    sorted = sorted.reverse();\n  }\n\n  return sorted.join('\\n') + '\\n';\n}\n\nmodule.exports = _sort;\n","var common = require('./common');\nvar fs = require('fs');\n\ncommon.register('tail', _tail, {\n  canReceivePipe: true,\n  cmdOptions: {\n    'n': 'numLines',\n  },\n});\n\n//@\n//@ ### tail([{'-n': \\<num\\>},] file [, file ...])\n//@ ### tail([{'-n': \\<num\\>},] file_array)\n//@\n//@ Available options:\n//@\n//@ + `-n <num>`: Show the last `<num>` lines of `file`s\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ var str = tail({'-n': 1}, 'file*.txt');\n//@ var str = tail('file1', 'file2');\n//@ var str = tail(['file1', 'file2']); // same as above\n//@ ```\n//@\n//@ Read the end of a `file`.\nfunction _tail(options, files) {\n  var tail = [];\n  var pipe = common.readFromPipe();\n\n  if (!files && !pipe) common.error('no paths given');\n\n  var idx = 1;\n  if (options.numLines === true) {\n    idx = 2;\n    options.numLines = Number(arguments[1]);\n  } else if (options.numLines === false) {\n    options.numLines = 10;\n  }\n  options.numLines = -1 * Math.abs(options.numLines);\n  files = [].slice.call(arguments, idx);\n\n  if (pipe) {\n    files.unshift('-');\n  }\n\n  var shouldAppendNewline = false;\n  files.forEach(function (file) {\n    if (file !== '-') {\n      if (!fs.existsSync(file)) {\n        common.error('no such file or directory: ' + file, { continue: true });\n        return;\n      } else if (common.statFollowLinks(file).isDirectory()) {\n        common.error(\"error reading '\" + file + \"': Is a directory\", {\n          continue: true,\n        });\n        return;\n      }\n    }\n\n    var contents = file === '-' ? pipe : fs.readFileSync(file, 'utf8');\n\n    var lines = contents.split('\\n');\n    if (lines[lines.length - 1] === '') {\n      lines.pop();\n      shouldAppendNewline = true;\n    } else {\n      shouldAppendNewline = false;\n    }\n\n    tail = tail.concat(lines.slice(options.numLines));\n  });\n\n  if (shouldAppendNewline) {\n    tail.push(''); // to add a trailing newline once we join\n  }\n  return tail.join('\\n');\n}\nmodule.exports = _tail;\n","var common = require('./common');\nvar os = require('os');\nvar fs = require('fs');\n\ncommon.register('tempdir', _tempDir, {\n  allowGlobbing: false,\n  wrapOutput: false,\n});\n\n// Returns false if 'dir' is not a writeable directory, 'dir' otherwise\nfunction writeableDir(dir) {\n  if (!dir || !fs.existsSync(dir)) return false;\n\n  if (!common.statFollowLinks(dir).isDirectory()) return false;\n\n  var testFile = dir + '/' + common.randomFileName();\n  try {\n    fs.writeFileSync(testFile, ' ');\n    common.unlinkSync(testFile);\n    return dir;\n  } catch (e) {\n    /* istanbul ignore next */\n    return false;\n  }\n}\n\n// Variable to cache the tempdir value for successive lookups.\nvar cachedTempDir;\n\n//@\n//@ ### tempdir()\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ var tmp = tempdir(); // \"/tmp\" for most *nix platforms\n//@ ```\n//@\n//@ Searches and returns string containing a writeable, platform-dependent temporary directory.\n//@ Follows Python's [tempfile algorithm](http://docs.python.org/library/tempfile.html#tempfile.tempdir).\nfunction _tempDir() {\n  if (cachedTempDir) return cachedTempDir;\n\n  cachedTempDir = writeableDir(os.tmpdir()) ||\n                  writeableDir(process.env.TMPDIR) ||\n                  writeableDir(process.env.TEMP) ||\n                  writeableDir(process.env.TMP) ||\n                  writeableDir(process.env.Wimp$ScrapDir) || // RiscOS\n                  writeableDir('C:\\\\TEMP') || // Windows\n                  writeableDir('C:\\\\TMP') || // Windows\n                  writeableDir('\\\\TEMP') || // Windows\n                  writeableDir('\\\\TMP') || // Windows\n                  writeableDir('/tmp') ||\n                  writeableDir('/var/tmp') ||\n                  writeableDir('/usr/tmp') ||\n                  writeableDir('.'); // last resort\n\n  return cachedTempDir;\n}\n\n// Indicates if the tempdir value is currently cached. This is exposed for tests\n// only. The return value should only be tested for truthiness.\nfunction isCached() {\n  return cachedTempDir;\n}\n\n// Clears the cached tempDir value, if one is cached. This is exposed for tests\n// only.\nfunction clearCache() {\n  cachedTempDir = undefined;\n}\n\nmodule.exports.tempDir = _tempDir;\nmodule.exports.isCached = isCached;\nmodule.exports.clearCache = clearCache;\n","var common = require('./common');\nvar fs = require('fs');\n\ncommon.register('test', _test, {\n  cmdOptions: {\n    'b': 'block',\n    'c': 'character',\n    'd': 'directory',\n    'e': 'exists',\n    'f': 'file',\n    'L': 'link',\n    'p': 'pipe',\n    'S': 'socket',\n  },\n  wrapOutput: false,\n  allowGlobbing: false,\n});\n\n\n//@\n//@ ### test(expression)\n//@\n//@ Available expression primaries:\n//@\n//@ + `'-b', 'path'`: true if path is a block device\n//@ + `'-c', 'path'`: true if path is a character device\n//@ + `'-d', 'path'`: true if path is a directory\n//@ + `'-e', 'path'`: true if path exists\n//@ + `'-f', 'path'`: true if path is a regular file\n//@ + `'-L', 'path'`: true if path is a symbolic link\n//@ + `'-p', 'path'`: true if path is a pipe (FIFO)\n//@ + `'-S', 'path'`: true if path is a socket\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ if (test('-d', path)) { /* do something with dir */ };\n//@ if (!test('-f', path)) continue; // skip if it's a regular file\n//@ ```\n//@\n//@ Evaluates `expression` using the available primaries and returns corresponding value.\nfunction _test(options, path) {\n  if (!path) common.error('no path given');\n\n  var canInterpret = false;\n  Object.keys(options).forEach(function (key) {\n    if (options[key] === true) {\n      canInterpret = true;\n    }\n  });\n\n  if (!canInterpret) common.error('could not interpret expression');\n\n  if (options.link) {\n    try {\n      return common.statNoFollowLinks(path).isSymbolicLink();\n    } catch (e) {\n      return false;\n    }\n  }\n\n  if (!fs.existsSync(path)) return false;\n\n  if (options.exists) return true;\n\n  var stats = common.statFollowLinks(path);\n\n  if (options.block) return stats.isBlockDevice();\n\n  if (options.character) return stats.isCharacterDevice();\n\n  if (options.directory) return stats.isDirectory();\n\n  if (options.file) return stats.isFile();\n\n  /* istanbul ignore next */\n  if (options.pipe) return stats.isFIFO();\n\n  /* istanbul ignore next */\n  if (options.socket) return stats.isSocket();\n\n  /* istanbul ignore next */\n  return false; // fallback\n} // test\nmodule.exports = _test;\n","var common = require('./common');\nvar fs = require('fs');\nvar path = require('path');\n\ncommon.register('to', _to, {\n  pipeOnly: true,\n  wrapOutput: false,\n});\n\n//@\n//@ ### ShellString.prototype.to(file)\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ cat('input.txt').to('output.txt');\n//@ ```\n//@\n//@ Analogous to the redirection operator `>` in Unix, but works with\n//@ `ShellStrings` (such as those returned by `cat`, `grep`, etc.). _Like Unix\n//@ redirections, `to()` will overwrite any existing file!_\nfunction _to(options, file) {\n  if (!file) common.error('wrong arguments');\n\n  if (!fs.existsSync(path.dirname(file))) {\n    common.error('no such file or directory: ' + path.dirname(file));\n  }\n\n  try {\n    fs.writeFileSync(file, this.stdout || this.toString(), 'utf8');\n    return this;\n  } catch (e) {\n    /* istanbul ignore next */\n    common.error('could not write to file (code ' + e.code + '): ' + file, { continue: true });\n  }\n}\nmodule.exports = _to;\n","var common = require('./common');\nvar fs = require('fs');\nvar path = require('path');\n\ncommon.register('toEnd', _toEnd, {\n  pipeOnly: true,\n  wrapOutput: false,\n});\n\n//@\n//@ ### ShellString.prototype.toEnd(file)\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ cat('input.txt').toEnd('output.txt');\n//@ ```\n//@\n//@ Analogous to the redirect-and-append operator `>>` in Unix, but works with\n//@ `ShellStrings` (such as those returned by `cat`, `grep`, etc.).\nfunction _toEnd(options, file) {\n  if (!file) common.error('wrong arguments');\n\n  if (!fs.existsSync(path.dirname(file))) {\n    common.error('no such file or directory: ' + path.dirname(file));\n  }\n\n  try {\n    fs.appendFileSync(file, this.stdout || this.toString(), 'utf8');\n    return this;\n  } catch (e) {\n    /* istanbul ignore next */\n    common.error('could not append to file (code ' + e.code + '): ' + file, { continue: true });\n  }\n}\nmodule.exports = _toEnd;\n","var common = require('./common');\nvar fs = require('fs');\n\ncommon.register('touch', _touch, {\n  cmdOptions: {\n    'a': 'atime_only',\n    'c': 'no_create',\n    'd': 'date',\n    'm': 'mtime_only',\n    'r': 'reference',\n  },\n});\n\n//@\n//@ ### touch([options,] file [, file ...])\n//@ ### touch([options,] file_array)\n//@\n//@ Available options:\n//@\n//@ + `-a`: Change only the access time\n//@ + `-c`: Do not create any files\n//@ + `-m`: Change only the modification time\n//@ + `-d DATE`: Parse `DATE` and use it instead of current time\n//@ + `-r FILE`: Use `FILE`'s times instead of current time\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ touch('source.js');\n//@ touch('-c', '/path/to/some/dir/source.js');\n//@ touch({ '-r': FILE }, '/path/to/some/dir/source.js');\n//@ ```\n//@\n//@ Update the access and modification times of each `FILE` to the current time.\n//@ A `FILE` argument that does not exist is created empty, unless `-c` is supplied.\n//@ This is a partial implementation of [`touch(1)`](http://linux.die.net/man/1/touch).\nfunction _touch(opts, files) {\n  if (!files) {\n    common.error('no files given');\n  } else if (typeof files === 'string') {\n    files = [].slice.call(arguments, 1);\n  } else {\n    common.error('file arg should be a string file path or an Array of string file paths');\n  }\n\n  files.forEach(function (f) {\n    touchFile(opts, f);\n  });\n  return '';\n}\n\nfunction touchFile(opts, file) {\n  var stat = tryStatFile(file);\n\n  if (stat && stat.isDirectory()) {\n    // don't error just exit\n    return;\n  }\n\n  // if the file doesn't already exist and the user has specified --no-create then\n  // this script is finished\n  if (!stat && opts.no_create) {\n    return;\n  }\n\n  // open the file and then close it. this will create it if it doesn't exist but will\n  // not truncate the file\n  fs.closeSync(fs.openSync(file, 'a'));\n\n  //\n  // Set timestamps\n  //\n\n  // setup some defaults\n  var now = new Date();\n  var mtime = opts.date || now;\n  var atime = opts.date || now;\n\n  // use reference file\n  if (opts.reference) {\n    var refStat = tryStatFile(opts.reference);\n    if (!refStat) {\n      common.error('failed to get attributess of ' + opts.reference);\n    }\n    mtime = refStat.mtime;\n    atime = refStat.atime;\n  } else if (opts.date) {\n    mtime = opts.date;\n    atime = opts.date;\n  }\n\n  if (opts.atime_only && opts.mtime_only) {\n    // keep the new values of mtime and atime like GNU\n  } else if (opts.atime_only) {\n    mtime = stat.mtime;\n  } else if (opts.mtime_only) {\n    atime = stat.atime;\n  }\n\n  fs.utimesSync(file, atime, mtime);\n}\n\nmodule.exports = _touch;\n\nfunction tryStatFile(filePath) {\n  try {\n    return common.statFollowLinks(filePath);\n  } catch (e) {\n    return null;\n  }\n}\n","var common = require('./common');\nvar fs = require('fs');\n\n// add c spaces to the left of str\nfunction lpad(c, str) {\n  var res = '' + str;\n  if (res.length < c) {\n    res = Array((c - res.length) + 1).join(' ') + res;\n  }\n  return res;\n}\n\ncommon.register('uniq', _uniq, {\n  canReceivePipe: true,\n  cmdOptions: {\n    'i': 'ignoreCase',\n    'c': 'count',\n    'd': 'duplicates',\n  },\n});\n\n//@\n//@ ### uniq([options,] [input, [output]])\n//@\n//@ Available options:\n//@\n//@ + `-i`: Ignore case while comparing\n//@ + `-c`: Prefix lines by the number of occurrences\n//@ + `-d`: Only print duplicate lines, one for each group of identical lines\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ uniq('foo.txt');\n//@ uniq('-i', 'foo.txt');\n//@ uniq('-cd', 'foo.txt', 'bar.txt');\n//@ ```\n//@\n//@ Filter adjacent matching lines from `input`.\nfunction _uniq(options, input, output) {\n  // Check if this is coming from a pipe\n  var pipe = common.readFromPipe();\n\n  if (!pipe) {\n    if (!input) common.error('no input given');\n\n    if (!fs.existsSync(input)) {\n      common.error(input + ': No such file or directory');\n    } else if (common.statFollowLinks(input).isDirectory()) {\n      common.error(\"error reading '\" + input + \"'\");\n    }\n  }\n  if (output && fs.existsSync(output) && common.statFollowLinks(output).isDirectory()) {\n    common.error(output + ': Is a directory');\n  }\n\n  var lines = (input ? fs.readFileSync(input, 'utf8') : pipe).\n              trimRight().\n              split('\\n');\n\n  var compare = function (a, b) {\n    return options.ignoreCase ?\n           a.toLocaleLowerCase().localeCompare(b.toLocaleLowerCase()) :\n           a.localeCompare(b);\n  };\n  var uniqed = lines.reduceRight(function (res, e) {\n    // Perform uniq -c on the input\n    if (res.length === 0) {\n      return [{ count: 1, ln: e }];\n    } else if (compare(res[0].ln, e) === 0) {\n      return [{ count: res[0].count + 1, ln: e }].concat(res.slice(1));\n    } else {\n      return [{ count: 1, ln: e }].concat(res);\n    }\n  }, []).filter(function (obj) {\n                 // Do we want only duplicated objects?\n    return options.duplicates ? obj.count > 1 : true;\n  }).map(function (obj) {\n                 // Are we tracking the counts of each line?\n    return (options.count ? (lpad(7, obj.count) + ' ') : '') + obj.ln;\n  }).join('\\n') + '\\n';\n\n  if (output) {\n    (new common.ShellString(uniqed)).to(output);\n    // if uniq writes to output, nothing is passed to the next command in the pipeline (if any)\n    return '';\n  } else {\n    return uniqed;\n  }\n}\n\nmodule.exports = _uniq;\n","var common = require('./common');\nvar fs = require('fs');\nvar path = require('path');\n\ncommon.register('which', _which, {\n  allowGlobbing: false,\n  cmdOptions: {\n    'a': 'all',\n  },\n});\n\n// XP's system default value for `PATHEXT` system variable, just in case it's not\n// set on Windows.\nvar XP_DEFAULT_PATHEXT = '.com;.exe;.bat;.cmd;.vbs;.vbe;.js;.jse;.wsf;.wsh';\n\n// For earlier versions of NodeJS that doesn't have a list of constants (< v6)\nvar FILE_EXECUTABLE_MODE = 1;\n\nfunction isWindowsPlatform() {\n  return process.platform === 'win32';\n}\n\n// Cross-platform method for splitting environment `PATH` variables\nfunction splitPath(p) {\n  return p ? p.split(path.delimiter) : [];\n}\n\n// Tests are running all cases for this func but it stays uncovered by codecov due to unknown reason\n/* istanbul ignore next */\nfunction isExecutable(pathName) {\n  try {\n    // TODO(node-support): replace with fs.constants.X_OK once remove support for node < v6\n    fs.accessSync(pathName, FILE_EXECUTABLE_MODE);\n  } catch (err) {\n    return false;\n  }\n  return true;\n}\n\nfunction checkPath(pathName) {\n  return fs.existsSync(pathName) && !common.statFollowLinks(pathName).isDirectory()\n    && (isWindowsPlatform() || isExecutable(pathName));\n}\n\n//@\n//@ ### which(command)\n//@\n//@ Examples:\n//@\n//@ ```javascript\n//@ var nodeExec = which('node');\n//@ ```\n//@\n//@ Searches for `command` in the system's `PATH`. On Windows, this uses the\n//@ `PATHEXT` variable to append the extension if it's not already executable.\n//@ Returns string containing the absolute path to `command`.\nfunction _which(options, cmd) {\n  if (!cmd) common.error('must specify command');\n\n  var isWindows = isWindowsPlatform();\n  var pathArray = splitPath(process.env.PATH);\n\n  var queryMatches = [];\n\n  // No relative/absolute paths provided?\n  if (cmd.indexOf('/') === -1) {\n    // Assume that there are no extensions to append to queries (this is the\n    // case for unix)\n    var pathExtArray = [''];\n    if (isWindows) {\n      // In case the PATHEXT variable is somehow not set (e.g.\n      // child_process.spawn with an empty environment), use the XP default.\n      var pathExtEnv = process.env.PATHEXT || XP_DEFAULT_PATHEXT;\n      pathExtArray = splitPath(pathExtEnv.toUpperCase());\n    }\n\n    // Search for command in PATH\n    for (var k = 0; k < pathArray.length; k++) {\n      // already found it\n      if (queryMatches.length > 0 && !options.all) break;\n\n      var attempt = path.resolve(pathArray[k], cmd);\n\n      if (isWindows) {\n        attempt = attempt.toUpperCase();\n      }\n\n      var match = attempt.match(/\\.[^<>:\"/\\|?*.]+$/);\n      if (match && pathExtArray.indexOf(match[0]) >= 0) { // this is Windows-only\n        // The user typed a query with the file extension, like\n        // `which('node.exe')`\n        if (checkPath(attempt)) {\n          queryMatches.push(attempt);\n          break;\n        }\n      } else { // All-platforms\n        // Cycle through the PATHEXT array, and check each extension\n        // Note: the array is always [''] on Unix\n        for (var i = 0; i < pathExtArray.length; i++) {\n          var ext = pathExtArray[i];\n          var newAttempt = attempt + ext;\n          if (checkPath(newAttempt)) {\n            queryMatches.push(newAttempt);\n            break;\n          }\n        }\n      }\n    }\n  } else if (checkPath(cmd)) { // a valid absolute or relative path\n    queryMatches.push(path.resolve(cmd));\n  }\n\n  if (queryMatches.length > 0) {\n    return options.all ? queryMatches : queryMatches[0];\n  }\n  return options.all ? [] : null;\n}\nmodule.exports = _which;\n","'use strict';\nconst os = require('os');\nconst hasFlag = require('has-flag');\n\nconst env = process.env;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false')) {\n\tforceColor = false;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = true;\n}\nif ('FORCE_COLOR' in env) {\n\tforceColor = env.FORCE_COLOR.length === 0 || parseInt(env.FORCE_COLOR, 10) !== 0;\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(stream) {\n\tif (forceColor === false) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (stream && !stream.isTTY && forceColor !== true) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor ? 1 : 0;\n\n\tif (process.platform === 'win32') {\n\t\t// Node.js 7.5.0 is the first version of Node.js to include a patch to\n\t\t// libuv that enables 256 color output on Windows. Anything earlier and it\n\t\t// won't work. However, here we target Node.js 8 at minimum as it is an LTS\n\t\t// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows\n\t\t// release that supports 256 colors. Windows 10 build 14931 is the first release\n\t\t// that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(process.versions.node.split('.')[0]) >= 8 &&\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: getSupportLevel(process.stdout),\n\tstderr: getSupportLevel(process.stderr)\n};\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n","// Generated by CoffeeScript 1.12.4\nvar Dumper, Inline, Utils;\n\nUtils = require('./Utils');\n\nInline = require('./Inline');\n\nDumper = (function() {\n  function Dumper() {}\n\n  Dumper.indentation = 4;\n\n  Dumper.prototype.dump = function(input, inline, indent, exceptionOnInvalidType, objectEncoder) {\n    var i, key, len, output, prefix, value, willBeInlined;\n    if (inline == null) {\n      inline = 0;\n    }\n    if (indent == null) {\n      indent = 0;\n    }\n    if (exceptionOnInvalidType == null) {\n      exceptionOnInvalidType = false;\n    }\n    if (objectEncoder == null) {\n      objectEncoder = null;\n    }\n    output = '';\n    prefix = (indent ? Utils.strRepeat(' ', indent) : '');\n    if (inline <= 0 || typeof input !== 'object' || input instanceof Date || Utils.isEmpty(input)) {\n      output += prefix + Inline.dump(input, exceptionOnInvalidType, objectEncoder);\n    } else {\n      if (input instanceof Array) {\n        for (i = 0, len = input.length; i < len; i++) {\n          value = input[i];\n          willBeInlined = inline - 1 <= 0 || typeof value !== 'object' || Utils.isEmpty(value);\n          output += prefix + '-' + (willBeInlined ? ' ' : \"\\n\") + this.dump(value, inline - 1, (willBeInlined ? 0 : indent + this.indentation), exceptionOnInvalidType, objectEncoder) + (willBeInlined ? \"\\n\" : '');\n        }\n      } else {\n        for (key in input) {\n          value = input[key];\n          willBeInlined = inline - 1 <= 0 || typeof value !== 'object' || Utils.isEmpty(value);\n          output += prefix + Inline.dump(key, exceptionOnInvalidType, objectEncoder) + ':' + (willBeInlined ? ' ' : \"\\n\") + this.dump(value, inline - 1, (willBeInlined ? 0 : indent + this.indentation), exceptionOnInvalidType, objectEncoder) + (willBeInlined ? \"\\n\" : '');\n        }\n      }\n    }\n    return output;\n  };\n\n  return Dumper;\n\n})();\n\nmodule.exports = Dumper;\n","// Generated by CoffeeScript 1.12.4\nvar Escaper, Pattern;\n\nPattern = require('./Pattern');\n\nEscaper = (function() {\n  var ch;\n\n  function Escaper() {}\n\n  Escaper.LIST_ESCAPEES = ['\\\\', '\\\\\\\\', '\\\\\"', '\"', \"\\x00\", \"\\x01\", \"\\x02\", \"\\x03\", \"\\x04\", \"\\x05\", \"\\x06\", \"\\x07\", \"\\x08\", \"\\x09\", \"\\x0a\", \"\\x0b\", \"\\x0c\", \"\\x0d\", \"\\x0e\", \"\\x0f\", \"\\x10\", \"\\x11\", \"\\x12\", \"\\x13\", \"\\x14\", \"\\x15\", \"\\x16\", \"\\x17\", \"\\x18\", \"\\x19\", \"\\x1a\", \"\\x1b\", \"\\x1c\", \"\\x1d\", \"\\x1e\", \"\\x1f\", (ch = String.fromCharCode)(0x0085), ch(0x00A0), ch(0x2028), ch(0x2029)];\n\n  Escaper.LIST_ESCAPED = ['\\\\\\\\', '\\\\\"', '\\\\\"', '\\\\\"', \"\\\\0\", \"\\\\x01\", \"\\\\x02\", \"\\\\x03\", \"\\\\x04\", \"\\\\x05\", \"\\\\x06\", \"\\\\a\", \"\\\\b\", \"\\\\t\", \"\\\\n\", \"\\\\v\", \"\\\\f\", \"\\\\r\", \"\\\\x0e\", \"\\\\x0f\", \"\\\\x10\", \"\\\\x11\", \"\\\\x12\", \"\\\\x13\", \"\\\\x14\", \"\\\\x15\", \"\\\\x16\", \"\\\\x17\", \"\\\\x18\", \"\\\\x19\", \"\\\\x1a\", \"\\\\e\", \"\\\\x1c\", \"\\\\x1d\", \"\\\\x1e\", \"\\\\x1f\", \"\\\\N\", \"\\\\_\", \"\\\\L\", \"\\\\P\"];\n\n  Escaper.MAPPING_ESCAPEES_TO_ESCAPED = (function() {\n    var i, j, mapping, ref;\n    mapping = {};\n    for (i = j = 0, ref = Escaper.LIST_ESCAPEES.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n      mapping[Escaper.LIST_ESCAPEES[i]] = Escaper.LIST_ESCAPED[i];\n    }\n    return mapping;\n  })();\n\n  Escaper.PATTERN_CHARACTERS_TO_ESCAPE = new Pattern('[\\\\x00-\\\\x1f]|\\xc2\\x85|\\xc2\\xa0|\\xe2\\x80\\xa8|\\xe2\\x80\\xa9');\n\n  Escaper.PATTERN_MAPPING_ESCAPEES = new Pattern(Escaper.LIST_ESCAPEES.join('|').split('\\\\').join('\\\\\\\\'));\n\n  Escaper.PATTERN_SINGLE_QUOTING = new Pattern('[\\\\s\\'\":{}[\\\\],&*#?]|^[-?|<>=!%@`]');\n\n  Escaper.requiresDoubleQuoting = function(value) {\n    return this.PATTERN_CHARACTERS_TO_ESCAPE.test(value);\n  };\n\n  Escaper.escapeWithDoubleQuotes = function(value) {\n    var result;\n    result = this.PATTERN_MAPPING_ESCAPEES.replace(value, (function(_this) {\n      return function(str) {\n        return _this.MAPPING_ESCAPEES_TO_ESCAPED[str];\n      };\n    })(this));\n    return '\"' + result + '\"';\n  };\n\n  Escaper.requiresSingleQuoting = function(value) {\n    return this.PATTERN_SINGLE_QUOTING.test(value);\n  };\n\n  Escaper.escapeWithSingleQuotes = function(value) {\n    return \"'\" + value.replace(/'/g, \"''\") + \"'\";\n  };\n\n  return Escaper;\n\n})();\n\nmodule.exports = Escaper;\n","// Generated by CoffeeScript 1.12.4\nvar DumpException,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nDumpException = (function(superClass) {\n  extend(DumpException, superClass);\n\n  function DumpException(message, parsedLine, snippet) {\n    this.message = message;\n    this.parsedLine = parsedLine;\n    this.snippet = snippet;\n  }\n\n  DumpException.prototype.toString = function() {\n    if ((this.parsedLine != null) && (this.snippet != null)) {\n      return '<DumpException> ' + this.message + ' (line ' + this.parsedLine + ': \\'' + this.snippet + '\\')';\n    } else {\n      return '<DumpException> ' + this.message;\n    }\n  };\n\n  return DumpException;\n\n})(Error);\n\nmodule.exports = DumpException;\n","// Generated by CoffeeScript 1.12.4\nvar ParseException,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nParseException = (function(superClass) {\n  extend(ParseException, superClass);\n\n  function ParseException(message, parsedLine, snippet) {\n    this.message = message;\n    this.parsedLine = parsedLine;\n    this.snippet = snippet;\n  }\n\n  ParseException.prototype.toString = function() {\n    if ((this.parsedLine != null) && (this.snippet != null)) {\n      return '<ParseException> ' + this.message + ' (line ' + this.parsedLine + ': \\'' + this.snippet + '\\')';\n    } else {\n      return '<ParseException> ' + this.message;\n    }\n  };\n\n  return ParseException;\n\n})(Error);\n\nmodule.exports = ParseException;\n","// Generated by CoffeeScript 1.12.4\nvar ParseMore,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nParseMore = (function(superClass) {\n  extend(ParseMore, superClass);\n\n  function ParseMore(message, parsedLine, snippet) {\n    this.message = message;\n    this.parsedLine = parsedLine;\n    this.snippet = snippet;\n  }\n\n  ParseMore.prototype.toString = function() {\n    if ((this.parsedLine != null) && (this.snippet != null)) {\n      return '<ParseMore> ' + this.message + ' (line ' + this.parsedLine + ': \\'' + this.snippet + '\\')';\n    } else {\n      return '<ParseMore> ' + this.message;\n    }\n  };\n\n  return ParseMore;\n\n})(Error);\n\nmodule.exports = ParseMore;\n","// Generated by CoffeeScript 1.12.4\nvar DumpException, Escaper, Inline, ParseException, ParseMore, Pattern, Unescaper, Utils,\n  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\nPattern = require('./Pattern');\n\nUnescaper = require('./Unescaper');\n\nEscaper = require('./Escaper');\n\nUtils = require('./Utils');\n\nParseException = require('./Exception/ParseException');\n\nParseMore = require('./Exception/ParseMore');\n\nDumpException = require('./Exception/DumpException');\n\nInline = (function() {\n  function Inline() {}\n\n  Inline.REGEX_QUOTED_STRING = '(?:\"(?:[^\"\\\\\\\\]*(?:\\\\\\\\.[^\"\\\\\\\\]*)*)\"|\\'(?:[^\\']*(?:\\'\\'[^\\']*)*)\\')';\n\n  Inline.PATTERN_TRAILING_COMMENTS = new Pattern('^\\\\s*#.*$');\n\n  Inline.PATTERN_QUOTED_SCALAR = new Pattern('^' + Inline.REGEX_QUOTED_STRING);\n\n  Inline.PATTERN_THOUSAND_NUMERIC_SCALAR = new Pattern('^(-|\\\\+)?[0-9,]+(\\\\.[0-9]+)?$');\n\n  Inline.PATTERN_SCALAR_BY_DELIMITERS = {};\n\n  Inline.settings = {};\n\n  Inline.configure = function(exceptionOnInvalidType, objectDecoder) {\n    if (exceptionOnInvalidType == null) {\n      exceptionOnInvalidType = null;\n    }\n    if (objectDecoder == null) {\n      objectDecoder = null;\n    }\n    this.settings.exceptionOnInvalidType = exceptionOnInvalidType;\n    this.settings.objectDecoder = objectDecoder;\n  };\n\n  Inline.parse = function(value, exceptionOnInvalidType, objectDecoder) {\n    var context, result;\n    if (exceptionOnInvalidType == null) {\n      exceptionOnInvalidType = false;\n    }\n    if (objectDecoder == null) {\n      objectDecoder = null;\n    }\n    this.settings.exceptionOnInvalidType = exceptionOnInvalidType;\n    this.settings.objectDecoder = objectDecoder;\n    if (value == null) {\n      return '';\n    }\n    value = Utils.trim(value);\n    if (0 === value.length) {\n      return '';\n    }\n    context = {\n      exceptionOnInvalidType: exceptionOnInvalidType,\n      objectDecoder: objectDecoder,\n      i: 0\n    };\n    switch (value.charAt(0)) {\n      case '[':\n        result = this.parseSequence(value, context);\n        ++context.i;\n        break;\n      case '{':\n        result = this.parseMapping(value, context);\n        ++context.i;\n        break;\n      default:\n        result = this.parseScalar(value, null, ['\"', \"'\"], context);\n    }\n    if (this.PATTERN_TRAILING_COMMENTS.replace(value.slice(context.i), '') !== '') {\n      throw new ParseException('Unexpected characters near \"' + value.slice(context.i) + '\".');\n    }\n    return result;\n  };\n\n  Inline.dump = function(value, exceptionOnInvalidType, objectEncoder) {\n    var ref, result, type;\n    if (exceptionOnInvalidType == null) {\n      exceptionOnInvalidType = false;\n    }\n    if (objectEncoder == null) {\n      objectEncoder = null;\n    }\n    if (value == null) {\n      return 'null';\n    }\n    type = typeof value;\n    if (type === 'object') {\n      if (value instanceof Date) {\n        return value.toISOString();\n      } else if (objectEncoder != null) {\n        result = objectEncoder(value);\n        if (typeof result === 'string' || (result != null)) {\n          return result;\n        }\n      }\n      return this.dumpObject(value);\n    }\n    if (type === 'boolean') {\n      return (value ? 'true' : 'false');\n    }\n    if (Utils.isDigits(value)) {\n      return (type === 'string' ? \"'\" + value + \"'\" : String(parseInt(value)));\n    }\n    if (Utils.isNumeric(value)) {\n      return (type === 'string' ? \"'\" + value + \"'\" : String(parseFloat(value)));\n    }\n    if (type === 'number') {\n      return (value === 2e308 ? '.Inf' : (value === -2e308 ? '-.Inf' : (isNaN(value) ? '.NaN' : value)));\n    }\n    if (Escaper.requiresDoubleQuoting(value)) {\n      return Escaper.escapeWithDoubleQuotes(value);\n    }\n    if (Escaper.requiresSingleQuoting(value)) {\n      return Escaper.escapeWithSingleQuotes(value);\n    }\n    if ('' === value) {\n      return '\"\"';\n    }\n    if (Utils.PATTERN_DATE.test(value)) {\n      return \"'\" + value + \"'\";\n    }\n    if ((ref = value.toLowerCase()) === 'null' || ref === '~' || ref === 'true' || ref === 'false') {\n      return \"'\" + value + \"'\";\n    }\n    return value;\n  };\n\n  Inline.dumpObject = function(value, exceptionOnInvalidType, objectSupport) {\n    var j, key, len1, output, val;\n    if (objectSupport == null) {\n      objectSupport = null;\n    }\n    if (value instanceof Array) {\n      output = [];\n      for (j = 0, len1 = value.length; j < len1; j++) {\n        val = value[j];\n        output.push(this.dump(val));\n      }\n      return '[' + output.join(', ') + ']';\n    } else {\n      output = [];\n      for (key in value) {\n        val = value[key];\n        output.push(this.dump(key) + ': ' + this.dump(val));\n      }\n      return '{' + output.join(', ') + '}';\n    }\n  };\n\n  Inline.parseScalar = function(scalar, delimiters, stringDelimiters, context, evaluate) {\n    var i, joinedDelimiters, match, output, pattern, ref, ref1, strpos, tmp;\n    if (delimiters == null) {\n      delimiters = null;\n    }\n    if (stringDelimiters == null) {\n      stringDelimiters = ['\"', \"'\"];\n    }\n    if (context == null) {\n      context = null;\n    }\n    if (evaluate == null) {\n      evaluate = true;\n    }\n    if (context == null) {\n      context = {\n        exceptionOnInvalidType: this.settings.exceptionOnInvalidType,\n        objectDecoder: this.settings.objectDecoder,\n        i: 0\n      };\n    }\n    i = context.i;\n    if (ref = scalar.charAt(i), indexOf.call(stringDelimiters, ref) >= 0) {\n      output = this.parseQuotedScalar(scalar, context);\n      i = context.i;\n      if (delimiters != null) {\n        tmp = Utils.ltrim(scalar.slice(i), ' ');\n        if (!(ref1 = tmp.charAt(0), indexOf.call(delimiters, ref1) >= 0)) {\n          throw new ParseException('Unexpected characters (' + scalar.slice(i) + ').');\n        }\n      }\n    } else {\n      if (!delimiters) {\n        output = scalar.slice(i);\n        i += output.length;\n        strpos = output.indexOf(' #');\n        if (strpos !== -1) {\n          output = Utils.rtrim(output.slice(0, strpos));\n        }\n      } else {\n        joinedDelimiters = delimiters.join('|');\n        pattern = this.PATTERN_SCALAR_BY_DELIMITERS[joinedDelimiters];\n        if (pattern == null) {\n          pattern = new Pattern('^(.+?)(' + joinedDelimiters + ')');\n          this.PATTERN_SCALAR_BY_DELIMITERS[joinedDelimiters] = pattern;\n        }\n        if (match = pattern.exec(scalar.slice(i))) {\n          output = match[1];\n          i += output.length;\n        } else {\n          throw new ParseException('Malformed inline YAML string (' + scalar + ').');\n        }\n      }\n      if (evaluate) {\n        output = this.evaluateScalar(output, context);\n      }\n    }\n    context.i = i;\n    return output;\n  };\n\n  Inline.parseQuotedScalar = function(scalar, context) {\n    var i, match, output;\n    i = context.i;\n    if (!(match = this.PATTERN_QUOTED_SCALAR.exec(scalar.slice(i)))) {\n      throw new ParseMore('Malformed inline YAML string (' + scalar.slice(i) + ').');\n    }\n    output = match[0].substr(1, match[0].length - 2);\n    if ('\"' === scalar.charAt(i)) {\n      output = Unescaper.unescapeDoubleQuotedString(output);\n    } else {\n      output = Unescaper.unescapeSingleQuotedString(output);\n    }\n    i += match[0].length;\n    context.i = i;\n    return output;\n  };\n\n  Inline.parseSequence = function(sequence, context) {\n    var e, i, isQuoted, len, output, ref, value;\n    output = [];\n    len = sequence.length;\n    i = context.i;\n    i += 1;\n    while (i < len) {\n      context.i = i;\n      switch (sequence.charAt(i)) {\n        case '[':\n          output.push(this.parseSequence(sequence, context));\n          i = context.i;\n          break;\n        case '{':\n          output.push(this.parseMapping(sequence, context));\n          i = context.i;\n          break;\n        case ']':\n          return output;\n        case ',':\n        case ' ':\n        case \"\\n\":\n          break;\n        default:\n          isQuoted = ((ref = sequence.charAt(i)) === '\"' || ref === \"'\");\n          value = this.parseScalar(sequence, [',', ']'], ['\"', \"'\"], context);\n          i = context.i;\n          if (!isQuoted && typeof value === 'string' && (value.indexOf(': ') !== -1 || value.indexOf(\":\\n\") !== -1)) {\n            try {\n              value = this.parseMapping('{' + value + '}');\n            } catch (error) {\n              e = error;\n            }\n          }\n          output.push(value);\n          --i;\n      }\n      ++i;\n    }\n    throw new ParseMore('Malformed inline YAML string ' + sequence);\n  };\n\n  Inline.parseMapping = function(mapping, context) {\n    var done, i, key, len, output, shouldContinueWhileLoop, value;\n    output = {};\n    len = mapping.length;\n    i = context.i;\n    i += 1;\n    shouldContinueWhileLoop = false;\n    while (i < len) {\n      context.i = i;\n      switch (mapping.charAt(i)) {\n        case ' ':\n        case ',':\n        case \"\\n\":\n          ++i;\n          context.i = i;\n          shouldContinueWhileLoop = true;\n          break;\n        case '}':\n          return output;\n      }\n      if (shouldContinueWhileLoop) {\n        shouldContinueWhileLoop = false;\n        continue;\n      }\n      key = this.parseScalar(mapping, [':', ' ', \"\\n\"], ['\"', \"'\"], context, false);\n      i = context.i;\n      done = false;\n      while (i < len) {\n        context.i = i;\n        switch (mapping.charAt(i)) {\n          case '[':\n            value = this.parseSequence(mapping, context);\n            i = context.i;\n            if (output[key] === void 0) {\n              output[key] = value;\n            }\n            done = true;\n            break;\n          case '{':\n            value = this.parseMapping(mapping, context);\n            i = context.i;\n            if (output[key] === void 0) {\n              output[key] = value;\n            }\n            done = true;\n            break;\n          case ':':\n          case ' ':\n          case \"\\n\":\n            break;\n          default:\n            value = this.parseScalar(mapping, [',', '}'], ['\"', \"'\"], context);\n            i = context.i;\n            if (output[key] === void 0) {\n              output[key] = value;\n            }\n            done = true;\n            --i;\n        }\n        ++i;\n        if (done) {\n          break;\n        }\n      }\n    }\n    throw new ParseMore('Malformed inline YAML string ' + mapping);\n  };\n\n  Inline.evaluateScalar = function(scalar, context) {\n    var cast, date, exceptionOnInvalidType, firstChar, firstSpace, firstWord, objectDecoder, raw, scalarLower, subValue, trimmedScalar;\n    scalar = Utils.trim(scalar);\n    scalarLower = scalar.toLowerCase();\n    switch (scalarLower) {\n      case 'null':\n      case '':\n      case '~':\n        return null;\n      case 'true':\n        return true;\n      case 'false':\n        return false;\n      case '.inf':\n        return 2e308;\n      case '.nan':\n        return 0/0;\n      case '-.inf':\n        return 2e308;\n      default:\n        firstChar = scalarLower.charAt(0);\n        switch (firstChar) {\n          case '!':\n            firstSpace = scalar.indexOf(' ');\n            if (firstSpace === -1) {\n              firstWord = scalarLower;\n            } else {\n              firstWord = scalarLower.slice(0, firstSpace);\n            }\n            switch (firstWord) {\n              case '!':\n                if (firstSpace !== -1) {\n                  return parseInt(this.parseScalar(scalar.slice(2)));\n                }\n                return null;\n              case '!str':\n                return Utils.ltrim(scalar.slice(4));\n              case '!!str':\n                return Utils.ltrim(scalar.slice(5));\n              case '!!int':\n                return parseInt(this.parseScalar(scalar.slice(5)));\n              case '!!bool':\n                return Utils.parseBoolean(this.parseScalar(scalar.slice(6)), false);\n              case '!!float':\n                return parseFloat(this.parseScalar(scalar.slice(7)));\n              case '!!timestamp':\n                return Utils.stringToDate(Utils.ltrim(scalar.slice(11)));\n              default:\n                if (context == null) {\n                  context = {\n                    exceptionOnInvalidType: this.settings.exceptionOnInvalidType,\n                    objectDecoder: this.settings.objectDecoder,\n                    i: 0\n                  };\n                }\n                objectDecoder = context.objectDecoder, exceptionOnInvalidType = context.exceptionOnInvalidType;\n                if (objectDecoder) {\n                  trimmedScalar = Utils.rtrim(scalar);\n                  firstSpace = trimmedScalar.indexOf(' ');\n                  if (firstSpace === -1) {\n                    return objectDecoder(trimmedScalar, null);\n                  } else {\n                    subValue = Utils.ltrim(trimmedScalar.slice(firstSpace + 1));\n                    if (!(subValue.length > 0)) {\n                      subValue = null;\n                    }\n                    return objectDecoder(trimmedScalar.slice(0, firstSpace), subValue);\n                  }\n                }\n                if (exceptionOnInvalidType) {\n                  throw new ParseException('Custom object support when parsing a YAML file has been disabled.');\n                }\n                return null;\n            }\n            break;\n          case '0':\n            if ('0x' === scalar.slice(0, 2)) {\n              return Utils.hexDec(scalar);\n            } else if (Utils.isDigits(scalar)) {\n              return Utils.octDec(scalar);\n            } else if (Utils.isNumeric(scalar)) {\n              return parseFloat(scalar);\n            } else {\n              return scalar;\n            }\n            break;\n          case '+':\n            if (Utils.isDigits(scalar)) {\n              raw = scalar;\n              cast = parseInt(raw);\n              if (raw === String(cast)) {\n                return cast;\n              } else {\n                return raw;\n              }\n            } else if (Utils.isNumeric(scalar)) {\n              return parseFloat(scalar);\n            } else if (this.PATTERN_THOUSAND_NUMERIC_SCALAR.test(scalar)) {\n              return parseFloat(scalar.replace(',', ''));\n            }\n            return scalar;\n          case '-':\n            if (Utils.isDigits(scalar.slice(1))) {\n              if ('0' === scalar.charAt(1)) {\n                return -Utils.octDec(scalar.slice(1));\n              } else {\n                raw = scalar.slice(1);\n                cast = parseInt(raw);\n                if (raw === String(cast)) {\n                  return -cast;\n                } else {\n                  return -raw;\n                }\n              }\n            } else if (Utils.isNumeric(scalar)) {\n              return parseFloat(scalar);\n            } else if (this.PATTERN_THOUSAND_NUMERIC_SCALAR.test(scalar)) {\n              return parseFloat(scalar.replace(',', ''));\n            }\n            return scalar;\n          default:\n            if (date = Utils.stringToDate(scalar)) {\n              return date;\n            } else if (Utils.isNumeric(scalar)) {\n              return parseFloat(scalar);\n            } else if (this.PATTERN_THOUSAND_NUMERIC_SCALAR.test(scalar)) {\n              return parseFloat(scalar.replace(',', ''));\n            }\n            return scalar;\n        }\n    }\n  };\n\n  return Inline;\n\n})();\n\nmodule.exports = Inline;\n","// Generated by CoffeeScript 1.12.4\nvar Inline, ParseException, ParseMore, Parser, Pattern, Utils;\n\nInline = require('./Inline');\n\nPattern = require('./Pattern');\n\nUtils = require('./Utils');\n\nParseException = require('./Exception/ParseException');\n\nParseMore = require('./Exception/ParseMore');\n\nParser = (function() {\n  Parser.prototype.PATTERN_FOLDED_SCALAR_ALL = new Pattern('^(?:(?<type>![^\\\\|>]*)\\\\s+)?(?<separator>\\\\||>)(?<modifiers>\\\\+|\\\\-|\\\\d+|\\\\+\\\\d+|\\\\-\\\\d+|\\\\d+\\\\+|\\\\d+\\\\-)?(?<comments> +#.*)?$');\n\n  Parser.prototype.PATTERN_FOLDED_SCALAR_END = new Pattern('(?<separator>\\\\||>)(?<modifiers>\\\\+|\\\\-|\\\\d+|\\\\+\\\\d+|\\\\-\\\\d+|\\\\d+\\\\+|\\\\d+\\\\-)?(?<comments> +#.*)?$');\n\n  Parser.prototype.PATTERN_SEQUENCE_ITEM = new Pattern('^\\\\-((?<leadspaces>\\\\s+)(?<value>.+?))?\\\\s*$');\n\n  Parser.prototype.PATTERN_ANCHOR_VALUE = new Pattern('^&(?<ref>[^ ]+) *(?<value>.*)');\n\n  Parser.prototype.PATTERN_COMPACT_NOTATION = new Pattern('^(?<key>' + Inline.REGEX_QUOTED_STRING + '|[^ \\'\"\\\\{\\\\[].*?) *\\\\:(\\\\s+(?<value>.+?))?\\\\s*$');\n\n  Parser.prototype.PATTERN_MAPPING_ITEM = new Pattern('^(?<key>' + Inline.REGEX_QUOTED_STRING + '|[^ \\'\"\\\\[\\\\{].*?) *\\\\:(\\\\s+(?<value>.+?))?\\\\s*$');\n\n  Parser.prototype.PATTERN_DECIMAL = new Pattern('\\\\d+');\n\n  Parser.prototype.PATTERN_INDENT_SPACES = new Pattern('^ +');\n\n  Parser.prototype.PATTERN_TRAILING_LINES = new Pattern('(\\n*)$');\n\n  Parser.prototype.PATTERN_YAML_HEADER = new Pattern('^\\\\%YAML[: ][\\\\d\\\\.]+.*\\n', 'm');\n\n  Parser.prototype.PATTERN_LEADING_COMMENTS = new Pattern('^(\\\\#.*?\\n)+', 'm');\n\n  Parser.prototype.PATTERN_DOCUMENT_MARKER_START = new Pattern('^\\\\-\\\\-\\\\-.*?\\n', 'm');\n\n  Parser.prototype.PATTERN_DOCUMENT_MARKER_END = new Pattern('^\\\\.\\\\.\\\\.\\\\s*$', 'm');\n\n  Parser.prototype.PATTERN_FOLDED_SCALAR_BY_INDENTATION = {};\n\n  Parser.prototype.CONTEXT_NONE = 0;\n\n  Parser.prototype.CONTEXT_SEQUENCE = 1;\n\n  Parser.prototype.CONTEXT_MAPPING = 2;\n\n  function Parser(offset) {\n    this.offset = offset != null ? offset : 0;\n    this.lines = [];\n    this.currentLineNb = -1;\n    this.currentLine = '';\n    this.refs = {};\n  }\n\n  Parser.prototype.parse = function(value, exceptionOnInvalidType, objectDecoder) {\n    var alias, allowOverwrite, block, c, context, data, e, first, i, indent, isRef, j, k, key, l, lastKey, len, len1, len2, len3, lineCount, m, matches, mergeNode, n, name, parsed, parsedItem, parser, ref, ref1, ref2, refName, refValue, val, values;\n    if (exceptionOnInvalidType == null) {\n      exceptionOnInvalidType = false;\n    }\n    if (objectDecoder == null) {\n      objectDecoder = null;\n    }\n    this.currentLineNb = -1;\n    this.currentLine = '';\n    this.lines = this.cleanup(value).split(\"\\n\");\n    data = null;\n    context = this.CONTEXT_NONE;\n    allowOverwrite = false;\n    while (this.moveToNextLine()) {\n      if (this.isCurrentLineEmpty()) {\n        continue;\n      }\n      if (\"\\t\" === this.currentLine[0]) {\n        throw new ParseException('A YAML file cannot contain tabs as indentation.', this.getRealCurrentLineNb() + 1, this.currentLine);\n      }\n      isRef = mergeNode = false;\n      if (values = this.PATTERN_SEQUENCE_ITEM.exec(this.currentLine)) {\n        if (this.CONTEXT_MAPPING === context) {\n          throw new ParseException('You cannot define a sequence item when in a mapping');\n        }\n        context = this.CONTEXT_SEQUENCE;\n        if (data == null) {\n          data = [];\n        }\n        if ((values.value != null) && (matches = this.PATTERN_ANCHOR_VALUE.exec(values.value))) {\n          isRef = matches.ref;\n          values.value = matches.value;\n        }\n        if (!(values.value != null) || '' === Utils.trim(values.value, ' ') || Utils.ltrim(values.value, ' ').indexOf('#') === 0) {\n          if (this.currentLineNb < this.lines.length - 1 && !this.isNextLineUnIndentedCollection()) {\n            c = this.getRealCurrentLineNb() + 1;\n            parser = new Parser(c);\n            parser.refs = this.refs;\n            data.push(parser.parse(this.getNextEmbedBlock(null, true), exceptionOnInvalidType, objectDecoder));\n          } else {\n            data.push(null);\n          }\n        } else {\n          if (((ref = values.leadspaces) != null ? ref.length : void 0) && (matches = this.PATTERN_COMPACT_NOTATION.exec(values.value))) {\n            c = this.getRealCurrentLineNb();\n            parser = new Parser(c);\n            parser.refs = this.refs;\n            block = values.value;\n            indent = this.getCurrentLineIndentation();\n            if (this.isNextLineIndented(false)) {\n              block += \"\\n\" + this.getNextEmbedBlock(indent + values.leadspaces.length + 1, true);\n            }\n            data.push(parser.parse(block, exceptionOnInvalidType, objectDecoder));\n          } else {\n            data.push(this.parseValue(values.value, exceptionOnInvalidType, objectDecoder));\n          }\n        }\n      } else if ((values = this.PATTERN_MAPPING_ITEM.exec(this.currentLine)) && values.key.indexOf(' #') === -1) {\n        if (this.CONTEXT_SEQUENCE === context) {\n          throw new ParseException('You cannot define a mapping item when in a sequence');\n        }\n        context = this.CONTEXT_MAPPING;\n        if (data == null) {\n          data = {};\n        }\n        Inline.configure(exceptionOnInvalidType, objectDecoder);\n        try {\n          key = Inline.parseScalar(values.key);\n        } catch (error) {\n          e = error;\n          e.parsedLine = this.getRealCurrentLineNb() + 1;\n          e.snippet = this.currentLine;\n          throw e;\n        }\n        if ('<<' === key) {\n          mergeNode = true;\n          allowOverwrite = true;\n          if (((ref1 = values.value) != null ? ref1.indexOf('*') : void 0) === 0) {\n            refName = values.value.slice(1);\n            if (this.refs[refName] == null) {\n              throw new ParseException('Reference \"' + refName + '\" does not exist.', this.getRealCurrentLineNb() + 1, this.currentLine);\n            }\n            refValue = this.refs[refName];\n            if (typeof refValue !== 'object') {\n              throw new ParseException('YAML merge keys used with a scalar value instead of an object.', this.getRealCurrentLineNb() + 1, this.currentLine);\n            }\n            if (refValue instanceof Array) {\n              for (i = j = 0, len = refValue.length; j < len; i = ++j) {\n                value = refValue[i];\n                if (data[name = String(i)] == null) {\n                  data[name] = value;\n                }\n              }\n            } else {\n              for (key in refValue) {\n                value = refValue[key];\n                if (data[key] == null) {\n                  data[key] = value;\n                }\n              }\n            }\n          } else {\n            if ((values.value != null) && values.value !== '') {\n              value = values.value;\n            } else {\n              value = this.getNextEmbedBlock();\n            }\n            c = this.getRealCurrentLineNb() + 1;\n            parser = new Parser(c);\n            parser.refs = this.refs;\n            parsed = parser.parse(value, exceptionOnInvalidType);\n            if (typeof parsed !== 'object') {\n              throw new ParseException('YAML merge keys used with a scalar value instead of an object.', this.getRealCurrentLineNb() + 1, this.currentLine);\n            }\n            if (parsed instanceof Array) {\n              for (l = 0, len1 = parsed.length; l < len1; l++) {\n                parsedItem = parsed[l];\n                if (typeof parsedItem !== 'object') {\n                  throw new ParseException('Merge items must be objects.', this.getRealCurrentLineNb() + 1, parsedItem);\n                }\n                if (parsedItem instanceof Array) {\n                  for (i = m = 0, len2 = parsedItem.length; m < len2; i = ++m) {\n                    value = parsedItem[i];\n                    k = String(i);\n                    if (!data.hasOwnProperty(k)) {\n                      data[k] = value;\n                    }\n                  }\n                } else {\n                  for (key in parsedItem) {\n                    value = parsedItem[key];\n                    if (!data.hasOwnProperty(key)) {\n                      data[key] = value;\n                    }\n                  }\n                }\n              }\n            } else {\n              for (key in parsed) {\n                value = parsed[key];\n                if (!data.hasOwnProperty(key)) {\n                  data[key] = value;\n                }\n              }\n            }\n          }\n        } else if ((values.value != null) && (matches = this.PATTERN_ANCHOR_VALUE.exec(values.value))) {\n          isRef = matches.ref;\n          values.value = matches.value;\n        }\n        if (mergeNode) {\n\n        } else if (!(values.value != null) || '' === Utils.trim(values.value, ' ') || Utils.ltrim(values.value, ' ').indexOf('#') === 0) {\n          if (!(this.isNextLineIndented()) && !(this.isNextLineUnIndentedCollection())) {\n            if (allowOverwrite || data[key] === void 0) {\n              data[key] = null;\n            }\n          } else {\n            c = this.getRealCurrentLineNb() + 1;\n            parser = new Parser(c);\n            parser.refs = this.refs;\n            val = parser.parse(this.getNextEmbedBlock(), exceptionOnInvalidType, objectDecoder);\n            if (allowOverwrite || data[key] === void 0) {\n              data[key] = val;\n            }\n          }\n        } else {\n          val = this.parseValue(values.value, exceptionOnInvalidType, objectDecoder);\n          if (allowOverwrite || data[key] === void 0) {\n            data[key] = val;\n          }\n        }\n      } else {\n        lineCount = this.lines.length;\n        if (1 === lineCount || (2 === lineCount && Utils.isEmpty(this.lines[1]))) {\n          try {\n            value = Inline.parse(this.lines[0], exceptionOnInvalidType, objectDecoder);\n          } catch (error) {\n            e = error;\n            e.parsedLine = this.getRealCurrentLineNb() + 1;\n            e.snippet = this.currentLine;\n            throw e;\n          }\n          if (typeof value === 'object') {\n            if (value instanceof Array) {\n              first = value[0];\n            } else {\n              for (key in value) {\n                first = value[key];\n                break;\n              }\n            }\n            if (typeof first === 'string' && first.indexOf('*') === 0) {\n              data = [];\n              for (n = 0, len3 = value.length; n < len3; n++) {\n                alias = value[n];\n                data.push(this.refs[alias.slice(1)]);\n              }\n              value = data;\n            }\n          }\n          return value;\n        } else if ((ref2 = Utils.ltrim(value).charAt(0)) === '[' || ref2 === '{') {\n          try {\n            return Inline.parse(value, exceptionOnInvalidType, objectDecoder);\n          } catch (error) {\n            e = error;\n            e.parsedLine = this.getRealCurrentLineNb() + 1;\n            e.snippet = this.currentLine;\n            throw e;\n          }\n        }\n        throw new ParseException('Unable to parse.', this.getRealCurrentLineNb() + 1, this.currentLine);\n      }\n      if (isRef) {\n        if (data instanceof Array) {\n          this.refs[isRef] = data[data.length - 1];\n        } else {\n          lastKey = null;\n          for (key in data) {\n            lastKey = key;\n          }\n          this.refs[isRef] = data[lastKey];\n        }\n      }\n    }\n    if (Utils.isEmpty(data)) {\n      return null;\n    } else {\n      return data;\n    }\n  };\n\n  Parser.prototype.getRealCurrentLineNb = function() {\n    return this.currentLineNb + this.offset;\n  };\n\n  Parser.prototype.getCurrentLineIndentation = function() {\n    return this.currentLine.length - Utils.ltrim(this.currentLine, ' ').length;\n  };\n\n  Parser.prototype.getNextEmbedBlock = function(indentation, includeUnindentedCollection) {\n    var data, indent, isItUnindentedCollection, newIndent, removeComments, removeCommentsPattern, unindentedEmbedBlock;\n    if (indentation == null) {\n      indentation = null;\n    }\n    if (includeUnindentedCollection == null) {\n      includeUnindentedCollection = false;\n    }\n    this.moveToNextLine();\n    if (indentation == null) {\n      newIndent = this.getCurrentLineIndentation();\n      unindentedEmbedBlock = this.isStringUnIndentedCollectionItem(this.currentLine);\n      if (!(this.isCurrentLineEmpty()) && 0 === newIndent && !unindentedEmbedBlock) {\n        throw new ParseException('Indentation problem.', this.getRealCurrentLineNb() + 1, this.currentLine);\n      }\n    } else {\n      newIndent = indentation;\n    }\n    data = [this.currentLine.slice(newIndent)];\n    if (!includeUnindentedCollection) {\n      isItUnindentedCollection = this.isStringUnIndentedCollectionItem(this.currentLine);\n    }\n    removeCommentsPattern = this.PATTERN_FOLDED_SCALAR_END;\n    removeComments = !removeCommentsPattern.test(this.currentLine);\n    while (this.moveToNextLine()) {\n      indent = this.getCurrentLineIndentation();\n      if (indent === newIndent) {\n        removeComments = !removeCommentsPattern.test(this.currentLine);\n      }\n      if (removeComments && this.isCurrentLineComment()) {\n        continue;\n      }\n      if (this.isCurrentLineBlank()) {\n        data.push(this.currentLine.slice(newIndent));\n        continue;\n      }\n      if (isItUnindentedCollection && !this.isStringUnIndentedCollectionItem(this.currentLine) && indent === newIndent) {\n        this.moveToPreviousLine();\n        break;\n      }\n      if (indent >= newIndent) {\n        data.push(this.currentLine.slice(newIndent));\n      } else if (Utils.ltrim(this.currentLine).charAt(0) === '#') {\n\n      } else if (0 === indent) {\n        this.moveToPreviousLine();\n        break;\n      } else {\n        throw new ParseException('Indentation problem.', this.getRealCurrentLineNb() + 1, this.currentLine);\n      }\n    }\n    return data.join(\"\\n\");\n  };\n\n  Parser.prototype.moveToNextLine = function() {\n    if (this.currentLineNb >= this.lines.length - 1) {\n      return false;\n    }\n    this.currentLine = this.lines[++this.currentLineNb];\n    return true;\n  };\n\n  Parser.prototype.moveToPreviousLine = function() {\n    this.currentLine = this.lines[--this.currentLineNb];\n  };\n\n  Parser.prototype.parseValue = function(value, exceptionOnInvalidType, objectDecoder) {\n    var e, foldedIndent, matches, modifiers, pos, ref, ref1, val;\n    if (0 === value.indexOf('*')) {\n      pos = value.indexOf('#');\n      if (pos !== -1) {\n        value = value.substr(1, pos - 2);\n      } else {\n        value = value.slice(1);\n      }\n      if (this.refs[value] === void 0) {\n        throw new ParseException('Reference \"' + value + '\" does not exist.', this.currentLine);\n      }\n      return this.refs[value];\n    }\n    if (matches = this.PATTERN_FOLDED_SCALAR_ALL.exec(value)) {\n      modifiers = (ref = matches.modifiers) != null ? ref : '';\n      foldedIndent = Math.abs(parseInt(modifiers));\n      if (isNaN(foldedIndent)) {\n        foldedIndent = 0;\n      }\n      val = this.parseFoldedScalar(matches.separator, this.PATTERN_DECIMAL.replace(modifiers, ''), foldedIndent);\n      if (matches.type != null) {\n        Inline.configure(exceptionOnInvalidType, objectDecoder);\n        return Inline.parseScalar(matches.type + ' ' + val);\n      } else {\n        return val;\n      }\n    }\n    if ((ref1 = value.charAt(0)) === '[' || ref1 === '{' || ref1 === '\"' || ref1 === \"'\") {\n      while (true) {\n        try {\n          return Inline.parse(value, exceptionOnInvalidType, objectDecoder);\n        } catch (error) {\n          e = error;\n          if (e instanceof ParseMore && this.moveToNextLine()) {\n            value += \"\\n\" + Utils.trim(this.currentLine, ' ');\n          } else {\n            e.parsedLine = this.getRealCurrentLineNb() + 1;\n            e.snippet = this.currentLine;\n            throw e;\n          }\n        }\n      }\n    } else {\n      if (this.isNextLineIndented()) {\n        value += \"\\n\" + this.getNextEmbedBlock();\n      }\n      return Inline.parse(value, exceptionOnInvalidType, objectDecoder);\n    }\n  };\n\n  Parser.prototype.parseFoldedScalar = function(separator, indicator, indentation) {\n    var isCurrentLineBlank, j, len, line, matches, newText, notEOF, pattern, ref, text;\n    if (indicator == null) {\n      indicator = '';\n    }\n    if (indentation == null) {\n      indentation = 0;\n    }\n    notEOF = this.moveToNextLine();\n    if (!notEOF) {\n      return '';\n    }\n    isCurrentLineBlank = this.isCurrentLineBlank();\n    text = '';\n    while (notEOF && isCurrentLineBlank) {\n      if (notEOF = this.moveToNextLine()) {\n        text += \"\\n\";\n        isCurrentLineBlank = this.isCurrentLineBlank();\n      }\n    }\n    if (0 === indentation) {\n      if (matches = this.PATTERN_INDENT_SPACES.exec(this.currentLine)) {\n        indentation = matches[0].length;\n      }\n    }\n    if (indentation > 0) {\n      pattern = this.PATTERN_FOLDED_SCALAR_BY_INDENTATION[indentation];\n      if (pattern == null) {\n        pattern = new Pattern('^ {' + indentation + '}(.*)$');\n        Parser.prototype.PATTERN_FOLDED_SCALAR_BY_INDENTATION[indentation] = pattern;\n      }\n      while (notEOF && (isCurrentLineBlank || (matches = pattern.exec(this.currentLine)))) {\n        if (isCurrentLineBlank) {\n          text += this.currentLine.slice(indentation);\n        } else {\n          text += matches[1];\n        }\n        if (notEOF = this.moveToNextLine()) {\n          text += \"\\n\";\n          isCurrentLineBlank = this.isCurrentLineBlank();\n        }\n      }\n    } else if (notEOF) {\n      text += \"\\n\";\n    }\n    if (notEOF) {\n      this.moveToPreviousLine();\n    }\n    if ('>' === separator) {\n      newText = '';\n      ref = text.split(\"\\n\");\n      for (j = 0, len = ref.length; j < len; j++) {\n        line = ref[j];\n        if (line.length === 0 || line.charAt(0) === ' ') {\n          newText = Utils.rtrim(newText, ' ') + line + \"\\n\";\n        } else {\n          newText += line + ' ';\n        }\n      }\n      text = newText;\n    }\n    if ('+' !== indicator) {\n      text = Utils.rtrim(text);\n    }\n    if ('' === indicator) {\n      text = this.PATTERN_TRAILING_LINES.replace(text, \"\\n\");\n    } else if ('-' === indicator) {\n      text = this.PATTERN_TRAILING_LINES.replace(text, '');\n    }\n    return text;\n  };\n\n  Parser.prototype.isNextLineIndented = function(ignoreComments) {\n    var EOF, currentIndentation, ret;\n    if (ignoreComments == null) {\n      ignoreComments = true;\n    }\n    currentIndentation = this.getCurrentLineIndentation();\n    EOF = !this.moveToNextLine();\n    if (ignoreComments) {\n      while (!EOF && this.isCurrentLineEmpty()) {\n        EOF = !this.moveToNextLine();\n      }\n    } else {\n      while (!EOF && this.isCurrentLineBlank()) {\n        EOF = !this.moveToNextLine();\n      }\n    }\n    if (EOF) {\n      return false;\n    }\n    ret = false;\n    if (this.getCurrentLineIndentation() > currentIndentation) {\n      ret = true;\n    }\n    this.moveToPreviousLine();\n    return ret;\n  };\n\n  Parser.prototype.isCurrentLineEmpty = function() {\n    var trimmedLine;\n    trimmedLine = Utils.trim(this.currentLine, ' ');\n    return trimmedLine.length === 0 || trimmedLine.charAt(0) === '#';\n  };\n\n  Parser.prototype.isCurrentLineBlank = function() {\n    return '' === Utils.trim(this.currentLine, ' ');\n  };\n\n  Parser.prototype.isCurrentLineComment = function() {\n    var ltrimmedLine;\n    ltrimmedLine = Utils.ltrim(this.currentLine, ' ');\n    return ltrimmedLine.charAt(0) === '#';\n  };\n\n  Parser.prototype.cleanup = function(value) {\n    var count, i, indent, j, l, len, len1, line, lines, ref, ref1, ref2, smallestIndent, trimmedValue;\n    if (value.indexOf(\"\\r\") !== -1) {\n      value = value.split(\"\\r\\n\").join(\"\\n\").split(\"\\r\").join(\"\\n\");\n    }\n    count = 0;\n    ref = this.PATTERN_YAML_HEADER.replaceAll(value, ''), value = ref[0], count = ref[1];\n    this.offset += count;\n    ref1 = this.PATTERN_LEADING_COMMENTS.replaceAll(value, '', 1), trimmedValue = ref1[0], count = ref1[1];\n    if (count === 1) {\n      this.offset += Utils.subStrCount(value, \"\\n\") - Utils.subStrCount(trimmedValue, \"\\n\");\n      value = trimmedValue;\n    }\n    ref2 = this.PATTERN_DOCUMENT_MARKER_START.replaceAll(value, '', 1), trimmedValue = ref2[0], count = ref2[1];\n    if (count === 1) {\n      this.offset += Utils.subStrCount(value, \"\\n\") - Utils.subStrCount(trimmedValue, \"\\n\");\n      value = trimmedValue;\n      value = this.PATTERN_DOCUMENT_MARKER_END.replace(value, '');\n    }\n    lines = value.split(\"\\n\");\n    smallestIndent = -1;\n    for (j = 0, len = lines.length; j < len; j++) {\n      line = lines[j];\n      if (Utils.trim(line, ' ').length === 0) {\n        continue;\n      }\n      indent = line.length - Utils.ltrim(line).length;\n      if (smallestIndent === -1 || indent < smallestIndent) {\n        smallestIndent = indent;\n      }\n    }\n    if (smallestIndent > 0) {\n      for (i = l = 0, len1 = lines.length; l < len1; i = ++l) {\n        line = lines[i];\n        lines[i] = line.slice(smallestIndent);\n      }\n      value = lines.join(\"\\n\");\n    }\n    return value;\n  };\n\n  Parser.prototype.isNextLineUnIndentedCollection = function(currentIndentation) {\n    var notEOF, ret;\n    if (currentIndentation == null) {\n      currentIndentation = null;\n    }\n    if (currentIndentation == null) {\n      currentIndentation = this.getCurrentLineIndentation();\n    }\n    notEOF = this.moveToNextLine();\n    while (notEOF && this.isCurrentLineEmpty()) {\n      notEOF = this.moveToNextLine();\n    }\n    if (false === notEOF) {\n      return false;\n    }\n    ret = false;\n    if (this.getCurrentLineIndentation() === currentIndentation && this.isStringUnIndentedCollectionItem(this.currentLine)) {\n      ret = true;\n    }\n    this.moveToPreviousLine();\n    return ret;\n  };\n\n  Parser.prototype.isStringUnIndentedCollectionItem = function() {\n    return this.currentLine === '-' || this.currentLine.slice(0, 2) === '- ';\n  };\n\n  return Parser;\n\n})();\n\nmodule.exports = Parser;\n","// Generated by CoffeeScript 1.12.4\nvar Pattern;\n\nPattern = (function() {\n  Pattern.prototype.regex = null;\n\n  Pattern.prototype.rawRegex = null;\n\n  Pattern.prototype.cleanedRegex = null;\n\n  Pattern.prototype.mapping = null;\n\n  function Pattern(rawRegex, modifiers) {\n    var _char, capturingBracketNumber, cleanedRegex, i, len, mapping, name, part, subChar;\n    if (modifiers == null) {\n      modifiers = '';\n    }\n    cleanedRegex = '';\n    len = rawRegex.length;\n    mapping = null;\n    capturingBracketNumber = 0;\n    i = 0;\n    while (i < len) {\n      _char = rawRegex.charAt(i);\n      if (_char === '\\\\') {\n        cleanedRegex += rawRegex.slice(i, +(i + 1) + 1 || 9e9);\n        i++;\n      } else if (_char === '(') {\n        if (i < len - 2) {\n          part = rawRegex.slice(i, +(i + 2) + 1 || 9e9);\n          if (part === '(?:') {\n            i += 2;\n            cleanedRegex += part;\n          } else if (part === '(?<') {\n            capturingBracketNumber++;\n            i += 2;\n            name = '';\n            while (i + 1 < len) {\n              subChar = rawRegex.charAt(i + 1);\n              if (subChar === '>') {\n                cleanedRegex += '(';\n                i++;\n                if (name.length > 0) {\n                  if (mapping == null) {\n                    mapping = {};\n                  }\n                  mapping[name] = capturingBracketNumber;\n                }\n                break;\n              } else {\n                name += subChar;\n              }\n              i++;\n            }\n          } else {\n            cleanedRegex += _char;\n            capturingBracketNumber++;\n          }\n        } else {\n          cleanedRegex += _char;\n        }\n      } else {\n        cleanedRegex += _char;\n      }\n      i++;\n    }\n    this.rawRegex = rawRegex;\n    this.cleanedRegex = cleanedRegex;\n    this.regex = new RegExp(this.cleanedRegex, 'g' + modifiers.replace('g', ''));\n    this.mapping = mapping;\n  }\n\n  Pattern.prototype.exec = function(str) {\n    var index, matches, name, ref;\n    this.regex.lastIndex = 0;\n    matches = this.regex.exec(str);\n    if (matches == null) {\n      return null;\n    }\n    if (this.mapping != null) {\n      ref = this.mapping;\n      for (name in ref) {\n        index = ref[name];\n        matches[name] = matches[index];\n      }\n    }\n    return matches;\n  };\n\n  Pattern.prototype.test = function(str) {\n    this.regex.lastIndex = 0;\n    return this.regex.test(str);\n  };\n\n  Pattern.prototype.replace = function(str, replacement) {\n    this.regex.lastIndex = 0;\n    return str.replace(this.regex, replacement);\n  };\n\n  Pattern.prototype.replaceAll = function(str, replacement, limit) {\n    var count;\n    if (limit == null) {\n      limit = 0;\n    }\n    this.regex.lastIndex = 0;\n    count = 0;\n    while (this.regex.test(str) && (limit === 0 || count < limit)) {\n      this.regex.lastIndex = 0;\n      str = str.replace(this.regex, replacement);\n      count++;\n    }\n    return [str, count];\n  };\n\n  return Pattern;\n\n})();\n\nmodule.exports = Pattern;\n","// Generated by CoffeeScript 1.12.4\nvar Pattern, Unescaper, Utils;\n\nUtils = require('./Utils');\n\nPattern = require('./Pattern');\n\nUnescaper = (function() {\n  function Unescaper() {}\n\n  Unescaper.PATTERN_ESCAPED_CHARACTER = new Pattern('\\\\\\\\([0abt\\tnvfre \"\\\\/\\\\\\\\N_LP]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})');\n\n  Unescaper.unescapeSingleQuotedString = function(value) {\n    return value.replace(/\\'\\'/g, '\\'');\n  };\n\n  Unescaper.unescapeDoubleQuotedString = function(value) {\n    if (this._unescapeCallback == null) {\n      this._unescapeCallback = (function(_this) {\n        return function(str) {\n          return _this.unescapeCharacter(str);\n        };\n      })(this);\n    }\n    return this.PATTERN_ESCAPED_CHARACTER.replace(value, this._unescapeCallback);\n  };\n\n  Unescaper.unescapeCharacter = function(value) {\n    var ch;\n    ch = String.fromCharCode;\n    switch (value.charAt(1)) {\n      case '0':\n        return ch(0);\n      case 'a':\n        return ch(7);\n      case 'b':\n        return ch(8);\n      case 't':\n        return \"\\t\";\n      case \"\\t\":\n        return \"\\t\";\n      case 'n':\n        return \"\\n\";\n      case 'v':\n        return ch(11);\n      case 'f':\n        return ch(12);\n      case 'r':\n        return ch(13);\n      case 'e':\n        return ch(27);\n      case ' ':\n        return ' ';\n      case '\"':\n        return '\"';\n      case '/':\n        return '/';\n      case '\\\\':\n        return '\\\\';\n      case 'N':\n        return ch(0x0085);\n      case '_':\n        return ch(0x00A0);\n      case 'L':\n        return ch(0x2028);\n      case 'P':\n        return ch(0x2029);\n      case 'x':\n        return Utils.utf8chr(Utils.hexDec(value.substr(2, 2)));\n      case 'u':\n        return Utils.utf8chr(Utils.hexDec(value.substr(2, 4)));\n      case 'U':\n        return Utils.utf8chr(Utils.hexDec(value.substr(2, 8)));\n      default:\n        return '';\n    }\n  };\n\n  return Unescaper;\n\n})();\n\nmodule.exports = Unescaper;\n","// Generated by CoffeeScript 1.12.4\nvar Pattern, Utils,\n  hasProp = {}.hasOwnProperty;\n\nPattern = require('./Pattern');\n\nUtils = (function() {\n  function Utils() {}\n\n  Utils.REGEX_LEFT_TRIM_BY_CHAR = {};\n\n  Utils.REGEX_RIGHT_TRIM_BY_CHAR = {};\n\n  Utils.REGEX_SPACES = /\\s+/g;\n\n  Utils.REGEX_DIGITS = /^\\d+$/;\n\n  Utils.REGEX_OCTAL = /[^0-7]/gi;\n\n  Utils.REGEX_HEXADECIMAL = /[^a-f0-9]/gi;\n\n  Utils.PATTERN_DATE = new Pattern('^' + '(?<year>[0-9][0-9][0-9][0-9])' + '-(?<month>[0-9][0-9]?)' + '-(?<day>[0-9][0-9]?)' + '(?:(?:[Tt]|[ \\t]+)' + '(?<hour>[0-9][0-9]?)' + ':(?<minute>[0-9][0-9])' + ':(?<second>[0-9][0-9])' + '(?:\\.(?<fraction>[0-9]*))?' + '(?:[ \\t]*(?<tz>Z|(?<tz_sign>[-+])(?<tz_hour>[0-9][0-9]?)' + '(?::(?<tz_minute>[0-9][0-9]))?))?)?' + '$', 'i');\n\n  Utils.LOCAL_TIMEZONE_OFFSET = new Date().getTimezoneOffset() * 60 * 1000;\n\n  Utils.trim = function(str, _char) {\n    var regexLeft, regexRight;\n    if (_char == null) {\n      _char = '\\\\s';\n    }\n    regexLeft = this.REGEX_LEFT_TRIM_BY_CHAR[_char];\n    if (regexLeft == null) {\n      this.REGEX_LEFT_TRIM_BY_CHAR[_char] = regexLeft = new RegExp('^' + _char + '' + _char + '*');\n    }\n    regexLeft.lastIndex = 0;\n    regexRight = this.REGEX_RIGHT_TRIM_BY_CHAR[_char];\n    if (regexRight == null) {\n      this.REGEX_RIGHT_TRIM_BY_CHAR[_char] = regexRight = new RegExp(_char + '' + _char + '*$');\n    }\n    regexRight.lastIndex = 0;\n    return str.replace(regexLeft, '').replace(regexRight, '');\n  };\n\n  Utils.ltrim = function(str, _char) {\n    var regexLeft;\n    if (_char == null) {\n      _char = '\\\\s';\n    }\n    regexLeft = this.REGEX_LEFT_TRIM_BY_CHAR[_char];\n    if (regexLeft == null) {\n      this.REGEX_LEFT_TRIM_BY_CHAR[_char] = regexLeft = new RegExp('^' + _char + '' + _char + '*');\n    }\n    regexLeft.lastIndex = 0;\n    return str.replace(regexLeft, '');\n  };\n\n  Utils.rtrim = function(str, _char) {\n    var regexRight;\n    if (_char == null) {\n      _char = '\\\\s';\n    }\n    regexRight = this.REGEX_RIGHT_TRIM_BY_CHAR[_char];\n    if (regexRight == null) {\n      this.REGEX_RIGHT_TRIM_BY_CHAR[_char] = regexRight = new RegExp(_char + '' + _char + '*$');\n    }\n    regexRight.lastIndex = 0;\n    return str.replace(regexRight, '');\n  };\n\n  Utils.isEmpty = function(value) {\n    return !value || value === '' || value === '0' || (value instanceof Array && value.length === 0) || this.isEmptyObject(value);\n  };\n\n  Utils.isEmptyObject = function(value) {\n    var k;\n    return value instanceof Object && ((function() {\n      var results;\n      results = [];\n      for (k in value) {\n        if (!hasProp.call(value, k)) continue;\n        results.push(k);\n      }\n      return results;\n    })()).length === 0;\n  };\n\n  Utils.subStrCount = function(string, subString, start, length) {\n    var c, i, j, len, ref, sublen;\n    c = 0;\n    string = '' + string;\n    subString = '' + subString;\n    if (start != null) {\n      string = string.slice(start);\n    }\n    if (length != null) {\n      string = string.slice(0, length);\n    }\n    len = string.length;\n    sublen = subString.length;\n    for (i = j = 0, ref = len; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n      if (subString === string.slice(i, sublen)) {\n        c++;\n        i += sublen - 1;\n      }\n    }\n    return c;\n  };\n\n  Utils.isDigits = function(input) {\n    this.REGEX_DIGITS.lastIndex = 0;\n    return this.REGEX_DIGITS.test(input);\n  };\n\n  Utils.octDec = function(input) {\n    this.REGEX_OCTAL.lastIndex = 0;\n    return parseInt((input + '').replace(this.REGEX_OCTAL, ''), 8);\n  };\n\n  Utils.hexDec = function(input) {\n    this.REGEX_HEXADECIMAL.lastIndex = 0;\n    input = this.trim(input);\n    if ((input + '').slice(0, 2) === '0x') {\n      input = (input + '').slice(2);\n    }\n    return parseInt((input + '').replace(this.REGEX_HEXADECIMAL, ''), 16);\n  };\n\n  Utils.utf8chr = function(c) {\n    var ch;\n    ch = String.fromCharCode;\n    if (0x80 > (c %= 0x200000)) {\n      return ch(c);\n    }\n    if (0x800 > c) {\n      return ch(0xC0 | c >> 6) + ch(0x80 | c & 0x3F);\n    }\n    if (0x10000 > c) {\n      return ch(0xE0 | c >> 12) + ch(0x80 | c >> 6 & 0x3F) + ch(0x80 | c & 0x3F);\n    }\n    return ch(0xF0 | c >> 18) + ch(0x80 | c >> 12 & 0x3F) + ch(0x80 | c >> 6 & 0x3F) + ch(0x80 | c & 0x3F);\n  };\n\n  Utils.parseBoolean = function(input, strict) {\n    var lowerInput;\n    if (strict == null) {\n      strict = true;\n    }\n    if (typeof input === 'string') {\n      lowerInput = input.toLowerCase();\n      if (!strict) {\n        if (lowerInput === 'no') {\n          return false;\n        }\n      }\n      if (lowerInput === '0') {\n        return false;\n      }\n      if (lowerInput === 'false') {\n        return false;\n      }\n      if (lowerInput === '') {\n        return false;\n      }\n      return true;\n    }\n    return !!input;\n  };\n\n  Utils.isNumeric = function(input) {\n    this.REGEX_SPACES.lastIndex = 0;\n    return typeof input === 'number' || typeof input === 'string' && !isNaN(input) && input.replace(this.REGEX_SPACES, '') !== '';\n  };\n\n  Utils.stringToDate = function(str) {\n    var date, day, fraction, hour, info, minute, month, second, tz_hour, tz_minute, tz_offset, year;\n    if (!(str != null ? str.length : void 0)) {\n      return null;\n    }\n    info = this.PATTERN_DATE.exec(str);\n    if (!info) {\n      return null;\n    }\n    year = parseInt(info.year, 10);\n    month = parseInt(info.month, 10) - 1;\n    day = parseInt(info.day, 10);\n    if (info.hour == null) {\n      date = new Date(Date.UTC(year, month, day));\n      return date;\n    }\n    hour = parseInt(info.hour, 10);\n    minute = parseInt(info.minute, 10);\n    second = parseInt(info.second, 10);\n    if (info.fraction != null) {\n      fraction = info.fraction.slice(0, 3);\n      while (fraction.length < 3) {\n        fraction += '0';\n      }\n      fraction = parseInt(fraction, 10);\n    } else {\n      fraction = 0;\n    }\n    if (info.tz != null) {\n      tz_hour = parseInt(info.tz_hour, 10);\n      if (info.tz_minute != null) {\n        tz_minute = parseInt(info.tz_minute, 10);\n      } else {\n        tz_minute = 0;\n      }\n      tz_offset = (tz_hour * 60 + tz_minute) * 60000;\n      if ('-' === info.tz_sign) {\n        tz_offset *= -1;\n      }\n    }\n    date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n    if (tz_offset) {\n      date.setTime(date.getTime() - tz_offset);\n    }\n    return date;\n  };\n\n  Utils.strRepeat = function(str, number) {\n    var i, res;\n    res = '';\n    i = 0;\n    while (i < number) {\n      res += str;\n      i++;\n    }\n    return res;\n  };\n\n  Utils.getStringFromFile = function(path, callback) {\n    var data, fs, j, len1, name, ref, req, xhr;\n    if (callback == null) {\n      callback = null;\n    }\n    xhr = null;\n    if (typeof window !== \"undefined\" && window !== null) {\n      if (window.XMLHttpRequest) {\n        xhr = new XMLHttpRequest();\n      } else if (window.ActiveXObject) {\n        ref = [\"Msxml2.XMLHTTP.6.0\", \"Msxml2.XMLHTTP.3.0\", \"Msxml2.XMLHTTP\", \"Microsoft.XMLHTTP\"];\n        for (j = 0, len1 = ref.length; j < len1; j++) {\n          name = ref[j];\n          try {\n            xhr = new ActiveXObject(name);\n          } catch (error) {}\n        }\n      }\n    }\n    if (xhr != null) {\n      if (callback != null) {\n        xhr.onreadystatechange = function() {\n          if (xhr.readyState === 4) {\n            if (xhr.status === 200 || xhr.status === 0) {\n              return callback(xhr.responseText);\n            } else {\n              return callback(null);\n            }\n          }\n        };\n        xhr.open('GET', path, true);\n        return xhr.send(null);\n      } else {\n        xhr.open('GET', path, false);\n        xhr.send(null);\n        if (xhr.status === 200 || xhr.status === 0) {\n          return xhr.responseText;\n        }\n        return null;\n      }\n    } else {\n      req = require;\n      fs = req('fs');\n      if (callback != null) {\n        return fs.readFile(path, function(err, data) {\n          if (err) {\n            return callback(null);\n          } else {\n            return callback(String(data));\n          }\n        });\n      } else {\n        data = fs.readFileSync(path);\n        if (data != null) {\n          return String(data);\n        }\n        return null;\n      }\n    }\n  };\n\n  return Utils;\n\n})();\n\nmodule.exports = Utils;\n","// Generated by CoffeeScript 1.12.4\nvar Dumper, Parser, Utils, Yaml;\n\nParser = require('./Parser');\n\nDumper = require('./Dumper');\n\nUtils = require('./Utils');\n\nYaml = (function() {\n  function Yaml() {}\n\n  Yaml.parse = function(input, exceptionOnInvalidType, objectDecoder) {\n    if (exceptionOnInvalidType == null) {\n      exceptionOnInvalidType = false;\n    }\n    if (objectDecoder == null) {\n      objectDecoder = null;\n    }\n    return new Parser().parse(input, exceptionOnInvalidType, objectDecoder);\n  };\n\n  Yaml.parseFile = function(path, callback, exceptionOnInvalidType, objectDecoder) {\n    var input;\n    if (callback == null) {\n      callback = null;\n    }\n    if (exceptionOnInvalidType == null) {\n      exceptionOnInvalidType = false;\n    }\n    if (objectDecoder == null) {\n      objectDecoder = null;\n    }\n    if (callback != null) {\n      return Utils.getStringFromFile(path, (function(_this) {\n        return function(input) {\n          var result;\n          result = null;\n          if (input != null) {\n            result = _this.parse(input, exceptionOnInvalidType, objectDecoder);\n          }\n          callback(result);\n        };\n      })(this));\n    } else {\n      input = Utils.getStringFromFile(path);\n      if (input != null) {\n        return this.parse(input, exceptionOnInvalidType, objectDecoder);\n      }\n      return null;\n    }\n  };\n\n  Yaml.dump = function(input, inline, indent, exceptionOnInvalidType, objectEncoder) {\n    var yaml;\n    if (inline == null) {\n      inline = 2;\n    }\n    if (indent == null) {\n      indent = 4;\n    }\n    if (exceptionOnInvalidType == null) {\n      exceptionOnInvalidType = false;\n    }\n    if (objectEncoder == null) {\n      objectEncoder = null;\n    }\n    yaml = new Dumper();\n    yaml.indentation = indent;\n    return yaml.dump(input, inline, 0, exceptionOnInvalidType, objectEncoder);\n  };\n\n  Yaml.stringify = function(input, inline, indent, exceptionOnInvalidType, objectEncoder) {\n    return this.dump(input, inline, indent, exceptionOnInvalidType, objectEncoder);\n  };\n\n  Yaml.load = function(path, callback, exceptionOnInvalidType, objectDecoder) {\n    return this.parseFile(path, callback, exceptionOnInvalidType, objectDecoder);\n  };\n\n  return Yaml;\n\n})();\n\nif (typeof window !== \"undefined\" && window !== null) {\n  window.YAML = Yaml;\n}\n\nif (typeof window === \"undefined\" || window === null) {\n  this.YAML = Yaml;\n}\n\nmodule.exports = Yaml;\n","import {Objects} from \"../../Core/Objects/Objects\";\nimport {FileSystem} from \"../FileSystem/FileSystem\";\nimport {Strings} from \"../../Core/Strings/Strings\";\n\nexport class Config\n{\n\tprotected static configObject: Object = {};\n\tprotected static configDirs: Array<string> = [];\n\tprotected static mergeRules: Array<RegExp> = [];\n\n\tpublic static addConfigDir(configDir: string)\n\t{\n\t\tthis.configDirs.push(configDir);\n\t}\n\n\tpublic static setConfigDirs(configDirs: Array<string>)\n\t{\n\t\tthis.configDirs = configDirs;\n\t}\n\n\tpublic static setConfigArray(configArray: Object)\n\t{\n\t\tthis.configObject = configArray;\n\t}\n\n\tpublic static addMergeRule(regex: RegExp)\n\t{\n\t\tthis.mergeRules.push(regex);\n\t}\n\n\tpublic static setMergeRules(mergeRules: Array<RegExp>)\n\t{\n\t\tthis.mergeRules = mergeRules;\n\t}\n\n\tpublic static generate()\n\t{\n\t\t// Init config cache\n\t\tlet configCache = {};\n\t\tlet mergedConfig = {};\n\n\t\t// For each rule\n\t\tfor (let mergeRuleRegex of this.mergeRules)\n\t\t{\n\t\t\t// For each config directory\n\t\t\tfor (let configDirectory of this.configDirs)\n\t\t\t{\n\t\t\t\t// if there is a cache for the directory\n\t\t\t\tif (typeof configCache[configDirectory] !== 'undefined')\n\t\t\t\t{\n\t\t\t\t\t// loop through file cache\n\t\t\t\t\tfor (let filePath in configCache[configDirectory])\n\t\t\t\t\t\tif (configCache[configDirectory].hasOwnProperty(filePath))\n\t\t\t\t\t{\n\t\t\t\t\t\tlet configArray = configCache[configDirectory][filePath];\n\t\t\t\t\t\t// For each file, merge if it matches the rule\n\t\t\t\t\t\tif (filePath.match(mergeRuleRegex))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmergedConfig = Objects.merge(mergedConfig, configArray);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// If directory doesn't exist\n\t\t\t\t\tif (!FileSystem.fileExists(configDirectory))\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new Error(\"Config directory not found: configDirectory\");\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get all files from the directory\n\t\t\t\t\tlet files = FileSystem.getDirContents(configDirectory);\n\n\t\t\t\t\t// For each file\n\t\t\t\t\tfor (let file of files)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tfile == '.'\n\t\t\t\t\t\t\t||\n\t\t\t\t\t\t\tfile == '..'\n\t\t\t\t\t\t\t||\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t!Strings.endsWith(file, '.yml')\n\t\t\t\t\t\t\t\t&&\n\t\t\t\t\t\t\t\t!Strings.endsWith(file, '.yaml')\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Read it in\n\t\t\t\t\t\tlet fileAsArray = FileSystem.readYaml(configDirectory + '/' + file);\n\n\t\t\t\t\t\tif (!fileAsArray)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (typeof configCache[configDirectory] == 'undefined')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconfigCache[configDirectory] = {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Cache it\n\t\t\t\t\t\tconfigCache[configDirectory][file] = fileAsArray;\n\n\t\t\t\t\t\t// For each file, merge if it matches the rule\n\t\t\t\t\t\tif (file.match(mergeRuleRegex))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmergedConfig = Objects.merge(mergedConfig, fileAsArray);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.configObject = mergedConfig;\n\t\treturn mergedConfig;\n\t}\n\n\tpublic static toObject()\n\t{\n\t\treturn this.configObject;\n\t}\n\n\tpublic static getByPath(configPath: string)\n\t{\n\t\treturn Objects.getByKeyPath(configPath, this.configObject);\n\t}\n}\n","\nexport class FileSystem\n{\n\tprivate static nodeJsFileSystem: any;\n\tprivate static nodeJsPath: any;\n\tprivate static shellJs: any;\n\tprivate static yamlJs: any;\n\n\tpublic static createFile(absoluteFilePath: string): boolean\n\t{\n\t\ttry\n\t\t{\n\t\t\t// Get directory path by removing file name at the end\n\t\t\tlet directoryPath = absoluteFilePath.replace(/[^\\/]+$/, '');\n\t\t\tthis.getShellJs().mkdir('-p', directoryPath);\n\n\t\t\tthis\n\t\t\t\t.getNodeJsFileSystem()\n\t\t\t\t.writeFileSync(absoluteFilePath, '');\n\t\t} catch (exception)\n\t\t{\n\t\t\tthrow exception;\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tpublic static fileExists(absoluteFilePath: string): boolean\n\t{\n\t\tlet fileExists;\n\n\t\ttry\n\t\t{\n\t\t\tthis.getNodeJsFileSystem().statSync(absoluteFilePath);\n\t\t\tfileExists = true;\n\t\t} catch (exception)\n\t\t{\n\t\t\tfileExists = false;\n\t\t}\n\n\t\treturn fileExists;\n\t}\n\n\tpublic static forEachFileRecursively(srcDirPath: string, callback: Function, ignorePatterns: Array<RegExp> = [], iterationCount: number = 0): number\n\t{\n\t\tlet itemsInScope = this.getDirContents(srcDirPath);\n\n\t\tfor (let key in itemsInScope)\n\t\t{\n\t\t\tlet fileName = itemsInScope[key];\n\t\t\tlet fullFilePath = srcDirPath + '/' + fileName;\n\t\t\tlet shouldContinue = false;\n\n\t\t\t// For each ignore pattern\n\t\t\tfor (let key in ignorePatterns)\n\t\t\t{\n\t\t\t\tlet pattern = new RegExp(ignorePatterns[key]);\n\n\t\t\t\t// If full file path matches\n\t\t\t\tif(pattern.test(fullFilePath))\n\t\t\t\t{\n\t\t\t\t\t// Ignore it and return\n\t\t\t\t\tshouldContinue = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (shouldContinue)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (this.isDirectory(fullFilePath))\n\t\t\t{\n\t\t\t\titerationCount = this.forEachFileRecursively(fullFilePath, callback, [], iterationCount);\n\t\t\t}\n\t\t\telse if (this.isFile(fullFilePath))\n\t\t\t{\n\t\t\t\titerationCount++;\n\t\t\t\tcallback(fileName, fullFilePath);\n\t\t\t}\n\t\t}\n\n\t\treturn iterationCount;\n\t}\n\n\tpublic static getDirContents(absoluteDirPath: string): Array<string>\n\t{\n\t\tlet dirItems = this\n\t\t\t.getNodeJsFileSystem()\n\t\t\t.readdirSync(absoluteDirPath);\n\n\t\treturn dirItems.filter((function (fileOrDirName)\n\t\t{\n\t\t\tlet stat = this\n\t\t\t\t.getNodeJsFileSystem()\n\t\t\t\t.statSync(absoluteDirPath + '/' + fileOrDirName);\n\t\t\treturn (stat.isFile() || stat.isDirectory());\n\t\t}).bind(this));\n\t}\n\n\tpublic static getFiles(absoluteDirPath: string): Array<string>\n\t{\n\t\tlet dirItems = this\n\t\t\t.getNodeJsFileSystem()\n\t\t\t.readdirSync(absoluteDirPath);\n\n\t\treturn dirItems.filter((function (fileOrDirName)\n\t\t{\n\t\t\treturn this\n\t\t\t\t.getNodeJsFileSystem()\n\t\t\t\t.statSync(absoluteDirPath + fileOrDirName).isFile();\n\t\t}).bind(this));\n\t}\n\n\tpublic static getRelativePathBetweenDirs(fromPath: string, toPath: string): string\n\t{\n\t\tconst path = this.getNodeJsPath();\n\n\t\treturn path.relative(fromPath, toPath);\n\t}\n\n\tpublic static isDirectory(absoluteFilePath: string): boolean\n\t{\n\t\treturn this\n\t\t\t.getNodeJsFileSystem()\n\t\t\t.statSync(absoluteFilePath).isDirectory();\n\t}\n\n\tpublic static isFile(absoluteFilePath: string): boolean\n\t{\n\t\treturn this\n\t\t\t.getNodeJsFileSystem()\n\t\t\t.statSync(absoluteFilePath).isFile();\n\t}\n\n\tpublic static readAsTextString(absoluteFilePath: string): string\n\t{\n\t\treturn this.getNodeJsFileSystem().readFileSync(absoluteFilePath).toString();\n\t};\n\n\tpublic static readYaml(absoluteFilePath: string): Object\n\t{\n\t\tif (!this.fileExists(absoluteFilePath))\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tlet yamlString = this.readAsTextString(absoluteFilePath);\n\n\t\t// Return imported JavaScript array\n\t\treturn this.getYamlJs().parse(yamlString);\n\t}\n\n\tpublic static removeDir(absoluteDirPath: string): boolean\n\t{\n\t\tlet fs = this.getNodeJsFileSystem();\n\n\t\tif (fs.existsSync(absoluteDirPath))\n\t\t{\n\t\t\tfs.readdirSync(absoluteDirPath).forEach(function (file, index)\n\t\t\t{\n\t\t\t\tvar currentPath = absoluteDirPath + \"/\" + file;\n\n\t\t\t\tif (fs.lstatSync(currentPath).isDirectory())\n\t\t\t\t{\n\t\t\t\t\t// recurse\n\t\t\t\t\tthis.removeDir(currentPath);\n\t\t\t\t} else\n\t\t\t\t{\n\t\t\t\t\t// delete file\n\t\t\t\t\tfs.unlinkSync(currentPath);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfs.rmdirSync(absoluteDirPath);\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t};\n\n\tpublic static removeFile(absoluteFilePath: string): boolean\n\t{\n\t\tlet fs = this.getNodeJsFileSystem();\n\n\t\tfs.unlinkSync(absoluteFilePath);\n\n\t\treturn true;\n\t};\n\n\tpublic static writeFile(absoluteFilePath: string, fileContents: string): boolean\n\t{\n\t\tlet fileExists = this.fileExists(absoluteFilePath);\n\n\t\t// If file doesn't exist\n\t\tif (fileExists == false)\n\t\t{\n\t\t\t// Create it\n\t\t\tthis\n\t\t\t\t.createFile(absoluteFilePath);\n\t\t}\n\n\t\ttry\n\t\t{\n\t\t\tthis.getNodeJsFileSystem().writeFileSync(\n\t\t\t\tabsoluteFilePath,\n\t\t\t\tfileContents,\n\t\t\t\t'utf-8'\n\t\t\t);\n\t\t} catch (exception)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate static getNodeJsFileSystem(): any\n\t{\n\t\tif (!this.nodeJsFileSystem)\n\t\t{\n\t\t\tthis.nodeJsFileSystem = require('fs')\n\t\t}\n\n\t\treturn this.nodeJsFileSystem;\n\t}\n\n\tprivate static getNodeJsPath(): any\n\t{\n\t\tif (!this.nodeJsPath)\n\t\t{\n\t\t\tthis.nodeJsPath = require('path')\n\t\t}\n\n\t\treturn this.nodeJsPath;\n\t}\n\n\tprivate static getYamlJs(): any\n\t{\n\t\tif (!this.yamlJs)\n\t\t{\n\t\t\tthis.yamlJs = require('yamljs')\n\t\t}\n\n\t\treturn this.yamlJs;\n\t}\n\n\tprivate static getShellJs(): any\n\t{\n\t\tif (!this.shellJs)\n\t\t{\n\t\t\tthis.shellJs = require('shelljs')\n\t\t}\n\n\t\treturn this.shellJs;\n\t}\n}","\nexport class Log\n{\n\tprivate static chalk: any;\n\n\tpublic static error(message: string)\n\t{\n\t\tlet prefix = this.getLogPrefix();\n\t\tlet chalk = this.getChalk();\n\t\tglobal.console.log(prefix + chalk.red(message));\n\t}\n\n\tpublic static info(message: string)\n\t{\n\t\tlet prefix = this.getLogPrefix();\n\t\tlet chalk = this.getChalk();\n\t\tglobal.console.log(prefix + chalk.blue(message));\n\t}\n\n\tpublic static success(message: string)\n\t{\n\t\tlet prefix = this.getLogPrefix();\n\t\tlet chalk = this.getChalk();\n\t\tglobal.console.log(prefix + chalk.green(message));\n\t}\n\n\tpublic static warning(message: string)\n\t{\n\t\tlet prefix = this.getLogPrefix();\n\t\tlet chalk = this.getChalk();\n\t\tglobal.console.log(prefix + chalk.yellow(message));\n\t}\n\n\tpublic static getLogPrefix()\n\t{\n\t\tlet chalk = this.getChalk();\n\t\tlet date = new Date();\n\t\tlet hours = date.getHours() < 10 ? '0' + date.getHours() : date.getHours();\n\t\tlet minutes = date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes();\n\t\tlet seconds = date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds();\n\n\t\tlet timeString = hours + ':'\n\t\t\t+ minutes + ':'\n\t\t\t+ seconds;\n\n\t\treturn chalk.white('[') + chalk.grey(timeString) + chalk.white('] ');\n\t}\n\n\tprivate static getChalk(): any\n\t{\n\t\tif (!this.chalk)\n\t\t{\n\t\t\tthis.chalk = require('chalk');\n\t\t}\n\n\t\treturn this.chalk;\n\t}\n}","\nimport { Numbers } from \"../Numbers/Numbers\";\nimport {Objects} from '../Objects/Objects';\n\nexport class Arrays\n{\n\tpublic static inArray(needle: any, haystack: Array<any>): boolean\n\t{\n\t\treturn Boolean(haystack.indexOf(needle) !== -1);\n\t}\n\n\tpublic static clone(array: Array<any>): Array<any>\n\t{\n\t\tif(!Array.isArray(array))\n\t\t{\n\t\t\tthrow new Error(\"Cannot clone array -  must be of type 'array'.\");\n\t\t}\n\n\t\tlet clone = [];\n\n\t\tfor (let key in array)\n\t\t{\n\t\t\tlet arrayItem = array[key];\n\n\t\t\t// If array item is an array\n\t\t\tif (Array.isArray(arrayItem))\n\t\t\t{\n\t\t\t\t// Clone the array\n\t\t\t\tclone.push(this.clone(arrayItem));\n\t\t\t}\n\t\t\t// If value is an object\n\t\t\telse if (typeof arrayItem == 'object')\n\t\t\t{\n\t\t\t\tclone.push(Objects.clone(arrayItem));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tclone.push(arrayItem);\n\t\t\t}\n\t\t}\n\n\t\treturn clone;\n\t}\n\t\n\tpublic static randomItem(array: Array<any>)\n  {\n    return array[Numbers.random(0, array.length - 1)];\n  }\n}\n","import {Objects} from \"../Objects/Objects\";\n\nexport class Config\n{\n\tprivate static configObject: Object = {};\n\n\tpublic static getByPath(\n\t\tconfigPath: string\n\t): any\n\t{\n\t\t// Parse config for value\n\t\treturn Objects.getByKeyPath(configPath, this.configObject);\n\t}\n\n\tpublic static setConfigObject(configObject: Object)\n\t{\n\t\tthis.configObject = configObject;\n\t}\n\n\tpublic static toObject(): Object\n\t{\n\t\treturn this.configObject;\n\t}\n}\n","\nexport class Numbers\n{\n  public static random(min: number = 0, max: number = 100)\n  {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n}\n","\nimport {Arrays} from '../Arrays/Arrays';\n\nexport class Objects\n{\n  public static getByKeyPath(keyPath: string, object: Object, delimiter: string = ':'): any\n  {\n    if (!object)\n    {\n      return null;\n    }\n    \n    // Split path into array of keys\n    let keysArray = keyPath.split(delimiter);\n    \n    // Get the total number of keys\n    let keyCount = keysArray.length;\n    \n    let count = 1;\n    \n    // For each key\n    for (let key of keysArray)\n    {\n      // If key exists\n      if (object.hasOwnProperty(key))\n      {\n        // If this is the last key to be accessed\n        if (count == keyCount)\n        {\n          // Return it\n          return object[key];\n        }\n        \n        // If the key doesn't exist\n        if (!object[key])\n        {\n          return null;\n        }\n        \n        // Adjust object pointer for next key iteration\n        object = object[key];\n        \n        // Increment count\n        count++;\n      } else\n      {\n        return null;\n      }\n    }\n  };\n  \n  public static setByKeyPath(keyPath: string, value: any, target: Object): any\n  {\n    return this.setByPath(keyPath.split(':'), value, target);\n  }\n  \n  private static setByPath(keys: Array<string>, value: any, object: Object): any\n  {\n    let key = keys.shift();\n    \n    if (keys.length)\n    {\n      object[key] = this.setByPath(keys, value, object[key] ? object[key] : {});\n    }\n    else\n    {\n      object[key] = value;\n    }\n    \n    return object;\n  }\n  \n  public static merge(target: Object, ...sourceObjects: Array<Object>): any\n  {\n    // If no sources passed in, return target\n    if (!sourceObjects.length)\n    {\n      return target;\n    }\n    \n    // Get first source item\n    const source = sourceObjects.shift();\n    \n    // Assign functions that need to be used inside \"forEach\" function below\n    let merge = this.merge.bind(this);\n    let isMergebleObject = (function(item) {\n      return item !== null && typeof item === 'object' && !Array.isArray(item);\n    }).bind(this);\n    \n    // If target and source are both mergeble\n    if (isMergebleObject(target) && isMergebleObject(source))\n    {\n      // For each object key in source object\n      Object.keys(source).forEach(function (key: string)\n      {\n        // If value at current key is a mergeable object\n        if (isMergebleObject(source[key]))\n        {\n          // If key doesn't exist on target\n          if (!target[key])\n          {\n            // Set to empty object\n            target[key] = {};\n          }\n          \n          // Deep merge target value and source value\n          merge(target[key], source[key]);\n        }\n        // Else, if value is not a mergable object\n        else\n        {\n          // Set value\n          target[key] = source[key];\n        }\n      });\n    }\n    \n    return merge(target, ...sourceObjects);\n  };\n  \n  public static clone(object: Object): any\n  {\n    if(typeof object !== 'object')\n    {\n      throw new Error(\"Cannot clone object. Source object must be of type 'object'.\");\n    }\n    \n    return this.hydrate(Object.create(object), object);\n  }\n  \n  public static hydrate(\n    dest: Object,\n    source: Object,\n    mutators: Object = {},\n    excludeNullValues: boolean = false,\n    excludeMethods: boolean = true\n  )\n  {\n    if(typeof dest !== 'object' || typeof source !== 'object')\n    {\n      throw new Error(\"Cannot hydrate object. Source and destination object must both be of type 'object'.\");\n    }\n    \n    for (let property in source)\n    {\n      let propertyValue = source[property];\n      \n      if (typeof propertyValue == \"function\" && excludeMethods) continue;\n      \n      if (source[property] == null)\n      {\n        if (excludeNullValues) continue;\n        dest[property] = null\n      }\n      // If a mutator is present\n      else if (mutators.hasOwnProperty(property) && typeof mutators[property] == 'function')\n      {\n        dest[property] = mutators[property](source[property]);\n      }\n      // If property value is an array\n      else if (Array.isArray(propertyValue))\n      {\n        // Clone array\n        dest[property] = Arrays.clone(propertyValue);\n      }\n      // If value is an object\n      else if (typeof propertyValue == 'object')\n      {\n        dest[property] = this.clone(propertyValue);\n      }\n      else\n      {\n        dest[property] = propertyValue;\n      }\n    }\n    \n    return dest;\n  }\n  \n}\n","\nexport class Strings\n{\n  private static readonly RANDOM_STRING_AVAILABLE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  private static readonly PASSWORD_AVAILABLE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789$-_.+!*\\'(),,';\n  \n\tpublic static contains(haystack: string, needle: string): boolean\n\t{\n\t\treturn haystack.indexOf(needle) >= 0;\n\t}\n\n\tpublic static startsWith(string: string, prefix: string): boolean\n\t{\n\t\treturn string.indexOf(prefix) === 0;\n\t}\n\n\tpublic static endsWith(string: string, suffix: string): boolean\n\t{\n\t\treturn string.indexOf(suffix, string.length - suffix.length) >= 0;\n\t}\n  \n  public static random(length: number = 10): string\n  {\n    return this.generateRandomString(length, this.RANDOM_STRING_AVAILABLE_CHARS);\n  }\n  \n  public static password(length: number)\n  {\n    return this.generateRandomString(length, this.PASSWORD_AVAILABLE_CHARS);\n  }\n  \n  public static initialCaps(string: string)\n  {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n  \n  private static generateRandomString(\n    length: number = 10,\n    availableCharacters: string = this.RANDOM_STRING_AVAILABLE_CHARS\n  )\n  {\n    let result = '';\n    let charactersLength = availableCharacters.length;\n    for ( let i = 0; i < length; i++ ) {\n      result += availableCharacters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  }\n}\n","\nimport {Log} from \"../Cli/Log/Log\";\nimport {Objects} from \"../Core/Objects/Objects\";\nimport {Config} from \"../Core/Config/Config\";\n\nexport abstract class AbstractTask\n{\n\tprotected running: boolean = false;\n\tprotected queued: number = 0;\n\tprotected queueLimit: number = 0;\n\n\tpublic constructor(taskConfig: Object = {})\n\t{\n\t\t// Get default task config\n\t\tlet defaultConfig = this.getDefaultTaskConfig();\n\n\t\t// Merge the default config with overrides\n\t\tlet mergedConfigObject = Objects.merge(defaultConfig, taskConfig);\n\n\t\t// Set task config as Config object\n\t\tConfig.setConfigObject(mergedConfigObject);\n\n\t\tthis.validateTaskConfig();\n\t}\n\n\tpublic run()\n\t{\n\t\t// If task is already running\n\t\tif (this.running)\n\t\t{\n\t\t\t// Queue it up\n\t\t\tthis.queue();\n\t\t\treturn;\n\t\t}\n\n\t\tlet taskName = this.constructor['name'];\n\n\t\t// Log task as running\n\t\tthis.running = true;\n\t\tLog.info(taskName + ': started');\n\n\t\t// Execute the task\n\t\tthis.exec();\n\n\t\tthis.running = false;\n\t\tLog.success(taskName + ': finished');\n\n\t\tthis.shutdown();\n\t}\n\n\tprotected getDefaultTaskConfig(): Object\n\t{\n\t\treturn {};\n\t}\n\n\tprotected getRequiredTaskConfigPaths(): Object\n\t{\n\t\treturn {};\n\t}\n\n\tprotected validateTaskConfig(): this\n\t{\n\t\tthis.validateTaskConfigForRequiredPathsAndTypes();\n\n\t\treturn this;\n\t}\n\n\tprotected validateTaskConfigForRequiredPathsAndTypes(): this\n\t{\n\t\tlet requiredTaskConfigPaths = this.getRequiredTaskConfigPaths();\n\n\t\tfor (let requiredConfigPath in requiredTaskConfigPaths)\n\t\t\tif (requiredTaskConfigPaths.hasOwnProperty(requiredConfigPath))\n\t\t\t{\n\t\t\t\tlet requiredType = requiredTaskConfigPaths[requiredConfigPath];\n\n\t\t\t\tlet requiredConfigValue = Config.getByPath(requiredConfigPath);\n\n\t\t\t\tlet actualType = typeof requiredConfigValue;\n\n\t\t\t\tif (!requiredConfigValue)\n\t\t\t\t{\n\t\t\t\t\tLog.error(this.constructor['name'] + ': Invalid task config. Required key path not found: ' + requiredConfigPath);\n\t\t\t\t\tglobal.process.exit();\n\t\t\t\t}\n\t\t\t\telse if (actualType !== requiredType)\n\t\t\t\t{\n\t\t\t\t\tLog.error(this.constructor['name'] + ': Invalid task config value for \"' + requiredConfigPath + '\". Expected type of ' + requiredType + ', received ' + actualType);\n\t\t\t\t\tglobal.process.exit();\n\t\t\t\t}\n\t\t\t}\n\n\t\treturn this;\n\t}\n\n\tprotected queue()\n\t{\n\t\tif (this.queued < this.queueLimit)\n\t\t{\n\t\t\tthis.queued++;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tprotected shutdown()\n\t{\n\t\t// Remove one from the queue\n\t\tthis.queued--;\n\n\t\t// If there are tasks in the queue\n\t\tif (this.queued > 0)\n\t\t{\n\t\t\t// Run it\n\t\t\tthis.run();\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tprotected exec()\n\t{\n\t\tthrow new Error('exec() method must be implemented');\n\t}\n}","\nimport {AbstractTask} from \"./AbstractTask\";\nimport {TaskInterface} from \"./TaskInterface\";\nimport {Config as CoreConfig} from \"../Core/Config/Config\";\nimport {Config as CliConfig} from \"../Cli/Config/Config\";\nimport {FileSystem} from \"../Cli/FileSystem/FileSystem\";\n\nexport class ConfigTask extends AbstractTask implements TaskInterface\n{\n\tprotected exec()\n\t{\n\t\tlet configDirPath = CoreConfig.getByPath('configDirPath');\n\t\tlet outputFilePath = CoreConfig.getByPath('outputFilePath');\n\t\tlet outputFormat = CoreConfig.getByPath('outputFormat');\n\t\tlet variableName = CoreConfig.getByPath('variableName');\n\n\t\t// Add trailing slash to configDirPath if needed\n\t\tif (configDirPath.charAt(configDirPath.length -1) !== '/')\n\t\t{\n\t\t\tconfigDirPath+= '/';\n\t\t}\n\n\t\tCliConfig.addConfigDir(configDirPath);\n\t\tCliConfig.addMergeRule(/default-.+/);\n\n\t\tlet env = global.process.env.ENV || null;\n\n\t\tif (env)\n\t\t{\n\t\t\tCliConfig.addMergeRule(new RegExp(env + '-.+'));\n\t\t}\n\n\t\tlet mergedConfig = CliConfig.generate();\n\n\t\t// If config file already exists\n\t\t// Empty it\n\t\tFileSystem.writeFile(outputFilePath, '');\n\n\t\t// If no configs exists, we want to write an empty object to the config file\n\t\t// rather than the word 'null'\n\t\tif (!mergedConfig)\n\t\t{\n\t\t\tmergedConfig = {};\n\t\t}\n\n\t\tlet fileContents = JSON.stringify(mergedConfig, null, 2);\n\n\t\t// Format file contents depending on format provided\n\t\tif (outputFormat == 'json')\n\t\t{\n\t\t\t// Do nothing (file contents formatted for json by default)\n\t\t}\n\t\tif (outputFormat === 'node')\n\t\t{\n\t\t\tfileContents = '\\nmodule.exports = ' + fileContents + ';\\n';\n\t\t}\n\t\telse if (outputFormat == 'js')\n\t\t{\n\t\t\tfileContents = '\\nvar ' + variableName + ' = ' + fileContents + ';\\n';\n\t\t}\n\n\t\t// Write new generated config to output file\n\t\tFileSystem.writeFile(\n\t\t\toutputFilePath,\n\t\t\tfileContents\n\t\t);\n\n\t\treturn true;\n\t}\n\n\tprotected getRequiredTaskConfigPaths(): Object\n\t{\n\t\treturn {\n\t\t\tconfigDirPath: \"string\",\n\t\t\toutputFilePath: \"string\",\n\t\t\toutputFormat: \"string\",\n\t\t\tvariableName: \"string\"\n\t\t};\n\t}\n\n\tprotected getDefaultTaskConfig(): Object\n\t{\n\t\tlet cwd = process.cwd();\n\n\t\treturn {\n\t\t\tconfigDirPath: cwd + '/config',\n\t\t\toutputFilePath: cwd + \"/cache/config.js\",\n\t\t\toutputFormat: \"js\",\n\t\t\tvariableName: \"config\"\n\t\t};\n\t}\n}","module.exports = require(\"assert\");","module.exports = require(\"child_process\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"util\");"],"sourceRoot":""}